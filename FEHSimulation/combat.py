import math
from heapq import nlargest

from hero import *

# CONSTANTS
HP = 0
ATK = 1
SPD = 2
DEF = 3
RES = 4

ATTACKER = 0
DEFENDER = 1

UNCONDITIONAL = 0
GIVEN_UNIT_SURVIVED = 1
GIVEN_UNIT_ATTACKED = 2
GIVEN_SPECIAL_TRIGGERED = 3
GIVEN_SPECIAL_MAX = 4

# A set of modifiers that change how combat and attacks work
# One is held by each unit in combat and keeps track of their effects
class HeroModifiers:
    def __init__(self):
        self.is_initiator = False
        self.tile = None

        # Conditions
        self.allies_within_n = []

        self.hp_percentage = 1
        self.hp_above_25_percent = False
        self.hp_above_50_percent = False
        self.hp_above_75_percent = False
        self.hp_100_percent = False

        # Exact HP and Special counts at start of combat, before burn damage/healing
        self.start_of_combat_HP: int = -1
        self.start_of_combat_special: int = -1

        # Has effectiveness
        self.effective = False
        self.effectiveness_types = [] # Array of weapon types this unit is effective against

        # Advantage types
        # List which weapon colors this unit is effective against
        self.triangle_advantage_types = []
        self.triangle_disadvantage_types = []

        # Weapon triangle advantage
        self.triangle_advantage = 0

        # Triangle Adept Skill Level (as decimal)
        self.triangle_adept_level = 0

        # Cancel Affinity Level
        # 0 - no effect on TA skills
        # 1 - disable all TA skills
        # 2 - disable self TA skills, disable foe's TA skills if at WP disadvantage
        # 3 - disable self TA skills, reverse foe's TA skills if at WP disadvantage
        self.cancel_affinity_level = 0

        # Attack twice per hit
        self.brave: bool = False

        # Enables defender to attack first
        self.vantage: bool = False
        self.self_desperation: bool = False
        self.other_desperation: bool = False

        # Disable's this unit's skills that change attack ordering (vantage & desperation)
        self.hardy_bearing: bool = False

        # Perform potent follow up
        self.potent_percentage = 0

        self.potent_percent_strong = []
        self.potent_percent_weak = []

        self.potent_FU = False # Enables usage of an 80%/40% Potent hit
        self.potent_new_percentage = 0  # Set Potent hit percentage to 100 on special ready/activation

        # Follow-ups
        self.follow_ups_skill = 0  # granted by skills
        self.follow_ups_spd = 0  # granted by speed
        self.follow_up_denials = 0  # granted by skills

        # Increase Speed Difference
        self.outspeed_factor = 5

        # Null Follow-Up (NFU)
        self.defensive_NFU = False  # Disables skills that guarantee foe's skill-based follow-ups
        self.offensive_NFU = False  # Disable skills that deny self's skill-based follow-ups

        # Speed Null Follow-Up (Grants Offensive and Defensive NFU if unit's SPD > foe's SPD, common effect)
        self.speed_NFU = False

        # If special disabled during combat
        self.special_disabled = False
        self.disable_def_sp = False # disable defensive specials on foe's specials
        self.disable_def_sp_on_foe_FU = False # disable defensive specials on foe's special follow up attacks

        # Increased/decreased special charge gain per hit
        self.spGainOnAtk = 0  # when self attacks
        self.spLossOnAtk = 0
        self.spGainWhenAtkd = 0  # when self is attacked
        self.spLossWhenAtkd = 0

        # Pre-attack special jumps
        self.sp_jump_first = 0  # before this unit's first attack
        self.sp_jump_first_brave = 0 # before this unit's first brave attack
        self.sp_jump_followup = 0  # before this unit's first follow-up
        self.sp_jump_any_followup = 0 # before any of unit's follow-ups (regular, brave, potent)

        self.sp_jump_foe_first = 0  # before foe's first attack
        self.sp_jump_foe_first_brave = 0  # before foe's first brave attack
        self.sp_jump_foe_followup = 0  # before foe's first follow-up attack

        # Disable increased/decreased special charge gain (Tempo)
        self.defensive_tempo = False  # disable foe +1 charge per attack
        self.offensive_tempo = False  # disable self -1 charge per attack

        # Apply Defensive Specials twice per hit (Hardy/Shield Fighter)
        self.apply_def_sp_twice = False

        # Charge give charge immediately after first special activation (Supreme Astra, Negating Fang II)
        self.triggered_sp_charge = 0

        # If special has been triggered any time before or during this combat
        self.special_triggered = False

        # Non-special percentage-based damage reduction
        self.DR_all_hits_NSP = []  # present on all hits
        self.DR_first_hit_NSP = []  # present on first hit
        self.DR_first_strikes_NSP = []  # present on first hit (first two if foe has Brave enabled)
        self.DR_second_strikes_NSP = []  # present on follow-up and potent hits
        self.DR_consec_strikes_NSP = []  # present on second hit onwards iff consecutive
        self.DR_sp_trigger_next_only_NSP = []  # present only after first special activation

        # Special percentage-based damage reduction
        self.DR_all_hits_SP = []  # present on all hits
        self.DR_first_strikes_SP = []  # present on all hits
        self.DR_sp_trigger_next_only_SP = []  # present on next hit once per combat
        self.DR_sp_trigger_next_all_SP = []  # present on next hit, can trigger multiple times (Divine Pulse)
        self.DR_sp_trigger_next_all_SP_CACHE = []

        # Armored Beacon/Floe/Blaze, Supreme Heaven, etc.
        self.DR_sp_trigger_by_any_special_SP = []  # present after unit or foe's special is ready or triggered
        self.DR_sp_trigger_by_any_special_non_twin_SP = [] # Emblem Ike Ring
        self.DR_sp_trigger_twin = False

        # DR specific to certain specials
        self.DR_great_aether_SP = False  # based on special count and if hits are consecutive
        self.DR_dragon_fang_shot_SP = False # based on special count and res difference
        self.DR_king_making_SP = False # based on special count
        self.DR_aether_path_SP = False # based on special count or triggered
        self.DR_fire_emblem_SP = False # based on num allies with [Fire Emblem]

        # Stat-scaling Damage Reduction, (SPD, 4) in this array means: grants all hits DR = difference between self and foe's SPD * 4%, (max 40%)
        self.stat_scaling_DR = []

        # Damage reduction reduction (partial DR pierce)
        # Each source of non-special damage reduction is reduced by each value in this array * 100%
        self.damage_reduction_reduction = []
        self.damage_reduction_reduction_finish = [] # only applied if own special is ready or triggered

        # Damage reduction piercing (full DR pierce)
        self.sp_pierce_DR = False  # DR pierce on offensive special only
        self.pierce_DR_FU = False  # DR pierce on follow-up
        self.always_pierce_DR = False  # DR pierce on any hit
        self.sp_pierce_after_def_sp = False  # DR pierce on next hit after defensive special trigger (laguz friend)
        self.sp_pierce_after_def_sp_CACHE = False  # cache to store if the next hit should pierce

        # True damage
        self.true_all_hits = 0  # damage added to all hits
        self.true_first_hit = 0  # damage added on only first hit
        self.true_finish = 0  # added after own special is currently ready or has triggered
        self.true_after_foe_first = 0  # added after foe's first attack
        self.true_sp = 0  # added only on offensive special trigger

        self.true_sp_next = 0  # damage added after each special trigger (divine pulse, laguz friend on defensive special)
        self.true_sp_next_CACHE = 0  #

        self.true_damage_taken_30 = False

        # Alternative for Atk stat on special trigger
        # 0 - 100% of Atk (Default)
        # 1 - 150% of Def (Sandstorm)
        # 2 - 150% of Res (Indignant Bow)
        self.alternative_sp_stat = 0

        # An array to easily store true damage given by a particular stat (ex. (20, RES) means "deals damage = 20% of unit's Res")
        self.true_stat_damages = []

        # Same as above, but for using foe's stats for true damage
        self.true_stat_damages_from_foe = []

        # Bane - set damage to foe's HP - 1 if damage < foe's HP - 1
        self.bane_sp = False
        self.bane_first_hit = False

        # Enables extra true damage and DR piercing based on current HP
        self.resonance = 0
        self.bernie_resonance = False

        # True damage reduction
        self.TDR_all_hits = 0
        self.TDR_first_strikes = 0
        self.TDR_second_strikes = 0
        self.TDR_on_foe_sp = 0
        self.TDR_on_def_sp = 0

        # Same as true_stat_damages for true damage reduction
        self.TDR_stats = []
        self.TDR_first_stats = []
        self.TDR_special_stats = []

        # Níðhöggr
        self.TDR_snake = False

        self.reduce_self_sp_damage = 0  # emblem marth

        self.retaliatory_reduced = 0  # enables divine recreation
        self.nonstacking_retaliatory_damage = -1  # divine recreation damage

        self.stacking_retaliatory_damage = 0  # ice mirror, negating fang

        self.retaliatory_full_damages = []  # full retaliatory percentages for brash assault/counter roar
        self.retaliatory_full_damages_CACHE = []  # temporarily holds full retaliatory
        self.most_recent_atk = 0  # used in calculating this vvvvv
        self.retaliatory_next = 0  # brash assault/counter roar uses most recent hit's damage

        # Life Unending II uses this
        self.foe_first_attack_reduction = -1

        # no chat, I'm not calling it "precombat damage"
        self.self_burn_damage = 0
        self.foe_burn_damage = 0
        self.capped_foe_burn_damage = 0

        # healing
        self.all_hits_heal = 0
        self.follow_up_heal = 0
        self.finish_mid_combat_heal = 0  # heal applied to all hits granted that special is ready or triggered
        self.surge_heal = 0  # healing when triggering a special
        self.initial_heal = 0  # BoL 4

        # reduces the effect of deep wounds
        self.deep_wounds_allowance = []
        self.disable_foe_healing = False
        self.disable_deep_wounds = False

        # miracle
        self.pseudo_miracle = False

        # Can give an HP condition for pseudo-miracle effects to trigger
        # HP must be greater or equal to this percentage
        self.pseudo_miracle_hp_cond = 1

        self.circlet_miracle = False
        self.disable_foe_miracle = False

        self.pseudo_miracle_triggered = False

        self.vali_miracle = False

        # staff
        self.wrathful_staff = False
        self.disable_foe_wrathful = False

        # hexblade
        self.hexblade = False
        self.special_hexblade = False
        self.disable_foe_hexblade = False

        # defensive terrain
        self.defensive_terrain = False

def move_letters(s, letter):
    if letter not in ['A', 'D']:
        return "Invalid letter"

    first_occurrence = s.find(letter)
    if first_occurrence == -1:
        return s

    remaining_part = s[first_occurrence + 1:]
    moved_letters = s[first_occurrence] * remaining_part.count(letter)
    new_string = s[:first_occurrence + 1] + moved_letters + remaining_part.replace(letter, '')

    return new_string


# Perform a combat between two heroes
def simulate_combat(attacker, defender, is_in_sim, turn, spaces_moved_by_atkr, combat_effects, aoe_triggered, units_left_to_act, savior_triggered, style, ar_structs=None, atkHPCur=None, defHPCur=None):

    # Invalid Combat if one unit is dead
    # or if attacker does not have weapon
    if attacker.HPcur <= 0 or defender.HPcur <= 0 or attacker.weapon is None:
        raise Exception("Invalid Combat: One hero is either already dead, or the attacker has no weapon.")

    # who possesses the weapon triangle advantage
    # 0 - attacker
    # 1 - defender
    # -1 - neither
    wpnAdvHero: int = -1

    # lists of attacker/defender's skills & stats
    atkSkills = attacker.getSkills()
    atkStats = attacker.getStats()
    atkPhantomStats = [0] * 5

    defSkills = defender.getSkills()
    defStats = defender.getStats()
    defPhantomStats = [0] * 5

    # stores important modifiers going into combat
    atkr = HeroModifiers()
    defr = HeroModifiers()

    # atk/defHPCur used for forecasts, attacker/defender.HPcur otherwise
    if atkHPCur is None: atkHPCur = attacker.HPcur
    if defHPCur is None: defHPCur = defender.HPcur

    # stores HP value at the start of combat
    atkr.start_of_combat_HP = atkHPCur
    defr.start_of_combat_HP = defHPCur

    # Tracks special count
    atkSpCountCur = attacker.specialCount
    defSpCountCur = defender.specialCount

    # Stores special count value at the start of combat
    atkr.start_of_combat_special = atkSpCountCur
    defr.start_of_combat_special = defSpCountCur

    # Special is counted as triggered if the AOE triggered
    atkr.special_triggered = aoe_triggered

    # Get which colors each unit has an advantage against
    if attacker.wpnType in RED_WEAPONS:
        atkr.triangle_advantage_types = GREEN_WEAPONS
    elif attacker.wpnType in BLUE_WEAPONS:
        atkr.triangle_advantage_types = RED_WEAPONS
    elif attacker.wpnType in GREEN_WEAPONS:
        atkr.triangle_advantage_types = BLUE_WEAPONS

    if defender.wpnType in RED_WEAPONS:
        defr.triangle_advantage_types = GREEN_WEAPONS
    elif defender.wpnType in BLUE_WEAPONS:
        defr.triangle_advantage_types = RED_WEAPONS
    elif defender.wpnType in GREEN_WEAPONS:
        defr.triangle_advantage_types = BLUE_WEAPONS

    # Which unit is initiating combat
    atkr.is_initiator = True

    # Tile
    atkr.tile = attacker.attacking_tile
    defr.tile = defender.tile

    # Count add Phantom stats
    atkPhantomStats[SPD] += attacker.get_phantom_stat(SPD)
    atkPhantomStats[RES] += attacker.get_phantom_stat(RES)
    defPhantomStats[SPD] += defender.get_phantom_stat(SPD)
    defPhantomStats[RES] += defender.get_phantom_stat(RES)

    # Stored combat buffs
    atkCombatBuffs = [0] * 5
    defCombatBuffs = [0] * 5

    # Nice convenient methods
    def allies_within_n(unit, tile, n):
        unit_list = tile.unitsWithinNSpaces(n)
        returned_list = []

        for x in unit_list:
            if unit.isAllyOf(x):
                returned_list.append(x)

        return returned_list

    def foes_within_n(unit, tile, n):
        unit_list = tile.unitsWithinNSpaces(n)
        returned_list = []

        for x in unit_list:
            if unit.isEnemyOf(x):
                returned_list.append(x)

        return returned_list

    # CONDITIONS

    # common position-based conditions
    atkAdjacentToAlly = []
    atkAllyWithin2Spaces = []
    atkAllyWithin3Spaces = []
    atkAllyWithin4Spaces = []

    defAdjacentToAlly = []
    defAllyWithin2Spaces = []
    defAllyWithin3Spaces = []
    defAllyWithin4Spaces = []

    atkAllyWithin1RowsCols = []
    defAllyWithin1RowsCols = []

    atkAllyWithin3RowsCols = []
    defAllyWithin3RowsCols = []

    atkFoeWithin3RowsCols = []
    defFoeWithin3RowsCols = []

    atkAllAllies = []
    defAllAllies = []

    atkWithin1SpaceOfSupportPartner = False
    atkWithin2SpaceOfSupportPartner = False

    defWithin1SpaceOfSupportPartner = False
    defWithin2SpaceOfSupportPartner = False

    if is_in_sim:
        atkAdjacentToAlly = allies_within_n(attacker, attacker.attacking_tile, 1)
        atkAllyWithin2Spaces = allies_within_n(attacker, attacker.attacking_tile, 2)
        atkAllyWithin3Spaces = allies_within_n(attacker, attacker.attacking_tile, 3)
        atkAllyWithin4Spaces = allies_within_n(attacker, attacker.attacking_tile, 4)

        atkAllAllies = allies_within_n(attacker, attacker.attacking_tile, 25)

        defAdjacentToAlly = allies_within_n(defender, defender.tile, 1)
        defAllyWithin2Spaces = allies_within_n(defender, defender.tile, 2)
        defAllyWithin3Spaces = allies_within_n(defender, defender.tile, 3)
        defAllyWithin4Spaces = allies_within_n(defender, defender.tile, 4)

        defAllAllies = allies_within_n(defender, defender.tile, 25)

        # Within 1 Row or Column
        tiles_within_1_row_or_column = attacker.attacking_tile.tilesWithinNRowsOrCols(1, 1)
        for tile in tiles_within_1_row_or_column:
            if tile.hero_on and tile.hero_on.isAllyOf(attacker):
                atkAllyWithin1RowsCols.append(tile.hero_on)

        tiles_within_1_row_or_column = defender.tile.tilesWithinNRowsOrCols(1, 1)
        for tile in tiles_within_1_row_or_column:
            if tile.hero_on and tile.hero_on.isAllyOf(defender):
                defAllyWithin1RowsCols.append(tile.hero_on)

        # Within 3 Rows of Cols
        tiles_within_3_col = attacker.attacking_tile.tilesWithinNCols(3)
        tiles_within_3_row = attacker.attacking_tile.tilesWithinNRows(3)
        tiles_within_3_row_or_column = list(set(tiles_within_3_col) | set(tiles_within_3_row))

        for tile in tiles_within_3_row_or_column:
            if tile.hero_on and tile.hero_on.isAllyOf(attacker):
                atkAllyWithin3RowsCols.append(tile.hero_on)
            if tile.hero_on and tile.hero_on.isEnemyOf(attacker):
                atkFoeWithin3RowsCols.append(tile.hero_on)

        tiles_within_3_col = defender.tile.tilesWithinNCols(3)
        tiles_within_3_row = defender.tile.tilesWithinNRows(3)
        tiles_within_3_row_or_column = list(set(tiles_within_3_col) | set(tiles_within_3_row))

        for tile in tiles_within_3_row_or_column:
            if tile.hero_on and tile.hero_on.isAllyOf(defender):
                defAllyWithin3RowsCols.append(tile.hero_on)
            if tile.hero_on and tile.hero_on.isEnemyOf(defender):
                defFoeWithin3RowsCols.append(tile.hero_on)

        # Support Partner
        for ally in atkAdjacentToAlly:
            if ally.isSupportOf(attacker):
                atkWithin1SpaceOfSupportPartner = True

        for ally in atkAllyWithin2Spaces:
            if ally.isSupportOf(attacker):
                atkWithin2SpaceOfSupportPartner = True

        for ally in defAdjacentToAlly:
            if ally.isSupportOf(defender):
                defWithin1SpaceOfSupportPartner = True

        for ally in defAllyWithin2Spaces:
            if ally.isSupportOf(defender):
                defWithin2SpaceOfSupportPartner = True

    disableSupportEffects = False

    if "You get NOTHING" in atkSkills or "You get NOTHING" in defSkills or "sfLuciaBoost" in atkSkills or "sfLuciaBoost" in defSkills:
        disableSupportEffects = True

        atkWithin1SpaceOfSupportPartner = False
        atkWithin2SpaceOfSupportPartner = False
        defWithin1SpaceOfSupportPartner = False
        defWithin2SpaceOfSupportPartner = False

    atkFoeWithin2Spaces = []  # Includes opposing unit in combat!
    defFoeWithin2Spaces = []  # Includes opposing unit in combat!

    atkFoeWithin3Spaces = []  # Includes opposing unit in combat!
    defFoeWithin3Spaces = []  # Includes opposing unit in combat!

    if is_in_sim:
        atkFoeWithin2Spaces = foes_within_n(attacker, attacker.attacking_tile, 2)
        defFoeWithin2Spaces = foes_within_n(defender, defender.tile, 2)

        atkFoeWithin3Spaces = foes_within_n(attacker, attacker.attacking_tile, 3)
        defFoeWithin3Spaces = foes_within_n(defender, defender.tile, 3)

    # Allies of a certain movment type within 2 spaces
    atkInfAlliesWithin2Spaces = []
    atkCavAlliesWithin2Spaces = []
    atkFlyAlliesWithin2Spaces = []
    atkArmAlliesWithin2Spaces = []

    defInfAlliesWithin2Spaces = []
    defCavAlliesWithin2Spaces = []
    defFlyAlliesWithin2Spaces = []
    defArmAlliesWithin2Spaces = []

    atk2SpaceMovementArr = [atkInfAlliesWithin2Spaces, atkCavAlliesWithin2Spaces, atkFlyAlliesWithin2Spaces, atkArmAlliesWithin2Spaces]
    def2SpaceMovementArr = [defInfAlliesWithin2Spaces, defCavAlliesWithin2Spaces, defFlyAlliesWithin2Spaces, defArmAlliesWithin2Spaces]

    for x in atkAllyWithin2Spaces: atk2SpaceMovementArr[x.move].append(x)
    for x in defAllyWithin2Spaces: def2SpaceMovementArr[x.move].append(x)

    # common HP-based conditions
    atkHPGreaterEqual25Percent = atkHPCur / atkStats[HP] >= 0.25
    atkHPGreaterEqual50Percent = atkHPCur / atkStats[HP] >= 0.50
    atkHPGreaterEqual75Percent = atkHPCur / atkStats[HP] >= 0.75
    atkHPEqual100Percent = atkHPCur == atkStats[HP]

    defHPGreaterEqual25Percent = defHPCur / defStats[HP] >= 0.25
    defHPGreaterEqual50Percent = defHPCur / defStats[HP] >= 0.50
    defHPGreaterEqual75Percent = defHPCur / defStats[HP] >= 0.75
    defHPEqual100Percent = defHPCur == defStats[HP]

    # AR Structures
    cur_ar_structs_standing = -1
    cur_ar_structs_destroyed = -1

    VALID_DEF_STRUCTS = ["Fortress", "Bolt Tower", "Tactics Room", "Healing Tower", "Panic Manor",
                         "Catapult", "Duo's Hindrance", "Calling Circle", "Bright Shrine", "Dark Shrine"]

    if ar_structs:
        cur_ar_structs_standing = 0
        cur_ar_structs_destroyed = 0

        for struct in ar_structs:
            if struct.struct_type == 2 and struct.health != 0 and (struct.name in VALID_DEF_STRUCTS or "School" in struct.name):
                cur_ar_structs_standing += 1
            elif struct.struct_type == 2 and struct.health == 0 and (struct.name in VALID_DEF_STRUCTS or "School" in struct.name):
                cur_ar_structs_destroyed += 1

    # HANDLING OF COMBATFIELDS
    # ----------------------------------------------------------

    # disable foe skills (feud effect)
    atkHasFeud = False
    defHasFeud = False

    RED = 0
    BLUE = 1
    GREEN = 2
    COLORLESS = 3

    atkColorFeuds = [False, False, False, False]
    defColorFeuds = [False, False, False, False]

    # Skills that have feud in them:

    # Impenetrable Dark/Void - Bramimond
    if "feud" in atkSkills: defHasFeud = True
    if "feud" in defSkills: atkHasFeud = True

    if "luciaFeud" in atkSkills or "luciaFeud" in defSkills:
        atkHasFeud = True
        defHasFeud = True

    if Status.Feud in attacker.statusNeg: atkHasFeud = True
    if Status.Feud in defender.statusNeg: defHasFeud = True

    # General unconditional feud effect (Used currently for L!Lyn's Swift Mulagir)
    if "within3Feud" in atkSkills and atkAllyWithin3Spaces: defHasFeud = True
    if "within3Feud" in defSkills and defAllyWithin3Spaces: atkHasFeud = True

    # Tailwind Shuriken (Refine Base) - NI!Lyn
    if "ninjalynrefineBoost" in atkSkills and atkHPGreaterEqual25Percent: defHasFeud = True
    if "ninjalynrefineBoost" in defSkills and defHPGreaterEqual25Percent: atkHasFeud = True

    # Bow of Frelia (Refine Eff) - CH!Innes
    if "c zachary chad" in atkSkills: defHasFeud = True
    if "c zachary chad" in defSkills and defAllyWithin2Spaces: atkHasFeud = True

    # Holy Yewfelle (Refine Base) - Ullr
    if "ullrRefineBoost" in atkSkills: defHasFeud = True
    if "ullrRefineBoost" in defSkills and atkHPGreaterEqual75Percent: atkHasFeud = True

    # Divine Yewfelle - Brigid
    if "brigidBoost" in atkSkills: defHasFeud = True
    if "brigidBoost" in defSkills and defAllyWithin2Spaces: atkHasFeud = True

    # Red Feud
    if "redFeud" in atkSkills:
        defColorFeuds[RED] = True
        if defender.wpnType in RED_WEAPONS:
            defHasFeud = True
            defCombatBuffs = [x - 4 for x in defCombatBuffs]

    if "redFeud" in defSkills:
        atkColorFeuds[RED] = True
        if attacker.wpnType in RED_WEAPONS:
            atkHasFeud = True
            atkCombatBuffs = [x - 4 for x in atkCombatBuffs]

    # Blue Feud
    if "blueFeud" in atkSkills:
        defColorFeuds[BLUE] = True
        if defender.wpnType in BLUE_WEAPONS:
            defHasFeud = True
            defCombatBuffs = [x - 4 for x in defCombatBuffs]

    if "blueFeud" in defSkills:
        atkColorFeuds[BLUE] = True
        if attacker.wpnType in BLUE_WEAPONS:
            atkHasFeud = True
            atkCombatBuffs = [x - 4 for x in atkCombatBuffs]

    # Green Feud
    if "greenFeud" in atkSkills:
        defColorFeuds[GREEN] = True
        if defender.wpnType in GREEN_WEAPONS:
            defHasFeud = True
            defCombatBuffs = [x - 4 for x in defCombatBuffs]

    if "greenFeud" in defSkills:
        atkColorFeuds[GREEN] = True
        if attacker.wpnType in GREEN_WEAPONS:
            atkHasFeud = True
            atkCombatBuffs = [x - 4 for x in atkCombatBuffs]

    # Colorless Feud
    if "colorlessFeud" in atkSkills:
        defColorFeuds[COLORLESS] = True
        if defender.wpnType in COLORLESS_WEAPONS:
            defHasFeud = True
            defCombatBuffs = [x - 4 for x in defCombatBuffs]

    if "colorlessFeud" in defSkills:
        atkColorFeuds[COLORLESS] = True
        if attacker.wpnType in COLORLESS_WEAPONS:
            atkHasFeud = True
            atkCombatBuffs = [x - 4 for x in atkCombatBuffs]

    # I hate Sylgr
    # These arrays store values when Sylgr user is nearby, but not in combat
    atkYlgrStats = [[], [], [], []]
    defYlgrStats = [[], [], [], []]

    # And now I hate Kitsune Fang too
    atkKadenStats = [[], [], [], []]
    defKadenStats = [[], [], [], []]

    # add effects of CombatFields
    if is_in_sim:

        # Get positioning of either unit
        atkr_x = attacker.attacking_tile.x_coord
        atkr_y = attacker.attacking_tile.y_coord
        atkr_coords = (atkr_x, atkr_y)

        defr_x = defender.tile.x_coord
        defr_y = defender.tile.y_coord
        defr_coords = (defr_x, defr_y)

        # Iterate through all possible combat fields
        for e in combat_effects:

            # If not on canvas (Dead, Cohort)
            if not e.owner.tile:
                continue

            # Owner location
            owner_x = e.owner.tile.x_coord
            owner_y = e.owner.tile.y_coord

            # Correction for forecast involving the attacker's movement
            if e.owner == attacker:
                owner_x = atkr_x
                owner_y = atkr_y

            owner_coords = (owner_x, owner_y)

            targeted_side = int(e.owner.side == e.affectedSide)

            if e.owner.side == attacker.side:
                if e.affectedSide == attacker.side and Status.TimesGrip in e.owner.statusNeg:
                    atkHasFeud = True

                feud_present = atkHasFeud
                color_feuds = atkColorFeuds
            else:
                if e.affectedSide == defender.side and Status.TimesGrip in e.owner.statusNeg:
                    defHasFeud = True

                feud_present = defHasFeud
                color_feuds = defColorFeuds

            if targeted_side == attacker.side:
                coords = atkr_coords
                updated_skills = atkSkills
                afflicted = attacker
                modifier = atkr
                unit_combat_buffs = atkCombatBuffs

                ylgr_stats = atkYlgrStats
                kaden_stats = atkKadenStats
            else:
                coords = defr_coords
                updated_skills = defSkills
                afflicted = defender
                modifier = defr
                unit_combat_buffs = defCombatBuffs

                ylgr_stats = defYlgrStats
                kaden_stats = defKadenStats

            condition = e.condition(afflicted)
            in_range = e.range(coords)(owner_coords)

            if e.owner.wpnType in RED_WEAPONS:
                color_int = RED
            if e.owner.wpnType in BLUE_WEAPONS:
                color_int = BLUE
            if e.owner.wpnType in GREEN_WEAPONS:
                color_int = GREEN
            else:
                color_int = COLORLESS

            feud_not_present = (not feud_present and not color_feuds[color_int]) or e.owner in [attacker, defender] # Disables skill of all foes excluding foe in combat

            if in_range and (e.owner != afflicted) and condition and feud_not_present:

                # Sylgr (Refine Eff) - Ylgr
                # Sets values in the Ylgr arrays equal to the current bonus of the field owner, not subject to neutralization
                # Only for cases where the field owner is not in combat and is instead only near them
                if "ylgrField_f" in e.effect:
                    if Status.Panic not in e.owner.statusNeg or Status.NullPanic in e.owner.statusPos:
                        i = 1
                        while i < 5:
                            ylgr_stats[i - 1].append(e.owner.buffs[i])
                            i += 1

                elif "kadenField_f" in e.effect:
                    if Status.Panic not in e.owner.statusNeg or Status.NullPanic in e.owner.statusPos:
                        i = 1
                        while i < 5:
                            kaden_stats[i - 1].append(e.owner.buffs[i])
                            i += 1

                elif "hfGrimaScowl_f" in e.effect:
                    if e.owner.get_visible_stat(RES) + e.owner.get_phantom_stat_(RES) >= afflicted.get_visible_stat(RES) + afflicted.get_phantom_stat_(RES) + 5:
                        updated_skills = {x: updated_skills.get(x, 0) + e.effect.get(x, 0) for x in set(updated_skills).union(e.effect)}

                elif "fellProtection_f" in e.effect:
                    if e.owner.get_visible_stat(RES) + e.owner.get_phantom_stat_(RES) >= afflicted.get_visible_stat(RES) + afflicted.get_phantom_stat_(RES) + 5:
                        updated_skills = {x: updated_skills.get(x, 0) + e.effect.get(x, 0) for x in set(updated_skills).union(e.effect)}

                elif "fellSuccessor_f" in e.effect:
                    if e.owner.get_visible_stat(RES) + e.owner.get_phantom_stat_(RES) >= afflicted.get_visible_stat(RES) + afflicted.get_phantom_stat_(RES) + 5:
                        updated_skills = {x: updated_skills.get(x, 0) + e.effect.get(x, 0) for x in set(updated_skills).union(e.effect)}

                # Achimenes Furl (Base) - V!F!Robin
                elif "vRobinRein" in e.effect:
                    if allies_within_n(e.owner, e.owner.tile, 20):
                        updated_skills = {x: updated_skills.get(x, 0) + e.effect.get(x, 0) for x in set(updated_skills).union(e.effect)}

                elif "vRobinHeal" in e.effect:
                    owner_allies = allies_within_n(e.owner, e.owner.tile, 20)

                    owner_move_counts = {0: 0, 1: 0, 2: 0, 3: 0}
                    move_types = 0

                    for ally in owner_allies:
                        if owner_move_counts[ally.move] == 0:
                            move_types += 1

                        owner_move_counts[ally.move] += 1

                    if move_types >= 3:
                        updated_skills = {x: updated_skills.get(x, 0) + e.effect.get(x, 0) for x in set(updated_skills).union(e.effect)}

                elif "sacrificeStaff_f" in e.effect or "martyrsStaff_f" in e.effect:
                    if not e.owner.once_per_map_cond:
                        updated_skills = {x: updated_skills.get(x, 0) + e.effect.get(x, 0) for x in set(updated_skills).union(e.effect)}

                elif "frammeChainGuard_f" in e.effect:
                    if e.owner.HPcur == e.owner.visible_stats[HP]:
                        modifier.DR_all_hits_NSP.append(min(e.owner.HPcur, 60))
                    else:
                        modifier.DR_all_hits_NSP.append(min(trunc(e.owner.HPcur * 0.50), 60))

                    updated_skills = {x: updated_skills.get(x, 0) + e.effect.get(x, 0) for x in set(updated_skills).union(e.effect)}

                elif "deMarisaBraveTarget" in e.effect:
                    if afflicted.isSupportOf(e.owner):
                        updated_skills = {x: updated_skills.get(x, 0) + e.effect.get(x, 0) for x in set(updated_skills).union(e.effect)}
                    else:
                        if not any([other_ally for other_ally in allies_within_n(e.owner, modifier.tile, 20) if other_ally.isSupportOf(e.owner)]):
                            highest_hp = []

                            for ally in allies_within_n(e.owner, modifier.tile, 20):
                                if not highest_hp or ally.get_visible_stat(HP) == highest_hp[0].get_visible_stat(HP):
                                    highest_hp.append(ally)
                                elif ally.get_visible_stat(HP) > highest_hp[0].get_visible_stat(HP):
                                    highest_hp = [ally]

                            if afflicted in highest_hp:
                                updated_skills = {x: updated_skills.get(x, 0) + e.effect.get(x, 0) for x in set(updated_skills).union(e.effect)}

                elif "vRheaMiracle_f" in e.effect:
                    if not e.owner.once_per_turn_cond:
                        updated_skills = {x: updated_skills.get(x, 0) + e.effect.get(x, 0) for x in set(updated_skills).union(e.effect)}

                elif "nyVelTarget" in e.effect:
                    if afflicted.isSupportOf(e.owner):
                        updated_skills = {x: updated_skills.get(x, 0) + e.effect.get(x, 0) for x in set(updated_skills).union(e.effect)}
                    else:
                        if not any([other_ally for other_ally in allies_within_n(e.owner, modifier.tile, 20) if other_ally.isSupportOf(e.owner)]):
                            highest_def = []

                            for ally in allies_within_n(e.owner, modifier.tile, 20):
                                if not highest_def or ally.get_visible_stat(DEF) == highest_def[0].get_visible_stat(DEF):
                                    highest_def.append(ally)
                                elif ally.get_visible_stat(DEF) > highest_def[0].get_visible_stat(DEF):
                                    highest_def = [ally]

                            if afflicted in highest_def:
                                updated_skills = {x: updated_skills.get(x, 0) + e.effect.get(x, 0) for x in set(updated_skills).union(e.effect)}

                elif "whistlestopSummit_f" in e.effect:
                    for i in range(1, 5):
                        unit_combat_buffs[i] += e.owner.get_total_buff(i)

                    modifier.true_all_hits += trunc(e.owner.get_bonus_total() * 0.50)

                else:
                    updated_skills = {x: updated_skills.get(x, 0) + e.effect.get(x, 0) for x in set(updated_skills).union(e.effect)}

            # Add to the dict of skills
            if targeted_side == attacker.side:
                atkSkills = updated_skills
            if targeted_side == defender.side:
                defSkills = updated_skills

    # Unit's special is triggered by unit's attack (Offense, AOE)
    atkSpTriggeredByAttack = attacker.special is not None and attacker.special.type in ["Offense", "AOE"]
    defSpTriggeredByAttack = defender.special is not None and defender.special.type in ["Offense", "AOE"]

    # Apply defensive terrain
    if is_in_sim:
        atkr.defensive_terrain = attacker.attacking_tile.is_def_terrain
        defr.defensive_terrain = defender.tile.is_def_terrain

    # Panic Status Effect
    AtkPanicFactor = 1
    DefPanicFactor = 1

    # buffs + debuffs calculation
    # throughout combat, PanicFactor * buff produces the current buff value
    if Status.Panic in attacker.statusNeg: AtkPanicFactor *= -1
    if Status.Panic in defender.statusNeg: DefPanicFactor *= -1

    if Status.NullPanic in attacker.statusPos: AtkPanicFactor = 1
    if Status.NullPanic in defender.statusPos: DefPanicFactor = 1

    # apply buffs/debuffs to base stats before combat
    atkStats[ATK] += attacker.buffs[ATK] * AtkPanicFactor + attacker.debuffs[ATK]
    atkStats[SPD] += attacker.buffs[SPD] * AtkPanicFactor + attacker.debuffs[SPD]
    atkStats[DEF] += attacker.buffs[DEF] * AtkPanicFactor + attacker.debuffs[DEF]
    atkStats[RES] += attacker.buffs[RES] * AtkPanicFactor + attacker.debuffs[RES]

    defStats[ATK] += defender.buffs[ATK] * DefPanicFactor + defender.debuffs[ATK]
    defStats[SPD] += defender.buffs[SPD] * DefPanicFactor + defender.debuffs[SPD]
    defStats[DEF] += defender.buffs[DEF] * DefPanicFactor + defender.debuffs[DEF]
    defStats[RES] += defender.buffs[RES] * DefPanicFactor + defender.debuffs[RES]

    # Ignore range (distant/close counter)
    ignore_range = False

    # prevent counterattacks from defender (sweep, flash)
    cannotCounter = False
    disableCannotCounter = False

    # each array within the array holds a set with 4 components:
    # index 0 - what effect is given out? (buffs, debuffs, damage, healing, end turn)
    # index 1 - what is the level of this effect, or what status? (+7 spd buff, 10 damage, Status.Gravity, etc.)
    # index 2 - who is it being given to? (self, only allies, target and their allies, etc.)
    # index 3 - across what area? (only self, adjacent to self, 2 spaces of foe, 3 rows or 3 columns or self, etc.)
    # for more specifics of keywords, go to the end_of_combat method in field_helpers.py

    # slot 0 - unconditional
    # slot 1 - given that the unit survives
    # slot 2 - given that the unit attacks the foe
    # TO BE ADDED
    # slot 3 - if unit's special triggered
    # slot 4 - if unit's special at its max count
    atkPostCombatEffs = [[], [], [], [], []]
    defPostCombatEffs = [[], [], [], [], []]

    # Which bonuses and penalties are neutralized
    atkBonusesNeutralized = [False] * 5
    defBonusesNeutralized = [False] * 5
    atkPenaltiesNeutralized = [False] * 5
    defPenaltiesNeutralized = [False] * 5

    # SKILLS (LET THE MAYHEM BEGIN)  -----------------------------------------------------------------------------------------------------------------------

    # GROUP 1
    # Skills within this group can perform the following:
    # - Use stats at start of combat
    # - Neutralize Bonuses/Penalties
    # - Add combat buffs
    # Cannot perform the following:
    # - Use stats during combat
    # - Use exact values of bonuses/penalties, or if skill uses [Bonus] or [Penalty] keywords

    # The cool new loop I'm gonna use to roughly cut skill code in half
    for hero in [attacker, defender]:

        # Assign variables
        if hero == attacker:
            other = defender

            combat_buffs = atkCombatBuffs
            skills = atkSkills

            modifier_self = atkr
            modifier_other = defr
        else:
            other = attacker

            combat_buffs = defCombatBuffs
            skills = defSkills

            modifier_self = defr
            modifier_other = atkr

        # Resonance: Blades (Status)
        if Status.ResonanceBlades in hero.statusPos:
            combat_buffs[ATK] += 4
            combat_buffs[SPD] += 4

        # Resonance: Shields (Status)
        if Status.ResonanceShields in hero.statusPos:
            combat_buffs[DEF] += 4
            combat_buffs[RES] += 4

            if hero.unitCombatInitiates == 0:
                modifier_other.follow_up_denials -= 1

        # Incited (Status)
        if Status.Incited in hero.statusPos:
            combat_buffs = [x + min(spaces_moved_by_atkr, 3) for x in combat_buffs]


    if Status.Discord in attacker.statusNeg:
        value = min(2 + len(atkAllyWithin2Spaces), 5)
        atkCombatBuffs = [x - value for x in atkCombatBuffs]

    if Status.Discord in defender.statusNeg:
        value = min(2 + len(defAllyWithin2Spaces), 5)
        defCombatBuffs = [x - value for x in defCombatBuffs]

    if Status.NullMiracle in attacker.statusNeg:
        defr.disable_foe_miracle = True

    if Status.NullMiracle in defender.statusNeg:
        atkr.disable_foe_miracle = True

    if Status.DamageReductionPierce50 in attacker.statusPos:
        atkr.damage_reduction_reduction.append(50)

    if Status.DamageReductionPierce50 in defender.statusPos:
        defr.damage_reduction_reduction.append(50)

    # Support partner effects
    if atkWithin1SpaceOfSupportPartner and not atkWithin2SpaceOfSupportPartner:
        atkCombatBuffs = [x + 2 for x in atkCombatBuffs]

    if atkWithin2SpaceOfSupportPartner:
        atkCombatBuffs = [x + 1 for x in atkCombatBuffs]

    if defWithin1SpaceOfSupportPartner and not defWithin2SpaceOfSupportPartner:
        defCombatBuffs = [x + 2 for x in defCombatBuffs]

    if defWithin2SpaceOfSupportPartner:
        defCombatBuffs = [x + 1 for x in defCombatBuffs]

    # A SKILLS

    # BLOW SKILLS (Death Blow, Mirror Strike, etc.)
    if "atkBlow" in atkSkills: atkCombatBuffs[ATK] += atkSkills["atkBlow"]
    if "spdBlow" in atkSkills: atkCombatBuffs[SPD] += atkSkills["spdBlow"]
    if "defBlow" in atkSkills: atkCombatBuffs[DEF] += atkSkills["defBlow"]
    if "resBlow" in atkSkills: atkCombatBuffs[RES] += atkSkills["resBlow"]

    # All stats on player initiation
    if "spectrumBlow" in atkSkills:
        atkCombatBuffs = [x + atkSkills["spectrumBlow"] for x in atkCombatBuffs]

    # Follow-up denial on player initiation (Sturdy Impact, etc.)
    if "impactDenial" in atkSkills:
        defr.follow_up_denials -= 1

    if "impactDenialW" in atkSkills:
        defr.follow_up_denials -= 1

    # Blade Session
    if "sessionBlow" in atkSkills:
        atkCombatBuffs[ATK] += min(atkSkills["sessionBlow"] + len([ally for ally in atkAllAllies if ally not in units_left_to_act]) * atkSkills["sessionBlow"], atkSkills["sessionBlow"] * 3)
        atkCombatBuffs[SPD] += min(atkSkills["sessionBlow"] + len([ally for ally in atkAllAllies if ally not in units_left_to_act]) * atkSkills["sessionBlow"], atkSkills["sessionBlow"] * 3)

    if "sessionBlowSe" in atkSkills:
        atkCombatBuffs[ATK] += min(atkSkills["sessionBlowSe"] + len([ally for ally in atkAllAllies if ally not in units_left_to_act]) * atkSkills["sessionBlowSe"], atkSkills["sessionBlowSe"] * 3)
        atkCombatBuffs[SPD] += min(atkSkills["sessionBlowSe"] + len([ally for ally in atkAllAllies if ally not in units_left_to_act]) * atkSkills["sessionBlowSe"], atkSkills["sessionBlowSe"] * 3)

    # Surge Sparrow & others
    if "surgeHeal" in atkSkills and attacker.special:
        atkr.surge_heal += trunc(atkStats[HP] * min(0.10 + 0.20 * attacker.specialMax, 1))

    # Remote Sparrow/Sturdy/Mirror DR
    if "remoteDR" in atkSkills:
        atkr.DR_first_hit_NSP.append(30)

    # Flared Sparrow
    if "applyFlare" in atkSkills:
        atkr.foe_burn_damage += 7
        atkPostCombatEffs[GIVEN_UNIT_SURVIVED].append(("dv_flame", 1, "foe", "one"))

    # Fleeting Echo
    if "fleetingEcho" in atkSkills:
        atkr.DR_first_hit_NSP.append(30)

    # Fortifications
    if "fortificationStone" in atkSkills:
        atkCombatBuffs[DEF] += 6
        atkCombatBuffs[RES] += 6
        atkr.TDR_on_foe_sp += 10

    if "fortificationStone" in defSkills and defr.tile.divine_vein_turn >= 1:
        ignore_range = True

    # Sly Blow Skills
    if "slyBlow" in atkSkills:
        atkr.follow_ups_skill += 1

        if len(attacker.statusPos) >= 2 or len(defender.statusNeg) >= 2:
            atkr.true_all_hits += 5

    if "slyEcho" in atkSkills:
        atkr.follow_ups_skill += 1

        if len(attacker.statusPos) >= 2 or len(defender.statusNeg) >= 2:
            atkr.true_all_hits += 5

    # STANCE SKILLS (Warding Stance, Steady Posture, etc.)
    if "atkStance" in defSkills: defCombatBuffs[ATK] += defSkills["atkStance"]
    if "spdStance" in defSkills: defCombatBuffs[SPD] += defSkills["spdStance"]
    if "defStance" in defSkills: defCombatBuffs[DEF] += defSkills["defStance"]
    if "resStance" in defSkills: defCombatBuffs[RES] += defSkills["resStance"]

    # All stats on enemy initiation
    if "spectrumStance" in defSkills:
        defCombatBuffs = [x + defSkills["spectrumStance"] for x in defCombatBuffs]

    # Shield Session
    if "sessionStance" in defSkills:
        defCombatBuffs[DEF] += max(3 * defSkills["sessionStance"] - len([foe for foe in atkAllAllies if foe not in units_left_to_act]), defSkills["sessionStance"])
        defCombatBuffs[RES] += max(3 * defSkills["sessionStance"] - len([foe for foe in atkAllAllies if foe not in units_left_to_act]), defSkills["sessionStance"])

    if "sessionStanceSe" in defSkills:
        defCombatBuffs[DEF] += max(3 * defSkills["sessionStanceSe"] - len([foe for foe in atkAllAllies if foe not in units_left_to_act]), defSkills["sessionStanceSe"])
        defCombatBuffs[RES] += max(3 * defSkills["sessionStanceSe"] - len([foe for foe in atkAllAllies if foe not in units_left_to_act]), defSkills["sessionStanceSe"])


    # General combat stats for any skill
    if "atkCombat" in atkSkills: atkCombatBuffs[ATK] += atkSkills["atkCombat"]
    if "spdCombat" in atkSkills: atkCombatBuffs[SPD] += atkSkills["spdCombat"]
    if "defCombat" in atkSkills: atkCombatBuffs[DEF] += atkSkills["defCombat"]
    if "resCombat" in atkSkills: atkCombatBuffs[RES] += atkSkills["resCombat"]

    if "atkCombat" in defSkills: defCombatBuffs[ATK] += defSkills["atkCombat"]
    if "spdCombat" in defSkills: defCombatBuffs[SPD] += defSkills["spdCombat"]
    if "defCombat" in defSkills: defCombatBuffs[DEF] += defSkills["defCombat"]
    if "resCombat" in defSkills: defCombatBuffs[RES] += defSkills["resCombat"]

    if "atkCombatPenalty" in atkSkills: defCombatBuffs[ATK] -= atkSkills["atkCombatPenalty"]
    if "spdCombatPenalty" in atkSkills: defCombatBuffs[SPD] -= atkSkills["spdCombatPenalty"]
    if "defCombatPenalty" in atkSkills: defCombatBuffs[DEF] -= atkSkills["defCombatPenalty"]
    if "resCombatPenalty" in atkSkills: defCombatBuffs[RES] -= atkSkills["resCombatPenalty"]

    if "atkCombatPenalty" in defSkills: atkCombatBuffs[ATK] -= defSkills["atkCombatPenalty"]
    if "spdCombatPenalty" in defSkills: atkCombatBuffs[SPD] -= defSkills["spdCombatPenalty"]
    if "defCombatPenalty" in defSkills: atkCombatBuffs[DEF] -= defSkills["defCombatPenalty"]
    if "resCombatPenalty" in defSkills: atkCombatBuffs[RES] -= defSkills["resCombatPenalty"]

    # SPUR / DRIVE / GOAD / WARD SKILLS
    if "driveAtk_f" in atkSkills: atkCombatBuffs[ATK] += atkSkills["driveAtk_f"]
    if "driveSpd_f" in atkSkills: atkCombatBuffs[SPD] += atkSkills["driveSpd_f"]
    if "driveDef_f" in atkSkills: atkCombatBuffs[DEF] += atkSkills["driveDef_f"]
    if "driveRes_f" in atkSkills: atkCombatBuffs[RES] += atkSkills["driveRes_f"]

    if "driveAtk_f" in defSkills: defCombatBuffs[ATK] += defSkills["driveAtk_f"]
    if "driveSpd_f" in defSkills: defCombatBuffs[SPD] += defSkills["driveSpd_f"]
    if "driveDef_f" in defSkills: defCombatBuffs[DEF] += defSkills["driveDef_f"]
    if "driveRes_f" in defSkills: defCombatBuffs[RES] += defSkills["driveRes_f"]

    # Null penalties given out via ally
    if "driveNullPenalties" in atkSkills: atkPenaltiesNeutralized = [True] * 5
    if "driveNullPenalties" in defSkills: defPenaltiesNeutralized = [True] * 5

    # Joint Drive Skills
    if atkAllyWithin2Spaces:
        if "jointAtk" in atkSkills: atkCombatBuffs[ATK] += 4
        if "jointSpd" in atkSkills: atkCombatBuffs[SPD] += 4
        if "jointDef" in atkSkills: atkCombatBuffs[DEF] += 4
        if "jointRes" in atkSkills: atkCombatBuffs[RES] += 4

    if defAllyWithin2Spaces:
        if "jointAtk" in defSkills: defCombatBuffs[ATK] += 4
        if "jointSpd" in defSkills: defCombatBuffs[SPD] += 4
        if "jointDef" in defSkills: defCombatBuffs[DEF] += 4
        if "jointRes" in defSkills: defCombatBuffs[RES] += 4

    # LULL SKILLS
    if "lullAtk" in atkSkills:
        defCombatBuffs[ATK] -= atkSkills["lullAtk"]
        defBonusesNeutralized[ATK] = True

    if "lullSpd" in atkSkills:
        defCombatBuffs[SPD] -= atkSkills["lullSpd"]
        defBonusesNeutralized[SPD] = True

    if "lullDef" in atkSkills:
        defCombatBuffs[DEF] -= atkSkills["lullDef"]
        defBonusesNeutralized[DEF] = True

    if "lullRes" in atkSkills:
        defCombatBuffs[RES] -= atkSkills["lullRes"]
        defBonusesNeutralized[RES] = True

    if "lullAtk" in defSkills:
        atkCombatBuffs[ATK] -= defSkills["lullAtk"]
        atkBonusesNeutralized[ATK] = True

    if "lullSpd" in defSkills:
        atkCombatBuffs[SPD] -= defSkills["lullSpd"]
        atkBonusesNeutralized[SPD] = True

    if "lullDef" in defSkills:
        atkCombatBuffs[DEF] -= defSkills["lullDef"]
        atkBonusesNeutralized[DEF] = True

    if "lullRes" in defSkills:
        atkCombatBuffs[RES] -= defSkills["lullRes"]
        atkBonusesNeutralized[RES] = True

    if "lullAtk4" in atkSkills: defCombatBuffs[ATK] -= min(len(defender.statusPos), 4)
    if "lullSpd4" in atkSkills: defCombatBuffs[SPD] -= min(len(defender.statusPos), 4)
    if "lullDef4" in atkSkills: defCombatBuffs[DEF] -= min(len(defender.statusPos), 4)
    if "lullRes4" in atkSkills: defCombatBuffs[RES] -= min(len(defender.statusPos), 4)

    if "lullAtk4" in defSkills: atkCombatBuffs[ATK] -= min(len(attacker.statusPos), 4)
    if "lullSpd4" in defSkills: atkCombatBuffs[SPD] -= min(len(attacker.statusPos), 4)
    if "lullDef4" in defSkills: atkCombatBuffs[DEF] -= min(len(attacker.statusPos), 4)
    if "lullRes4" in defSkills: atkCombatBuffs[RES] -= min(len(attacker.statusPos), 4)

    if "lullEcho" in atkSkills:
        defCombatBuffs = [x + min(len(defender.statusPos), 4) for x in defCombatBuffs]
        defBonusesNeutralized = [True] * 5

    if "lullEcho" in defSkills:
        atkCombatBuffs = [x + min(len(attacker.statusPos), 4) for x in atkCombatBuffs]
        atkBonusesNeutralized = [True] * 5

    # BOOST SKILLS
    if "fireBoost" in atkSkills and atkHPCur >= defHPCur + 3: atkCombatBuffs[ATK] += atkSkills["fireBoost"] * 2
    if "windBoost" in atkSkills and atkHPCur >= defHPCur + 3: atkCombatBuffs[SPD] += atkSkills["windBoost"] * 2
    if "earthBoost" in atkSkills and atkHPCur >= defHPCur + 3: atkCombatBuffs[DEF] += atkSkills["earthBoost"] * 2
    if "waterBoost" in atkSkills and atkHPCur >= defHPCur + 3: atkCombatBuffs[RES] += atkSkills["waterBoost"] * 2

    if "fireBoost" in defSkills and defHPCur >= atkHPCur + 3: defCombatBuffs[ATK] += defSkills["fireBoost"] * 2
    if "windBoost" in defSkills and defHPCur >= atkHPCur + 3: defCombatBuffs[SPD] += defSkills["windBoost"] * 2
    if "earthBoost" in defSkills and defHPCur >= atkHPCur + 3: defCombatBuffs[DEF] += defSkills["earthBoost"] * 2
    if "waterBoost" in defSkills and defHPCur >= atkHPCur + 3: defCombatBuffs[RES] += defSkills["waterBoost"] * 2

    if atkHPGreaterEqual50Percent:
        if "fireBoost4" in atkSkills: atkCombatBuffs[ATK] += 7
        if "windBoost4" in atkSkills: atkCombatBuffs[SPD] += 7
        if "earthBoost4" in atkSkills: atkCombatBuffs[DEF] += 7
        if "waterBoost4" in atkSkills: atkCombatBuffs[RES] += 7

        if "guardBoost" in atkSkills:
            defr.spLossOnAtk -= 1
            defr.spLossWhenAtkd -= 1

        if "primordialBoost" in atkSkills:
            atkCombatBuffs[SPD] += 9
            atkCombatBuffs[DEF] += 9
            atkCombatBuffs[RES] += 9
            atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

        if "diluvialBoost" in atkSkills:
            atkCombatBuffs[ATK] += 9
            atkCombatBuffs[DEF] += 9
            atkCombatBuffs[RES] += 9
            atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if defHPGreaterEqual50Percent:
        if "fireBoost4" in defSkills: defCombatBuffs[ATK] += 7
        if "windBoost4" in defSkills: defCombatBuffs[SPD] += 7
        if "earthBoost4" in defSkills: defCombatBuffs[DEF] += 7
        if "waterBoost4" in defSkills: defCombatBuffs[RES] += 7

        if "guardBoost" in defSkills:
            atkr.spLossOnAtk -= 1
            atkr.spLossWhenAtkd -= 1

    if "primordialBoost" in defSkills:
        defCombatBuffs[SPD] += 9
        defCombatBuffs[DEF] += 9
        defCombatBuffs[RES] += 9
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "diluvialBoost" in defSkills:
        defCombatBuffs[ATK] += 9
        defCombatBuffs[DEF] += 9
        defCombatBuffs[RES] += 9
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # BRAZEN SKILLS
    if "brazenAtk" in atkSkills and atkHPCur / atkStats[HP] <= 0.8: atkCombatBuffs[ATK] += atkSkills["brazenAtk"]
    if "brazenSpd" in atkSkills and atkHPCur / atkStats[HP] <= 0.8: atkCombatBuffs[SPD] += atkSkills["brazenSpd"]
    if "brazenDef" in atkSkills and atkHPCur / atkStats[HP] <= 0.8: atkCombatBuffs[DEF] += atkSkills["brazenDef"]
    if "brazenRes" in atkSkills and atkHPCur / atkStats[HP] <= 0.8: atkCombatBuffs[RES] += atkSkills["brazenRes"]

    if "brazenAtk" in defSkills and defHPCur / defStats[HP] <= 0.8: defCombatBuffs[ATK] += defSkills["brazenAtk"]
    if "brazenSpd" in defSkills and defHPCur / defStats[HP] <= 0.8: defCombatBuffs[SPD] += defSkills["brazenSpd"]
    if "brazenDef" in defSkills and defHPCur / defStats[HP] <= 0.8: defCombatBuffs[DEF] += defSkills["brazenDef"]
    if "brazenRes" in defSkills and defHPCur / defStats[HP] <= 0.8: defCombatBuffs[RES] += defSkills["brazenRes"]

    # BOND SKILLS
    if "atkBond" in atkSkills and atkAdjacentToAlly: atkCombatBuffs[ATK] += atkSkills["atkBond"]
    if "spdBond" in atkSkills and atkAdjacentToAlly: atkCombatBuffs[SPD] += atkSkills["spdBond"]
    if "defBond" in atkSkills and atkAdjacentToAlly: atkCombatBuffs[DEF] += atkSkills["defBond"]
    if "resBond" in atkSkills and atkAdjacentToAlly: atkCombatBuffs[RES] += atkSkills["resBond"]

    if "atkBond" in defSkills and defAdjacentToAlly: defCombatBuffs[ATK] += defSkills["atkBond"]
    if "spdBond" in defSkills and defAdjacentToAlly: defCombatBuffs[SPD] += defSkills["spdBond"]
    if "defBond" in defSkills and defAdjacentToAlly: defCombatBuffs[DEF] += defSkills["defBond"]
    if "resBond" in defSkills and defAdjacentToAlly: defCombatBuffs[RES] += defSkills["resBond"]

    if "spectrumBond" in atkSkills and atkAdjacentToAlly: atkCombatBuffs = [x + atkSkills["spectrumBond"] for x in atkCombatBuffs]
    if "spectrumBond" in defSkills and defAdjacentToAlly: defCombatBuffs = [x + defSkills["spectrumBond"] for x in defCombatBuffs]

    # Penalty Neutralization from Tier 4 Bond Skills
    if "ABPenalty" in atkSkills and atkAdjacentToAlly: atkPenaltiesNeutralized[ATK] = True
    if "SBPenalty" in atkSkills and atkAdjacentToAlly: atkPenaltiesNeutralized[SPD] = True
    if "DBPenalty" in atkSkills and atkAdjacentToAlly: atkPenaltiesNeutralized[DEF] = True
    if "RBPenalty" in atkSkills and atkAdjacentToAlly: atkPenaltiesNeutralized[RES] = True

    if "ABPenalty" in defSkills and defAdjacentToAlly: defPenaltiesNeutralized[ATK] = True
    if "SBPenalty" in defSkills and defAdjacentToAlly: defPenaltiesNeutralized[SPD] = True
    if "DBPenalty" in defSkills and defAdjacentToAlly: defPenaltiesNeutralized[DEF] = True
    if "RBPenalty" in defSkills and defAdjacentToAlly: defPenaltiesNeutralized[RES] = True

    # SOLO SKILLS
    if "atkSolo" in atkSkills and not atkAdjacentToAlly: atkCombatBuffs[ATK] += atkSkills["atkSolo"]
    if "spdSolo" in atkSkills and not atkAdjacentToAlly: atkCombatBuffs[SPD] += atkSkills["spdSolo"]
    if "defSolo" in atkSkills and not atkAdjacentToAlly: atkCombatBuffs[DEF] += atkSkills["defSolo"]
    if "resSolo" in atkSkills and not atkAdjacentToAlly: atkCombatBuffs[RES] += atkSkills["resSolo"]

    if "atkSolo" in defSkills and not defAdjacentToAlly: defCombatBuffs[ATK] += defSkills["atkSolo"]
    if "spdSolo" in defSkills and not defAdjacentToAlly: defCombatBuffs[SPD] += defSkills["spdSolo"]
    if "defSolo" in defSkills and not defAdjacentToAlly: defCombatBuffs[DEF] += defSkills["defSolo"]
    if "resSolo" in defSkills and not defAdjacentToAlly: defCombatBuffs[RES] += defSkills["resSolo"]

    if "spectrumSolo" in atkSkills and not atkAdjacentToAlly: atkCombatBuffs = [x + atkSkills["spectrumSolo"] for x in atkCombatBuffs]
    if "spectrumSolo" in defSkills and not defAdjacentToAlly: defCombatBuffs = [x + defSkills["spectrumSolo"] for x in defCombatBuffs]

    # WILD SKILLS
    if "atkSpdWild" in atkSkills and (len(atkAdjacentToAlly) <= 1 or attacker.transformed):
        atkCombatBuffs[ATK] += 7
        atkCombatBuffs[SPD] += 7
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "atkSpdWild" in defSkills and (len(defAdjacentToAlly) <= 1 or defender.transformed):
        defCombatBuffs[ATK] += 7
        defCombatBuffs[SPD] += 7
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "atkDefWild" in atkSkills and (len(atkAdjacentToAlly) <= 1 or attacker.transformed):
        atkCombatBuffs[ATK] += 7
        atkCombatBuffs[DEF] += 7
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "atkDefWild" in defSkills and (len(defAdjacentToAlly) <= 1 or defender.transformed):
        defCombatBuffs[ATK] += 7
        defCombatBuffs[DEF] += 7
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # WAYLAY SKILLS
    if "atkSpdWaylay" in atkSkills:
        atkCombatBuffs[ATK] += 8
        atkCombatBuffs[SPD] += 8
        atkr.speed_NFU = True

        if defHPEqual100Percent:
            atkCombatBuffs[ATK] += 2
            atkCombatBuffs[SPD] += 2
            atkr.true_all_hits += 7

    if "atkSpdWaylay" in defSkills and len(defAdjacentToAlly) <= 1:
        defCombatBuffs[ATK] += 8
        defCombatBuffs[SPD] += 8
        defr.speed_NFU = True

        if atkHPEqual100Percent:
            defCombatBuffs[ATK] += 2
            defCombatBuffs[SPD] += 2
            defr.true_all_hits += 7

    # PUSH SKILLS
    if "atkPush" in atkSkills and atkHPEqual100Percent: atkCombatBuffs[ATK] += atkSkills["atkPush"]
    if "spdPush" in atkSkills and atkHPEqual100Percent: atkCombatBuffs[ATK] += atkSkills["spdPush"]
    if "defPush" in atkSkills and atkHPEqual100Percent: atkCombatBuffs[ATK] += atkSkills["defPush"]
    if "resPush" in atkSkills and atkHPEqual100Percent: atkCombatBuffs[ATK] += atkSkills["resPush"]

    if "atkPush" in defSkills and defHPEqual100Percent: defCombatBuffs[ATK] += defSkills["atkPush"]
    if "spdPush" in defSkills and defHPEqual100Percent: defCombatBuffs[ATK] += defSkills["spdPush"]
    if "defPush" in defSkills and defHPEqual100Percent: defCombatBuffs[ATK] += defSkills["defPush"]
    if "resPush" in defSkills and defHPEqual100Percent: defCombatBuffs[ATK] += defSkills["resPush"]

    if "pushDmg" in atkSkills and atkHPEqual100Percent: atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", atkSkills["pushDmg"], "self", "one"))
    if "pushDmg" in defSkills and defHPEqual100Percent: defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", defSkills["pushDmg"], "self", "one"))

    if "atkPush4" in atkSkills and atkHPGreaterEqual25Percent: atkCombatBuffs[ATK] += 7
    if "spdPush4" in atkSkills and atkHPGreaterEqual25Percent: atkCombatBuffs[SPD] += 7
    if "defPush4" in atkSkills and atkHPGreaterEqual25Percent: atkCombatBuffs[DEF] += 7
    if "resPush4" in atkSkills and atkHPGreaterEqual25Percent: atkCombatBuffs[RES] += 7

    if "atkPush4" in defSkills and defHPGreaterEqual25Percent: defCombatBuffs[ATK] += 7
    if "spdPush4" in defSkills and defHPGreaterEqual25Percent: defCombatBuffs[SPD] += 7
    if "defPush4" in defSkills and defHPGreaterEqual25Percent: defCombatBuffs[DEF] += 7
    if "resPush4" in defSkills and defHPGreaterEqual25Percent: defCombatBuffs[RES] += 7

    if "pushDmgPlus" in atkSkills and atkHPGreaterEqual25Percent: atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 5, "self", "one"))
    if "pushDmgPlus" in defSkills and defHPGreaterEqual25Percent: defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 5, "self", "one"))

    # FORM SKILLS
    form_str_arr = [["atkForm", "atkFormSe"], ["spdForm", "spdFormSe"], ["defForm", "defFormSe"], ["resForm", "resFormSe"]]

    if atkAllyWithin2Spaces:
        i = 1
        while i < 5:
            cur_str_arr = form_str_arr[i - 1]

            for skill in cur_str_arr:
                level = atkSkills.get(skill, 0)

                if level == 1: atkCombatBuffs[i] += min(len(atkAllyWithin2Spaces), 3)
                elif level == 2: atkCombatBuffs[i] += min(len(atkAllyWithin2Spaces) + 2, 5)
                elif level == 3: atkCombatBuffs[i] += min(2 * len(atkAllyWithin2Spaces) + 1, 7)

            i += 1

    if defAllyWithin2Spaces:
        i = 1
        while i < 5:
            cur_str_arr = form_str_arr[i - 1]

            for skill in cur_str_arr:
                level = defSkills.get(skill, 0)

                if level == 1: defCombatBuffs[i] += min(len(defAllyWithin2Spaces), 3)
                elif level == 2: defCombatBuffs[i] += min(len(defAllyWithin2Spaces) + 2, 5)
                elif level == 3: defCombatBuffs[i] += min(2 * len(defAllyWithin2Spaces) + 1, 7)

            i += 1

    # FORTUNE SKILLS
    if attacker.transformed:
        if "atkFortune" in atkSkills:
            atkCombatBuffs[ATK] += 8
            defBonusesNeutralized[DEF] = True
        if "spdFortune" in atkSkills:
            atkCombatBuffs[SPD] += 8
            defBonusesNeutralized[SPD] = True
        if "defFortune" in atkSkills:
            atkCombatBuffs[DEF] += 8
            defBonusesNeutralized[ATK] = True
            defBonusesNeutralized[DEF] = True
        if "resFortune" in atkSkills:
            atkCombatBuffs[RES] += 8
            defBonusesNeutralized[ATK] = True

        if "fortuneHeal" in atkSkills:
            atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "atkFortune" in defSkills:
        defCombatBuffs[ATK] += 8
        atkBonusesNeutralized[DEF] = True
    if "spdFortune" in defSkills:
        defCombatBuffs[SPD] += 8
        atkBonusesNeutralized[SPD] = True
    if "defFortune" in defSkills:
        defCombatBuffs[DEF] += 8
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[DEF] = True
    if "resFortune" in defSkills:
        defCombatBuffs[RES] += 8
        atkBonusesNeutralized[ATK] = True

    if "fortuneHeal" in defSkills:
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # SWAY/TIDINGS SKILLS
    if "atkSpdSway" in atkSkills:
        atkCombatBuffs[ATK] += min(8 + len(atkAllyWithin3Spaces) * 2, 12)
        atkCombatBuffs[SPD] += min(8 + len(atkAllyWithin3Spaces) * 2, 12)
        atkr.wrathful_staff = True

    if "atkSpdSway" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += min(8 + len(defAllyWithin3Spaces) * 2, 12)
        defCombatBuffs[SPD] += min(8 + len(atkAllyWithin3Spaces) * 2, 12)
        defr.wrathful_staff = True

    if "atkSpdTidings" in atkSkills:
        atkCombatBuffs[ATK] += min(8 + len(atkAllyWithin3Spaces) * 2, 12)
        atkCombatBuffs[SPD] += min(8 + len(atkAllyWithin3Spaces) * 2, 12)
        cannotCounter = True

    if "atkSpdTidings" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += min(8 + len(defAllyWithin3Spaces) * 2, 12)
        defCombatBuffs[SPD] += min(8 + len(atkAllyWithin3Spaces) * 2, 12)

    if "atkResSway" in atkSkills:
        atkCombatBuffs[ATK] += min(8 + len(atkAllyWithin3Spaces) * 2, 12)
        atkCombatBuffs[RES] += min(8 + len(atkAllyWithin3Spaces) * 2, 12)
        atkr.wrathful_staff = True

    if "atkResSway" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += min(8 + len(defAllyWithin3Spaces) * 2, 12)
        defCombatBuffs[RES] += min(8 + len(atkAllyWithin3Spaces) * 2, 12)
        defr.wrathful_staff = True

    if "atkResTidings" in atkSkills:
        atkCombatBuffs[ATK] += min(8 + len(atkAllyWithin3Spaces) * 2, 12)
        atkCombatBuffs[RES] += min(8 + len(atkAllyWithin3Spaces) * 2, 12)
        cannotCounter = True

    if "atkResTidings" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += min(8 + len(defAllyWithin3Spaces) * 2, 12)
        defCombatBuffs[RES] += min(8 + len(atkAllyWithin3Spaces) * 2, 12)

    # DISTANT FORM
    if "atkDefDistForm" in atkSkills:
        atkCombatBuffs[ATK] += min(len(atkAllyWithin3Spaces) * 3, 9)
        atkCombatBuffs[DEF] += min(len(atkAllyWithin3Spaces) * 3, 9)

    if "atkDefDistForm" in defSkills:
        defCombatBuffs[ATK] += 9 if savior_triggered else min(len(atkAllyWithin3Spaces) * 3, 9)
        defCombatBuffs[DEF] += 9 if savior_triggered else min(len(atkAllyWithin3Spaces) * 3, 9)

    # REIN SKILLS
    if "atkRein_f" in atkSkills: atkCombatBuffs[ATK] -= atkSkills["atkRein_f"]
    if "spdRein_f" in atkSkills: atkCombatBuffs[SPD] -= atkSkills["spdRein_f"]
    if "defRein_f" in atkSkills: atkCombatBuffs[DEF] -= atkSkills["defRein_f"]
    if "resRein_f" in atkSkills: atkCombatBuffs[RES] -= atkSkills["resRein_f"]

    if "atkRein_f" in defSkills: defCombatBuffs[ATK] -= defSkills["atkRein_f"]
    if "spdRein_f" in defSkills: defCombatBuffs[SPD] -= defSkills["spdRein_f"]
    if "defRein_f" in defSkills: defCombatBuffs[DEF] -= defSkills["defRein_f"]
    if "resRein_f" in defSkills: defCombatBuffs[RES] -= defSkills["resRein_f"]

    if "cruxField_f" in atkSkills: defr.follow_ups_skill += atkSkills["cruxField_f"]
    if "cruxField_f" in defSkills: atkr.follow_ups_skill += defSkills["cruxField_f"]

    # Other debuffs to give out in a Rein-type skill
    if "guardRein_f" in atkSkills:
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    if "guardRein_f" in defSkills:
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "fuDenialRein_f" in atkSkills: atkr.follow_up_denials -= atkSkills["fuDenialRein_f"]
    if "fuDenialRein_f" in defSkills: defr.follow_up_denials -= defSkills["fuDenialRein_f"]

    # CLASH SKILLS
    if "atkClash" in atkSkills and spaces_moved_by_atkr > 0: atkCombatBuffs[ATK] += min(atkSkills["atkClash"], spaces_moved_by_atkr) + min(2 * atkSkills["atkClash"] - 1, 6)
    if "spdClash" in atkSkills and spaces_moved_by_atkr > 0: atkCombatBuffs[SPD] += min(atkSkills["spdClash"], spaces_moved_by_atkr) + min(2 * atkSkills["spdClash"] - 1, 6)
    if "defClash" in atkSkills and spaces_moved_by_atkr > 0: atkCombatBuffs[DEF] += min(atkSkills["defClash"], spaces_moved_by_atkr) + min(2 * atkSkills["defClash"] - 1, 6)

    if "atkClashSe" in atkSkills and spaces_moved_by_atkr > 0: atkCombatBuffs[ATK] += min(atkSkills["atkClashSe"], spaces_moved_by_atkr) + min(2 * atkSkills["atkClashSe"] - 1, 6)
    if "spdClashSe" in atkSkills and spaces_moved_by_atkr > 0: atkCombatBuffs[SPD] += min(atkSkills["atkClashSe"], spaces_moved_by_atkr) + min(2 * atkSkills["atkClashSe"] - 1, 6)
    if "defClashSe" in atkSkills and spaces_moved_by_atkr > 0: atkCombatBuffs[DEF] += min(atkSkills["atkClashSe"], spaces_moved_by_atkr) + min(2 * atkSkills["atkClashSe"] - 1, 6)

    if "atk4Clash" in atkSkills and spaces_moved_by_atkr >= 2: atkPenaltiesNeutralized[ATK] = True
    if "spd4Clash" in atkSkills and spaces_moved_by_atkr >= 2: atkPenaltiesNeutralized[SPD] = True
    if "def4Clash" in atkSkills and spaces_moved_by_atkr >= 2: atkPenaltiesNeutralized[DEF] = True

    if "atkClash" in defSkills and spaces_moved_by_atkr > 0: defCombatBuffs[ATK] += min(defSkills["atkClash"], spaces_moved_by_atkr) + min(2 * defSkills["atkClash"] - 1, 6)
    if "spdClash" in defSkills and spaces_moved_by_atkr > 0: defCombatBuffs[SPD] += min(defSkills["spdClash"], spaces_moved_by_atkr) + min(2 * defSkills["spdClash"] - 1, 6)
    if "defClash" in defSkills and spaces_moved_by_atkr > 0: defCombatBuffs[DEF] += min(defSkills["defClash"], spaces_moved_by_atkr) + min(2 * defSkills["defClash"] - 1, 6)

    if "atk4Clash" in defSkills and spaces_moved_by_atkr >= 2: defPenaltiesNeutralized[ATK] = True
    if "spd4Clash" in defSkills and spaces_moved_by_atkr >= 2: defPenaltiesNeutralized[SPD] = True
    if "def4Clash" in defSkills and spaces_moved_by_atkr >= 2: defPenaltiesNeutralized[DEF] = True

    # EXCEL SKILLS
    if "atk_spd_dashing_defense" in atkSkills:
        if spaces_moved_by_atkr > 0:
            atkr.TDR_all_hits += 3 * min(spaces_moved_by_atkr, 4)
        if defSpTriggeredByAttack:
            atkr.TDR_all_hits += 3 * min(spaces_moved_by_atkr, 4) # revise

    if "excelDR" in atkSkills:
        atkr.TDR_all_hits += 3 * min(spaces_moved_by_atkr, 4)
        atkr.TDR_on_foe_sp += 3 * min(spaces_moved_by_atkr, 4)

    if "excelDR" in atkSkills:
        defr.TDR_on_foe_sp += 3 * min(spaces_moved_by_atkr, 4)

    # Endless Tempest
    if "endlessTempest" in atkSkills and spaces_moved_by_atkr > 0:
        atkCombatBuffs = [x + min(spaces_moved_by_atkr, 3) for x in atkCombatBuffs]
        defBonusesNeutralized = [True] * 5

    if "endlessTempest" in defSkills and spaces_moved_by_atkr > 0:
        defCombatBuffs = [x + min(spaces_moved_by_atkr, 3) for x in defCombatBuffs]
        atkBonusesNeutralized = [True] * 5

    # Brutal Tempest
    if "brutalTempest" in atkSkills and spaces_moved_by_atkr > 0:
        atkCombatBuffs = [x + min(spaces_moved_by_atkr, 3) for x in atkCombatBuffs]

    if "brutalTempest" in defSkills and spaces_moved_by_atkr > 0:
        defCombatBuffs = [x + min(spaces_moved_by_atkr, 3) for x in defCombatBuffs]

    # Pulse Tempest (F)
    if "pulseTempest" in atkSkills and spaces_moved_by_atkr > 0:
        atkCombatBuffs = [x + min(spaces_moved_by_atkr, 3) for x in atkCombatBuffs]

        if atkSpTriggeredByAttack:
            atkr.sp_jump_followup += 2

    if "pulseTempest" in defSkills and spaces_moved_by_atkr > 0:
        defCombatBuffs = [x + min(spaces_moved_by_atkr, 3) for x in defCombatBuffs]

        if defSpTriggeredByAttack:
            defr.sp_jump_followup += 2

    # FINISH SKILLS
    if "atkFinish" in atkSkills and atkAllyWithin3Spaces: atkCombatBuffs[ATK] += min(atkSkills["atkFinish"] * 2, 7)
    if "spdFinish" in atkSkills and atkAllyWithin3Spaces: atkCombatBuffs[SPD] += min(atkSkills["spdFinish"] * 2, 7)
    if "defFinish" in atkSkills and atkAllyWithin3Spaces: atkCombatBuffs[DEF] += min(atkSkills["defFinish"] * 2, 7)
    if "resFinish" in atkSkills and atkAllyWithin3Spaces: atkCombatBuffs[RES] += min(atkSkills["resFinish"] * 2, 7)

    if "atkFinishSe" in atkSkills and atkAllyWithin3Spaces: atkCombatBuffs[ATK] += min(atkSkills["atkFinishSe"] * 2, 7)
    if "spdFinishSe" in atkSkills and atkAllyWithin3Spaces: atkCombatBuffs[SPD] += min(atkSkills["spdFinishSe"] * 2, 7)
    if "defFinishSe" in atkSkills and atkAllyWithin3Spaces: atkCombatBuffs[DEF] += min(atkSkills["defFinishSe"] * 2, 7)
    if "resFinishSe" in atkSkills and atkAllyWithin3Spaces: atkCombatBuffs[RES] += min(atkSkills["resFinishSe"] * 2, 7)

    if "finishDmg" in atkSkills and atkAllyWithin3Spaces: atkr.true_finish += atkSkills["finishDmg"]
    if "finishHeal" in atkSkills and atkAllyWithin3Spaces: atkr.finish_mid_combat_heal += 7

    if "atkFinish" in defSkills and defAllyWithin3Spaces: defCombatBuffs[ATK] += min(defSkills["atkFinish"] * 2, 7)
    if "spdFinish" in defSkills and defAllyWithin3Spaces: defCombatBuffs[SPD] += min(defSkills["spdFinish"] * 2, 7)
    if "defFinish" in defSkills and defAllyWithin3Spaces: defCombatBuffs[DEF] += min(defSkills["defFinish"] * 2, 7)
    if "resFinish" in defSkills and defAllyWithin3Spaces: defCombatBuffs[RES] += min(defSkills["resFinish"] * 2, 7)

    if "atkFinishSe" in defSkills and defAllyWithin3Spaces: defCombatBuffs[ATK] += min(defSkills["atkFinishSe"] * 2, 7)
    if "spdFinishSe" in defSkills and defAllyWithin3Spaces: defCombatBuffs[SPD] += min(defSkills["spdFinishSe"] * 2, 7)
    if "defFinishSe" in defSkills and defAllyWithin3Spaces: defCombatBuffs[DEF] += min(defSkills["defFinishSe"] * 2, 7)
    if "resFinishSe" in defSkills and defAllyWithin3Spaces: defCombatBuffs[RES] += min(defSkills["resFinishSe"] * 2, 7)

    if "finishDmg" in defSkills and defAllyWithin3Spaces: defr.true_finish += defSkills["finishDmg"]
    if "finishHeal" in defSkills and defAllyWithin3Spaces: defr.finish_mid_combat_heal += 7

    # Potent Finish
    if "potentFinish" in atkSkills:
        atkr.TDR_all_hits += 7
        atkr.true_finish += 15
        atkr.finish_mid_combat_heal += 7

    if "potentFinish" in defSkills:
        defr.TDR_all_hits += 7
        defr.true_finish += 15
        defr.finish_mid_combat_heal += 7

    # SCOWL SKILLS
    if defHPGreaterEqual75Percent:
        if "atkScowl" in atkSkills: atkCombatBuffs[ATK] += atkSkills["atkScowl"]
        if "spdScowl" in atkSkills: atkCombatBuffs[SPD] += atkSkills["spdScowl"]
        if "defScowl" in atkSkills: atkCombatBuffs[DEF] += atkSkills["defScowl"]
        if "resScowl" in atkSkills: atkCombatBuffs[RES] += atkSkills["resScowl"]

    if "atkScowl" in defSkills: defCombatBuffs[ATK] += defSkills["atkScowl"]
    if "spdScowl" in defSkills: defCombatBuffs[SPD] += defSkills["spdScowl"]
    if "defScowl" in defSkills: defCombatBuffs[DEF] += defSkills["defScowl"]
    if "resScowl" in defSkills: defCombatBuffs[RES] += defSkills["resScowl"]

    # PERFECT SKILLS
    if atkHPGreaterEqual25Percent or atkAllyWithin3Spaces:
        if "perfectAtkSpd" in atkSkills:
            atkCombatBuffs[ATK] += 7
            atkCombatBuffs[SPD] += 7
            atkr.speed_NFU = True

            if atkHPGreaterEqual25Percent and atkAllyWithin3Spaces:
                atkCombatBuffs[ATK] += 3
                atkCombatBuffs[SPD] += 3

    if defHPGreaterEqual25Percent or defAllyWithin3Spaces:
        if "perfectAtkSpd" in defSkills:
            defCombatBuffs[ATK] += 7
            defCombatBuffs[SPD] += 7
            defr.speed_NFU = True

            if defHPGreaterEqual25Percent and defAllyWithin3Spaces:
                defCombatBuffs[ATK] += 3
                defCombatBuffs[SPD] += 3

    # SAVIOR SKILLS
    if savior_triggered:
        if "saviorAtk" in defSkills: defCombatBuffs[ATK] += defSkills["saviorAtk"]
        if "saviorSpd" in defSkills: defCombatBuffs[ATK] += defSkills["saviorSpd"]
        if "saviorDef" in defSkills: defCombatBuffs[ATK] += defSkills["saviorDef"]
        if "saviorRes" in defSkills: defCombatBuffs[ATK] += defSkills["saviorRes"]

    # TWIN SAVE SKILLS
    if defender.wpnType in RANGED_WEAPONS:
        if "farTwinAtk" in atkSkills: atkCombatBuffs[ATK] += atkSkills["farTwinAtk"]
        if "farTwinSpd" in atkSkills: atkCombatBuffs[SPD] += atkSkills["farTwinSpd"]
        if "farTwinDef" in atkSkills: atkCombatBuffs[DEF] += atkSkills["farTwinDef"]
        if "farTwinRes" in atkSkills: atkCombatBuffs[RES] += atkSkills["farTwinRes"]

        if "twinSavior" in atkSkills:
            atkr.all_hits_heal += 7
            atkr.DR_sp_trigger_twin = True

        if "briarSavior" in atkSkills:
            atkr.TDR_first_strikes += 5
            atkr.retaliatory_full_damages.append(40)

    if defender.wpnType in MELEE_WEAPONS:
        if "nearTwinAtk" in atkSkills: atkCombatBuffs[ATK] += atkSkills["nearTwinAtk"]
        if "nearTwinSpd" in atkSkills: atkCombatBuffs[SPD] += atkSkills["nearTwinSpd"]
        if "nearTwinDef" in atkSkills: atkCombatBuffs[DEF] += atkSkills["nearTwinDef"]
        if "nearTwinRes" in atkSkills: atkCombatBuffs[RES] += atkSkills["nearTwinRes"]

        if "twinSavior" in atkSkills:
            atkr.all_hits_heal += 7
            atkr.DR_sp_trigger_twin = True

        if "briarSavior" in atkSkills:
            atkr.TDR_first_strikes += 5
            atkr.retaliatory_full_damages.append(40)

    if attacker.wpnType in RANGED_WEAPONS:
        if "farTwinAtk" in defSkills: defCombatBuffs[ATK] += defSkills["farTwinAtk"]
        if "farTwinSpd" in defSkills: defCombatBuffs[SPD] += defSkills["farTwinSpd"]
        if "farTwinDef" in defSkills: defCombatBuffs[DEF] += defSkills["farTwinDef"]
        if "farTwinRes" in defSkills: defCombatBuffs[RES] += defSkills["farTwinRes"]

        if "twinSavior" in defSkills:
            defr.all_hits_heal += 7
            defr.DR_sp_trigger_twin = True

        if "briarSavior" in defSkills:
            defr.TDR_first_strikes += 5
            defr.retaliatory_full_damages.append(40)

    if attacker.wpnType in MELEE_WEAPONS:
        if "nearTwinAtk" in defSkills: defCombatBuffs[ATK] += defSkills["nearTwinAtk"]
        if "nearTwinSpd" in defSkills: defCombatBuffs[SPD] += defSkills["nearTwinSpd"]
        if "nearTwinDef" in defSkills: defCombatBuffs[DEF] += defSkills["nearTwinDef"]
        if "nearTwinRes" in defSkills: defCombatBuffs[RES] += defSkills["nearTwinRes"]

        if "twinSavior" in defSkills:
            defr.all_hits_heal += 7
            defr.DR_sp_trigger_twin = True

        if "briarSavior" in defSkills:
            defr.TDR_first_strikes += 5
            defr.retaliatory_full_damages.append(40)

    # (PREMIUM) WAVE SKILLS
    if "premiumEvenAtk" in atkSkills and turn % 2 == 0: atkCombatBuffs[ATK] += 6
    if "premiumEvenAtk" in defSkills and turn % 2 == 0: defCombatBuffs[ATK] += 6

    if "premiumOddSpd" in atkSkills and turn % 2 == 1: atkCombatBuffs[SPD] += 6
    if "premiumOddSpd" in defSkills and turn % 2 == 1: defCombatBuffs[SPD] += 6

    if "premiumOddDef" in atkSkills and turn % 2 == 1: atkCombatBuffs[DEF] += 6
    if "premiumOddDef" in defSkills and turn % 2 == 1: defCombatBuffs[DEF] += 6

    if "premiumEvenRes" in atkSkills and turn % 2 == 0: atkCombatBuffs[RES] += 6
    if "premiumEvenRes" in defSkills and turn % 2 == 0: defCombatBuffs[RES] += 6

    # Tier 4 Oath Skills
    if atkAllyWithin2Spaces:
        if "atkSpdOath" in atkSkills or "atkSpdPledge" in atkSkills:
            atkCombatBuffs[ATK] += 3
            atkCombatBuffs[SPD] += 3

        if "atkDefOath" in atkSkills:
            atkCombatBuffs[ATK] += 3
            atkCombatBuffs[DEF] += 3

        if "atkResOath" in atkSkills:
            atkCombatBuffs[ATK] += 3
            atkCombatBuffs[RES] += 3

        if "defResOath" in atkSkills or "defResPledge" in atkSkills:
            atkCombatBuffs[DEF] += 3
            atkCombatBuffs[RES] += 3

    if defAllyWithin2Spaces:
        if "atkSpdOath" in defSkills or "atkSpdPledge" in defSkills:
            defCombatBuffs[ATK] += 3
            defCombatBuffs[SPD] += 3

        if "atkDefOath" in defSkills:
            defCombatBuffs[ATK] += 3
            defCombatBuffs[DEF] += 3

        if "atkResOath" in defSkills:
            defCombatBuffs[ATK] += 3
            defCombatBuffs[RES] += 3

        if "defResOath" in defSkills or "defResPledge" in defSkills:
            defCombatBuffs[DEF] += 3
            defCombatBuffs[RES] += 3

    # Faith Skills
    if Status.Bulwark in attacker.statusPos:
        if "atkSpdFaith" in atkSkills:
            atkCombatBuffs[ATK] += 4
            atkCombatBuffs[SPD] += 4
            atkr.TDR_first_strikes += 5
            atkr.sp_jump_foe_first += 1

    if Status.Bulwark in defender.statusPos:
        if "atkSpdFaith" in defSkills:
            defCombatBuffs[ATK] += 4
            defCombatBuffs[SPD] += 4
            defr.TDR_first_strikes += 5
            defr.sp_jump_foe_first += 1

    # Alarm/Incite Skills
    if len(atkAdjacentToAlly) <= 1:
        if "alarmAtkSpd" in atkSkills or "inciteAtkSpd" in atkSkills:
            atkCombatBuffs[ATK] += 3
            atkCombatBuffs[SPD] += 3

        if "alarmAtkDef" in atkSkills:
            atkCombatBuffs[ATK] += 3
            atkCombatBuffs[DEF] += 3

        if "inciteAtkRes" in atkSkills:
            atkCombatBuffs[ATK] += 3
            atkCombatBuffs[RES] += 3

        if "alarmSpdDef" in atkSkills or "inciteSpdDef" in atkSkills:
            atkCombatBuffs[SPD] += 3
            atkCombatBuffs[DEF] += 3

        if "alarmDefRes" in atkSkills:
            atkCombatBuffs[DEF] += 3
            atkCombatBuffs[RES] += 3

    if len(defAdjacentToAlly) <= 1:
        if "alarmAtkSpd" in defSkills or "inciteAtkSpd" in defSkills:
            defCombatBuffs[ATK] += 3
            defCombatBuffs[SPD] += 3

        if "alarmAtkDef" in defSkills:
            defCombatBuffs[ATK] += 3
            defCombatBuffs[DEF] += 3

        if "inciteAtkRes" in defSkills:
            defCombatBuffs[ATK] += 3
            defCombatBuffs[RES] += 3

        if "alarmSpdDef" in defSkills or "inciteSpdDef" in defSkills:
            defCombatBuffs[SPD] += 3
            defCombatBuffs[DEF] += 3

        if "alarmDefRes" in defSkills:
            defCombatBuffs[DEF] += 3
            defCombatBuffs[RES] += 3

    # AR SKILLS
    AR_STRUCT_STATS = {
        ">=5": {1: 4, 2: 7, 3: 10, 4: 11},
        "4": {1: 3, 2: 5, 3: 7, 4: 7},
        "3": {1: 2, 2: 3, 3: 4, 4: 3},
        "<=2": {1: 1, 2: 1, 3: 1, 4: 3}
    }

    if cur_ar_structs_standing >= 5:
        ard_str = ">=5"
    elif cur_ar_structs_standing == 4:
        ard_str = "4"
    elif cur_ar_structs_standing == 3:
        ard_str = "3"
    else:
        ard_str = "<=2"

    if cur_ar_structs_destroyed >= 5:
        aro_str = ">=5"
    elif cur_ar_structs_destroyed == 4:
        aro_str = "4"
    elif cur_ar_structs_destroyed == 3:
        aro_str = "3"
    else:
        aro_str = "<=2"

    # AR-D SKILLS
    if cur_ar_structs_standing != -1 and attacker.side == 1:
        if "atkARD" in atkSkills: atkCombatBuffs[ATK] += AR_STRUCT_STATS[ard_str][atkSkills["atkARD"]]
        if "spdARD" in atkSkills: atkCombatBuffs[ATK] += AR_STRUCT_STATS[ard_str][atkSkills["spdARD"]]
        if "defARD" in atkSkills: atkCombatBuffs[ATK] += AR_STRUCT_STATS[ard_str][atkSkills["defARD"]]
        if "resARD" in atkSkills: atkCombatBuffs[ATK] += AR_STRUCT_STATS[ard_str][atkSkills["resARD"]]

    if cur_ar_structs_standing != -1 and defender.side == 1:
        if "atkARD" in defSkills: defCombatBuffs[ATK] += AR_STRUCT_STATS[ard_str][defSkills["atkARD"]]
        if "spdARD" in defSkills: defCombatBuffs[ATK] += AR_STRUCT_STATS[ard_str][defSkills["spdARD"]]
        if "defARD" in defSkills: defCombatBuffs[ATK] += AR_STRUCT_STATS[ard_str][defSkills["defARD"]]
        if "resARD" in defSkills: defCombatBuffs[ATK] += AR_STRUCT_STATS[ard_str][defSkills["resARD"]]

    # AR-O Skills
    if cur_ar_structs_destroyed != -1 and attacker.side == 0:
        if "atkARO" in atkSkills: atkCombatBuffs[ATK] += AR_STRUCT_STATS[aro_str][atkSkills["atkARD"]]
        if "spdARO" in atkSkills: atkCombatBuffs[ATK] += AR_STRUCT_STATS[aro_str][atkSkills["spdARD"]]
        if "defARO" in atkSkills: atkCombatBuffs[ATK] += AR_STRUCT_STATS[aro_str][atkSkills["defARD"]]
        if "resARO" in atkSkills: atkCombatBuffs[ATK] += AR_STRUCT_STATS[aro_str][atkSkills["resARD"]]

    if cur_ar_structs_destroyed != -1 and defender.side == 0:
        if "atkARO" in defSkills: defCombatBuffs[ATK] += AR_STRUCT_STATS[aro_str][defSkills["atkARD"]]
        if "spdARO" in defSkills: defCombatBuffs[ATK] += AR_STRUCT_STATS[aro_str][defSkills["spdARD"]]
        if "defARO" in defSkills: defCombatBuffs[ATK] += AR_STRUCT_STATS[aro_str][defSkills["defARD"]]
        if "resARO" in defSkills: defCombatBuffs[ATK] += AR_STRUCT_STATS[aro_str][defSkills["resARD"]]

    # Pegasus Flight
    if "pegasus_flight" in atkSkills and atkStats[SPD] + atkPhantomStats[SPD] >= defStats[SPD] + defPhantomStats[SPD] - 7:
        res_diff = (atkStats[RES] + atkPhantomStats[RES]) - (defStats[RES] + defPhantomStats[RES])

        defCombatBuffs[ATK] -= min(trunc((0.20 + 0.10 * atkSkills["pegasus_flight"]) * res_diff), atkSkills["pegasus_flight"] * 2 + 1)
        defCombatBuffs[DEF] -= min(trunc((0.20 + 0.10 * atkSkills["pegasus_flight"]) * res_diff), atkSkills["pegasus_flight"] * 2 + 1)

    if "pegasus_flight" in defSkills and defStats[SPD] + defPhantomStats[SPD] >= atkStats[SPD] + atkPhantomStats[SPD] - 7:
        res_diff = (defStats[RES] + defPhantomStats[RES]) - (atkStats[RES] + atkPhantomStats[RES])

        atkCombatBuffs[ATK] -= min(trunc((0.20 + 0.10 * defSkills["pegasus_flight"]) * res_diff), defSkills["pegasus_flight"] * 2 + 1)
        atkCombatBuffs[DEF] -= min(trunc((0.20 + 0.10 * defSkills["pegasus_flight"]) * res_diff), defSkills["pegasus_flight"] * 2 + 1)

    if "pegasus_flightSe" in atkSkills and atkStats[SPD] + atkPhantomStats[SPD] >= defStats[SPD] + defPhantomStats[SPD] - 7:
        res_diff = (atkStats[RES] + atkPhantomStats[RES]) - (defStats[RES] + defPhantomStats[RES])

        defCombatBuffs[ATK] -= min(trunc((0.20 + 0.10 * atkSkills["pegasus_flightSe"]) * res_diff), atkSkills["pegasus_flightSe"] * 2 + 1)
        defCombatBuffs[DEF] -= min(trunc((0.20 + 0.10 * atkSkills["pegasus_flightSe"]) * res_diff), atkSkills["pegasus_flightSe"] * 2 + 1)

    if "pegasus_flightSe" in defSkills and defStats[SPD] + defPhantomStats[SPD] >= atkStats[SPD] + atkPhantomStats[SPD] - 7:
        res_diff = (defStats[RES] + defPhantomStats[RES]) - (atkStats[RES] + atkPhantomStats[RES])

        atkCombatBuffs[ATK] -= min(trunc((0.20 + 0.10 * defSkills["pegasus_flightSe"]) * res_diff), defSkills["pegasus_flightSe"] * 2 + 1)
        atkCombatBuffs[DEF] -= min(trunc((0.20 + 0.10 * defSkills["pegasus_flightSe"]) * res_diff), defSkills["pegasus_flightSe"] * 2 + 1)

    if "pegasus_flight_4" in atkSkills and atkStats[SPD] + atkPhantomStats[SPD] >= defStats[SPD] + defPhantomStats[SPD] - 10:
        res_diff = (atkStats[RES] + atkPhantomStats[RES]) - (defStats[RES] + defPhantomStats[RES])

        atkCombatBuffs[ATK] -= min(trunc(0.80 * res_diff), 8)
        atkCombatBuffs[DEF] -= min(trunc(0.80 * res_diff), 8)

        if atkStats[SPD] + atkStats[RES] >= defStats[SPD] + defStats[RES]:
            defr.follow_up_denials -= 1

    if "pegasus_flight_4" in defSkills and defStats[SPD] + defPhantomStats[SPD] >= atkStats[SPD] + atkPhantomStats[SPD] - 10:
        res_diff = (defStats[RES] + defPhantomStats[RES]) - (atkStats[RES] + atkPhantomStats[RES])

        defCombatBuffs[ATK] -= min(trunc(0.80 * res_diff), 8)
        defCombatBuffs[DEF] -= min(trunc(0.80 * res_diff), 8)

        if defStats[SPD] + defStats[RES] >= atkStats[SPD] + atkStats[RES]:
            atkr.follow_up_denials -= 1

    # Wyvern Flight
    if "wyvern_flight" in atkSkills and atkStats[SPD] + atkPhantomStats[SPD] >= defStats[SPD] + defPhantomStats[SPD] - 10:
        def_diff = (atkStats[DEF] + atkPhantomStats[DEF]) - (defStats[DEF] + defPhantomStats[DEF])

        defCombatBuffs[ATK] -= min(trunc((0.20 + 0.10 * atkSkills["wyvern_flight"]) * res_diff), atkSkills["wyvern_flight"] * 2 + 1)
        defCombatBuffs[DEF] -= min(trunc((0.20 + 0.10 * atkSkills["wyvern_flight"]) * res_diff), atkSkills["wyvern_flight"] * 2 + 1)

    if "wyvern_flight" in defSkills and defStats[SPD] + defPhantomStats[SPD] >= atkStats[SPD] + atkPhantomStats[SPD] - 10:
        def_diff = (defStats[DEF] + defPhantomStats[DEF]) - (atkStats[DEF] + atkPhantomStats[DEF])

        atkCombatBuffs[ATK] -= min(trunc((0.20 + 0.10 * defSkills["wyvern_flight"]) * res_diff), defSkills["wyvern_flight"] * 2 + 1)
        atkCombatBuffs[DEF] -= min(trunc((0.20 + 0.10 * defSkills["wyvern_flight"]) * res_diff), defSkills["wyvern_flight"] * 2 + 1)

    # Guard Bearing
    if "guardBearing" in defSkills and defender.unitCombatInitiates == 0:
        defr.DR_first_hit_NSP.append(defSkills["guardBearing"])

    if "guardBearing4" in defSkills:
        atkCombatBuffs[SPD] -= 4
        atkCombatBuffs[DEF] -= 4

        if defender.unitCombatInitiates == 0:
            defr.DR_all_hits_NSP.append(60)
        else:
            defr.DR_all_hits_NSP.append(30)

    # Dragon's Scales
    if "dragonsScales" in atkSkills and atkHPGreaterEqual25Percent:
        def_diff = min(max(0, (atkStats[DEF] + atkPhantomStats[DEF]) - (defStats[DEF] + defPhantomStats[DEF])), 11)
        res_diff = min(max(0, (atkStats[RES] + atkPhantomStats[RES]) - (defStats[RES] + defPhantomStats[RES])), 11)

        defCombatBuffs[ATK] -= max(def_diff, res_diff)
        defCombatBuffs[DEF] -= max(def_diff, res_diff)
        defCombatBuffs[RES] -= max(def_diff, res_diff)
        atkr.follow_ups_skill += 1
        atkr.sp_jump_foe_first += 1
        atkr.damage_reduction_reduction.append(50)

    if "dragonsScales" in defSkills:
        def_diff = min(max(0, (defStats[DEF] + defPhantomStats[DEF]) - (atkStats[DEF] + atkPhantomStats[DEF])), 11)
        res_diff = min(max(0, (defStats[RES] + defPhantomStats[RES]) - (atkStats[RES] + atkPhantomStats[RES])), 11)

        atkCombatBuffs[ATK] -= max(def_diff, res_diff)
        atkCombatBuffs[DEF] -= max(def_diff, res_diff)
        atkCombatBuffs[RES] -= max(def_diff, res_diff)
        defr.follow_ups_skill += 1
        defr.sp_jump_foe_first += 1
        defr.damage_reduction_reduction.append(50)

    # Occultist's Strike
    if "occultistStrike" in atkSkills:
        atkr.foe_burn_damage += 7
        atkr.true_stat_damages_from_foe.append((RES, 20))
        defCombatBuffs[SPD] -= 4
        defCombatBuffs[RES] -= 4

    # Assassin's Strike
    if "assassinStrike" in atkSkills:
        atkr.foe_burn_damage += 7
        atkr.true_stat_damages_from_foe.append((DEF, 20))
        defCombatBuffs[SPD] -= 4
        defCombatBuffs[DEF] -= 4

    # Edged Scales
    if "edgedScales" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[SPD] -= 4
        defCombatBuffs[DEF] -= 4
        defCombatBuffs[RES] -= 4
        atkr.true_stat_damages_from_foe.append((ATK, 15))
        atkr.TDR_first_strikes += 10
        defr.outspeed_factor += 10
        atkr.speed_NFU = True

    if "edgedScales" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[SPD] -= 4
        atkCombatBuffs[DEF] -= 4
        atkCombatBuffs[RES] -= 4
        defr.true_stat_damages_from_foe.append((ATK, 15))
        defr.TDR_first_strikes += 10
        atkr.outspeed_factor += 10
        defr.speed_NFU = True

    # Havoc
    if "atkResHavoc" in atkSkills: atkr.true_stat_damages.append((RES, 20))
    if "atkResHavoc" in defSkills: defr.true_stat_damages.append((RES, 20))

    if "spdResHavoc" in atkSkills: atkr.true_stat_damages.append((RES, 20))
    if "spdResHavoc" in defSkills: defr.true_stat_damages.append((RES, 20))

    # Fatal Smoke
    if "fatalSmoke" in atkSkills:
        atkr.disable_foe_healing = True

    if "fatalSmoke" in defSkills and defSkills["fatalSmoke"] >= 3:
        defr.disable_foe_healing = True

    if "fatalSmoke" in atkSkills and atkSkills["fatalSmoke"] == 4:
        atkr.disable_foe_miracle = True

    if "fatalSmoke" in defSkills and defSkills["fatalSmoke"] == 4:
        defr.disable_foe_miracle = True

    # Pulse Smog
    if "pulseSmog" in atkSkills and defSpTriggeredByAttack:
        defr.sp_jump_first -= 1

    # Pulse Up: Blades
    if "pulseUpBlades" in atkSkills:
        atkCombatBuffs[ATK] += min(6, turn * 2)
        atkCombatBuffs[SPD] += min(6, turn * 2)

    if "pulseUpBlades" in defSkills:
        defCombatBuffs[ATK] += min(6, turn * 2)
        defCombatBuffs[SPD] += min(6, turn * 2)

    # Shadow Shift 4/Shadow Smite 4
    if "shift4" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 3 for x in atkCombatBuffs]
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "shift4" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 3 for x in defCombatBuffs]
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Lookout Force
    if "lookoutForce" in atkSkills:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[SPD] = True

    if "lookoutForce" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[SPD] += 4
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[SPD] = True

    # Active Lookout
    if "activeLookout" in atkSkills:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4
        atkr.self_desperation = True

    if "activeLookout" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[SPD] += 4

    # Time Pulse/Pulse On Edge
    if ("timePulseEdge" in atkSkills or "pulseOnBlades" in atkSkills) and attacker.specialMax != -1:
        atkCombatBuffs[ATK] += 2 + attacker.specialMax
        atkCombatBuffs[SPD] += 2 + attacker.specialMax

    if ("timePulseEdge" in defSkills or "pulseOnBlades" in defSkills) and defender.specialMax != -1:
        defCombatBuffs[ATK] += 2 + defender.specialMax
        defCombatBuffs[SPD] += 2 + defender.specialMax

    # Time Pulse Helm
    if "timePulseHelm" in atkSkills and attacker.specialMax != -1:
        atkCombatBuffs[ATK] += 2 + attacker.specialMax
        atkCombatBuffs[RES] += 2 + attacker.specialMax

    if "timePulseHelm" in defSkills and defender.specialMax != -1:
        defCombatBuffs[ATK] += 2 + defender.specialMax
        defCombatBuffs[RES] += 2 + defender.specialMax

    # Pulse On
    if "pulseOn" in atkSkills and atkSpTriggeredByAttack:
        atkr.sp_jump_followup += 2

    if "pulseOn" in defSkills and defSpTriggeredByAttack:
        defr.sp_jump_followup += 2

    # A/S Incite Hone
    if "atkSpdInciteHone" in atkSkills:
        X = len([ally for ally in atkAllAllies if Status.Incited in ally.statusPos])

        atkCombatBuffs[ATK] += min(2 + X, 5)
        atkCombatBuffs[SPD] += min(2 + X, 5)

    if "atkSpdInciteHone" in defSkills:
        X = len([ally for ally in defAllAllies if Status.Incited in ally.statusPos])

        defCombatBuffs[ATK] += min(2 + X, 5)
        defCombatBuffs[SPD] += min(2 + X, 5)

    # A/R Incite Hone
    if "atkResInciteHone" in atkSkills:
        X = len([ally for ally in atkAllAllies if Status.Incited in ally.statusPos])

        atkCombatBuffs[ATK] += min(2 + X, 5)
        atkCombatBuffs[RES] += min(2 + X, 5)

    if "atkResInciteHone" in defSkills:
        X = len([ally for ally in defAllAllies if Status.Incited in ally.statusPos])

        defCombatBuffs[ATK] += min(2 + X, 5)
        defCombatBuffs[RES] += min(2 + X, 5)

    # Assault Rush
    if "assaultRush" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkr.sp_jump_first += 1

    # INHERITABLE WEAPONS

    # Spectral Tome+/Monstrous Bow+
    if "halloweenPanic" in atkSkills: atkPostCombatEffs[2].append(("status", Status.Panic, "foes_allies", "within_2_spaces_foe"))
    if "halloweenPanic" in defSkills: defPostCombatEffs[2].append(("status", Status.Panic, "foes_allies", "within_2_spaces_foe"))

    # Steadfast Sword/Lance/Axe + Gilt Fork/Carrot Cudgel
    if "steadfast" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[DEF] = True

    if "steadfast" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[DEF] = True

    # Spendthrift Bow
    if "spendthrift" in atkSkills:
        atkCombatBuffs[ATK] += 7
        defCombatBuffs[ATK] -= 7
        atkPostCombatEffs.append(("sp_charge", -2, "self", "one"))

    if "spendthrift" in defSkills:
        defCombatBuffs[ATK] += 7
        atkCombatBuffs[ATK] -= 7
        atkPostCombatEffs.append(("sp_charge", -2, "self", "one"))

    # Rabbit Tomes
    # Melon Float/Hidden Thorns/Conch Bouquet
    if "summerInit" in atkSkills and attacker.unitCombatInitiates == 0:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[RES] += 5
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "summerInit" in defSkills and defender.unitCombatInitiates == 0:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[RES] += 5
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Flowing Lance/Helm Bow/Deck Swabber
    if "pirateWeapon" in atkSkills and not atkAdjacentToAlly:
        defCombatBuffs[atkSkills["pirateWeapon"]] -= 5
        defCombatBuffs[DEF] -= 5
        defBonusesNeutralized[atkSkills["pirateWeapon"]] = True
        defBonusesNeutralized[DEF] = True

    if "pirateWeapon" in defSkills and not defAdjacentToAlly:
        atkCombatBuffs[defSkills["pirateWeapon"]] -= 5
        atkCombatBuffs[DEF] -= 5
        atkBonusesNeutralized[defSkills["pirateWeapon"]] = True
        atkBonusesNeutralized[DEF] = True

    # Courtly Bow/Mask/Fan/Candle
    if "courtly" in atkSkills and atkHPGreaterEqual50Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[atkSkills["courtly"]] += 5

    if "courtly" in atkSkills and defHPGreaterEqual50Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[atkSkills["courtly"]] += 5

    # Blackfire Breath
    if "blackfire" in atkSkills and not atkAdjacentToAlly:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[RES] -= 5
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[RES] = True

    if "blackfire" in defSkills and not defAdjacentToAlly:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[RES] -= 5
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[RES] = True

    # Pale Breath
    if "palebreath" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[DEF] = True

    if "palebreath" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[DEF] = True

    # Candy Cane/Reindeer Bow
    if "christmas3H" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "christmas3H" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Unity/Amity/Pact Blooms
    if "heroesBlooms" in atkSkills and atkAllyWithin2Spaces:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[RES] -= 5
        atkr.all_hits_heal += 4

    if "heroesBlooms" in defSkills and defAllyWithin2Spaces:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[RES] -= 5
        defr.all_hits_heal += 4

    # Unbound Blade/Lance/Axe
    if "unbound" in atkSkills and not atkAdjacentToAlly:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[DEF] = True

    if "unbound" in defSkills and not defAdjacentToAlly:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[DEF] = True

    # Unbound Bow
    if "unboundBow" in atkSkills and not atkAdjacentToAlly:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[DEF] = True

    if "unboundBow" in defSkills and not defAdjacentToAlly:
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        atkBonusesNeutralized[SPD] = True
        atkBonusesNeutralized[DEF] = True

    # Springy Lance/Bow/Axe, Up-Front Blade/Lance/Axe
    if "upfrontBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[SPD] = True

    if "upfrontBoost" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[SPD] = True

    # Observant Staff
    if "observantStaff" in atkSkills and len(atkAllyWithin3Spaces) >= 2:
        condition = False

        n = len(atkAllyWithin3Spaces)
        for i in range(n):
            for j in range(i + 1, n):
                if atkAllyWithin3Spaces[i].isSupportOf(atkAllyWithin3Spaces[j]):
                    condition = True
                    break

        if disableSupportEffects:
            condition = False

        if condition:
            atkCombatBuffs = [x + 6 for x in atkCombatBuffs]
            defBonusesNeutralized = [True] * 5

    if "observantStaff" in defSkills and len(defAllyWithin3Spaces) >= 2:
        condition = False

        n = len(defAllyWithin3Spaces)
        for i in range(n):
            for j in range(i + 1, n):
                if defAllyWithin3Spaces[i].isSupportOf(defAllyWithin3Spaces[j]):
                    condition = True
                    break

        if disableSupportEffects:
            condition = False

        if condition:
            defCombatBuffs = [x + 6 for x in defCombatBuffs]
            atkBonusesNeutralized = [True] * 5

    # Love Bouquet
    if "jointBouquet" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[RES] += 6

    if "jointBouquet" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[RES] += 6

    # Love Candelabra
    if "alliedBoost" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[DEF] += 6

    if "alliedBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[DEF] += 6

    # Trident/Shellpoint Lance
    if ("summerAllyAtk" in atkSkills or "summerAllyDef" in atkSkills) and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5

    if ("summerAllyAtk" in defSkills or "summerAllyDef" in defSkills) and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5

    # Lion Tome
    if "lionBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[RES] += 5

    if "lionBoost" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[RES] += 5

    # Luminous Grace/Drifting Grace
    if "crusaderBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "crusaderBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Lantern Breath/Spider Plush, Deer Tomes
    if "shikanokonokonokokoshitantan" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        defCombatBuffs[ATK] -= 5
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "shikanokonokonokokoshitantan" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 5
        atkCombatBuffs[ATK] -= 5
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Vicious Dagger
    if "vicious" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.offensive_NFU = True

    # Bone Carver
    if "boneCarver" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 7, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "boneCarver" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 7, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Piercing Tribute
    if "tribute?" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.defensive_NFU = True

    if "tribute?" in defSkills:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.defensive_NFU = True

    # Staff of Tribute
    if "tributeStaff" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[DEF] += 6
        atkCombatBuffs[RES] += 6
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 5, "self_and_allies", "within_1_spaces_self"))

    if "tributeStaff" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[DEF] += 6
        defCombatBuffs[RES] += 6
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 5, "self_and_allies", "within_1_spaces_self"))

    if "tributeStaffPlus" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[DEF] += 6
        atkCombatBuffs[RES] += 6
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self_and_allies", "within_2_spaces_self"))

    if "tributeStaffPlus" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[DEF] += 6
        defCombatBuffs[RES] += 6
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self_and_allies", "within_2_spaces_self"))

    if "whitecapBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "whitecapBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Pursual Lance/Axe, Coral Saber/Seahorse Axe
    if "pursualW" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        atkr.follow_ups_skill += 1

    if "pursualW" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        defr.follow_ups_skill += 1

    # Florid Cane/Florid Knife
    if "thiefBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "thiefBoost" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Flame Gunbai
    if "burnPenalty" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        defCombatBuffs[ATK] -= trunc(0.20 * atkStats[DEF])
        defCombatBuffs[DEF] -= trunc(0.20 * atkStats[DEF])

    if "burnPenalty" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        atkCombatBuffs[ATK] -= trunc(0.20 * defStats[DEF])
        atkCombatBuffs[DEF] -= trunc(0.20 * defStats[DEF])

    # Surprise Breath
    if "surpriseBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[RES] += 5
        defCombatBuffs[ATK] -= trunc(0.20 * atkStats[RES])
        defCombatBuffs[RES] -= trunc(0.20 * atkStats[RES])

    if "surpriseBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[RES] += 5
        atkCombatBuffs[ATK] -= trunc(0.20 * defStats[RES])
        atkCombatBuffs[RES] -= trunc(0.20 * defStats[RES])

    # Serenity Breath
    if "serenityBoost" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[RES] -= 5
        defr.follow_up_denials -= 1

    if "serenityBoost" in defSkills:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[RES] -= 5
        atkr.follow_up_denials -= 1

    # Peppy Bow/Peppy Cane
    if "peppyBoost" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[atkSkills["peppyBoost"]] -= 5
        defr.follow_up_denials -= 1

    if "peppyBoost" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[defSkills["peppyBoost"]] -= 5
        atkr.follow_up_denials -= 1

    # Magical Lantern/Lantern Tomes
    if "lanternTome" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[RES] += 5

    if "lanternTome" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[RES] += 5

    # Protection Edge/Pike/Bow
    if "protectionBoost" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "protectionBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Petalfall Blade/Vase, Null Blade/Spear
    if "nullWeapon" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "nullWeapon" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Bunny's Egg/Hare's Lance
    if "easterFirstHitDR" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.DR_first_hit_NSP.append(atkSkills["easterFirstHitDR"])

    if "easterFirstHitDR" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.DR_first_hit_NSP.append(defSkills["easterFirstHitDR"])

    # Sunlight/Seaside Parasol
    if "sunlight" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        defCombatBuffs[RES] -= min((len(defender.statusPos) + len(defender.statusNeg)) * 4, 16)

    if "sunlight" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        atkCombatBuffs[RES] -= min((len(attacker.statusPos) + len(attacker.statusNeg)) * 4, 16)

    # Wooden Tackle, Campaign Sword/Lance
    if "campaignBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        defCombatBuffs[ATK] += min(trunc(0.25 * atkHPCur), 10)
        defCombatBuffs[DEF] += min(trunc(0.25 * atkHPCur), 10)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 10, "self", "one"))

    if "campaignBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        atkCombatBuffs[ATK] += min(trunc(0.25 * atkHPCur), 10)
        atkCombatBuffs[DEF] += min(trunc(0.25 * atkHPCur), 10)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 10, "self", "one"))

    # Seashell Bowl
    if "seashellBowl" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        defCombatBuffs[SPD] += min(trunc(0.25 * atkHPCur), 10)
        defCombatBuffs[RES] += min(trunc(0.25 * atkHPCur), 10)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 10, "self", "one"))

    if "seashellBowl" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        atkCombatBuffs[SPD] += min(trunc(0.25 * atkHPCur), 10)
        atkCombatBuffs[RES] += min(trunc(0.25 * atkHPCur), 10)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 10, "self", "one"))

    # Teatime Set
    if "teatimeSet" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "teatimeSet" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Whitewind Bow, Gainful Bow/Dagger
    if "whitewindBow" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5 + 2 * (len(attacker.statusPos) + len(defender.statusNeg))
        atkCombatBuffs[SPD] += 5 + 2 * (len(attacker.statusPos) + len(defender.statusNeg))

    if "whitewindBow" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5 + 2 * (len(defender.statusPos) + len(attacker.statusNeg))
        defCombatBuffs[SPD] += 5 + 2 * (len(defender.statusPos) + len(attacker.statusNeg))

    # Wind Tribe Club
    if "windTribeClub" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5 + 2 * (len(attacker.statusPos) + len(defender.statusNeg))
        atkCombatBuffs[DEF] += 5 + 2 * (len(attacker.statusPos) + len(defender.statusNeg))

    if "windTribeClub" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5 + 2 * (len(defender.statusPos) + len(attacker.statusNeg))
        defCombatBuffs[DEF] += 5 + 2 * (len(defender.statusPos) + len(attacker.statusNeg))

    # Kumo Yumi/Naginata
    if "kumoBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "kumoBoost" in defSkills and atkHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    # Dragon's Stone
    if "dragonsStone" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "dragonsStone" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # New-Sun Stone
    if "newSunStone" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + atkSkills["newSunStone"] for x in atkCombatBuffs]
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1
        atkr.TDR_first_stats.append((ATK, 15))

    if "newSunStone" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + defSkills["newSunStone"] for x in defCombatBuffs]
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1
        defr.TDR_first_stats.append((ATK, 15))

    # Nabata Lance/Hexblade Sword
    if "hexbladeWeapon" in atkSkills:
        atkCombatBuffs = [x + atkSkills["hexbladeWeapon"] for x in atkCombatBuffs]
        atkr.true_stat_damages.append((ATK, 10))

    if "hexbladeWeapon" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + defSkills["hexbladeWeapon"] for x in defCombatBuffs]
        defr.true_stat_damages.append((ATK, 10))

    # Nabata Beacon
    if "nabataBeacon" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((ATK, 10))

    if "nabataBeacon" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.true_stat_damages.append((ATK, 10))

    # Axe of Devotion/Devoted Basket
    if "devotedWeapon" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5 + trunc(0.15 * atkStats[atkSkills["devotedWeapon"]])
        atkCombatBuffs[RES] += 5 + trunc(0.15 * atkStats[atkSkills["devotedWeapon"]])

    if "devotedWeapon" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5 + trunc(0.15 * defStats[defSkills["devotedWeapon"]])
        defCombatBuffs[RES] += 5 + trunc(0.15 * defStats[defSkills["devotedWeapon"]])

    # Carrot Bow
    if "carrotBow" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[RES] += 5

        if Status.Discord in defender.statusNeg:
            atkr.follow_ups_skill += 1
            defr.follow_up_denials -= 1

    if "carrotBow" in defSkills:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[RES] += 5

        if Status.Discord in attacker.statusNeg:
            defr.follow_ups_skill += 1
            atkr.follow_up_denials -= 1

    # Harp Bow/Dragonbloom
    if "bridal24Boost" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 15))

        if attacker.unitCombatInitiates == 0:
            atkr.DR_first_strikes_NSP.append(2 * atkSkills["bridal24Boost"])
        else:
            atkr.DR_first_strikes_NSP.append(atkSkills["bridal24Boost"])

    if "bridal24Boost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 15))

        if defender.unitCombatInitiates == 0:
            defr.DR_first_strikes_NSP.append(2 * defSkills["bridal24Boost"])
        else:
            defr.DR_first_strikes_NSP.append(defSkills["bridal24Boost"])

    # Sea Tambourine
    if "seaTembourine" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

        if turn % 2 == 1:
            atkCombatBuffs[ATK] += 6
            atkCombatBuffs[SPD] += 6

    if "seaTembourine" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

        if turn % 2 == 1:
            defCombatBuffs[ATK] += 6
            defCombatBuffs[SPD] += 6

    # Tropical Conch
    if "tropicalConch" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5

        if turn % 2 == 1:
            atkCombatBuffs[ATK] += 6
            atkCombatBuffs[DEF] += 6

    if "tropicalConch" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5

        if turn % 2 == 1:
            defCombatBuffs[ATK] += 6
            defCombatBuffs[DEF] += 6

    # Small Spade
    if "smallSpade" in atkSkills and atkHPGreaterEqual25Percent:
        X = 0

        for ally in atkAllyWithin3RowsCols:
            if ally.get_visible_stat(ATK) >= 55:
                X += 1
            if ally.get_visible_stat(SPD) >= 40:
                X += 1

        X = min(X, 3)

        atkCombatBuffs[ATK] += 5 + 5 * X
        atkCombatBuffs[SPD] += 5 + 5 * X
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "smallSpade" in defSkills and defHPGreaterEqual25Percent:
        X = 0

        for ally in defAllyWithin3RowsCols:
            if ally.get_visible_stat(ATK) >= 55:
                X += 1
            if ally.get_visible_stat(SPD) >= 40:
                X += 1

        X = min(X, 3)

        defCombatBuffs[ATK] += 5 + 5 * X
        defCombatBuffs[SPD] += 5 + 5 * X
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Anchor Axe
    if "anchorAxe" in atkSkills and atkHPGreaterEqual25Percent:
        X = 0

        for ally in atkAllyWithin3RowsCols:
            if ally.get_visible_stat(ATK) >= 55:
                X += 1
            if ally.get_visible_stat(DEF) >= 40:
                X += 1

        X = min(X, 3)

        atkCombatBuffs[ATK] += 5 + 5 * X
        atkCombatBuffs[DEF] += 5 + 5 * X
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "anchorAxe" in defSkills and defHPGreaterEqual25Percent:
        X = 0

        for ally in defAllyWithin3RowsCols:
            if ally.get_visible_stat(ATK) >= 55:
                X += 1
            if ally.get_visible_stat(DEF) >= 40:
                X += 1

        X = min(X, 3)

        defCombatBuffs[ATK] += 5 + 5 * X
        defCombatBuffs[DEF] += 5 + 5 * X
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Ice Dagger/Ice Dragonstone
    if "iceDagger" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkr.damage_reduction_reduction.append(50)

    if "iceDagger" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defr.damage_reduction_reduction.append(50)

    # Giant Shuriken
    if "giantShuriken" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.offensive_tempo = True
        atkr.defensive_tempo = True

    if "giantShuriken" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.offensive_tempo = True
        defr.defensive_tempo = True

    # Snaking Bow
    if "snakingBow" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((ATK, 10))
        atkr.sp_pierce_DR = True

    if "snakingBow" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages.append((ATK, 10))
        defr.sp_pierce_DR = True

    # Jehanna Lance/Dagger
    if "jehannaBoost" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.TDR_all_hits += 7
        atkr.retaliatory_reduced += 1

    if "jehannaBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.TDR_all_hits += 7
        defr.retaliatory_reduced += 1

    # Devoted Cup
    if "devotedCup" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        X = len(attacker.statusPos + defender.statusNeg)
        atkr.true_all_hits += min(X * 5, 25)

    if "devotedCup" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        X = len(defender.statusPos + attacker.statusNeg)
        defr.true_all_hits += min(X * 5, 25)

    # Spring-Air Axe/Egg
    if "springAirBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkr.true_all_hits += min(5 * (len(defAllyWithin3RowsCols) + 1), 20)

    if "springAirBoost" in defSkills and defHPGreaterEqual25Percent:
        defr.true_all_hits += min(5 * (len(atkAllyWithin3RowsCols) + 1), 20)

    if "springAirTempo_f" in atkSkills: defr.defensive_tempo = True
    if "springAirTempo_f" in defSkills: atkr.defensive_tempo = True

    # Crab Tomes
    if "giantEnemyCrab" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_all_hits += min(len(attacker.statusPos) * 5, 25)

    if "giantEnemyCrab" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_all_hits += min(len(defender.statusPos) * 5, 25)

    # Bridal Bouquet
    if "bridalBouquet" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defBonusesNeutralized = [True] * 5
        atkr.true_all_hits += min(5 * len(atkAllyWithin3RowsCols), 15)

    if "bridalBouquet" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkBonusesNeutralized = [True] * 5
        defr.true_all_hits += min(5 * len(defAllyWithin3RowsCols), 15)

    # Bouquet Baton
    if "bouquetBaton" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkPenaltiesNeutralized = [True] * 5
        atkr.true_all_hits += min(5 * len(atkAllyWithin3RowsCols), 15)

    if "bouquetBaton" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defPenaltiesNeutralized = [True] * 5
        defr.true_all_hits += min(5 * len(defAllyWithin3RowsCols), 15)

    # Fannin' Foliage/Tropical Juice
    if "bigapostrophefan" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((ATK, 15))

    if "bigapostrophefan" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages.append((ATK, 15))

    # SPECIALS
    if "blueFlame" in atkSkills:
        if atkAdjacentToAlly:
            atkSkills.update({"blueFlameSp": 25})
        else:
            atkSkills.update({"blueFlameSp": 10})

    if "blueFlame" in defSkills:
        if defAdjacentToAlly:
            defSkills.update({"blueFlameSp": 25})
        else:
            defSkills.update({"blueFlameSp": 10})

    # Armored Beacon/Floe
    if "rangedAllSpecialDR" in atkSkills and defender.wpnType in RANGED_WEAPONS:
        atkr.DR_sp_trigger_by_any_special_SP.append(40)

    if "rangedAllSpecialDR" in defSkills and attacker.wpnType in RANGED_WEAPONS:
        defr.DR_sp_trigger_by_any_special_SP.append(40)

    # Armored Blaze
    if "meleeAllSpecialDR" in atkSkills and defender.wpnType in MELEE_WEAPONS:
        atkr.DR_sp_trigger_by_any_special_SP.append(40)

    if "meleeAllSpecialDR" in defSkills and attacker.wpnType in MELEE_WEAPONS:
        defr.DR_sp_trigger_by_any_special_SP.append(40)

    # Damage Reduction granted by any special being ready/triggered
    if "uncondAnySpecialDR" in atkSkills:
        atkr.DR_sp_trigger_by_any_special_SP.append(40)

    if "uncondAnySpecialDR" in defSkills:
        defr.DR_sp_trigger_by_any_special_SP.append(40)

    # Haze Slice
    if "hazeSlice" in atkSkills:
        atkr.DR_all_hits_SP.append(40)
        atkr.sp_jump_first += 1

    # START OF UNIT-EXCLUSIVE WEAPONS/SKILLS

    # Base - Unrefined weapon
    # Refine Base - Updated base effect granted for refining a weapon in any way
    # Refine Eff - Added effect added by choosing the Effect refine

    # SHADOW DRAGON/(NEW) MYSTERY OF THE EMBLEM

    # Binding Shield - L!Marth
    if "bindingShield" in atkSkills and defender.wpnType in DRAGON_WEAPONS:
        atkr.follow_ups_skill += 1
        defr.follow_up_denials -= 1
        cannotCounter = True

    if "bindingShield" in defSkills and attacker.wpnType in DRAGON_WEAPONS:
        defr.follow_ups_skill += 1
        atkr.follow_up_denials -= 1

    # Brilliant Rapier (Base) - CH!Marth
    if "phinaAintGetNoneLmaoo" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defBonusesNeutralized[SPD] = True
        defBonusesNeutralized[DEF] = True

    if "phinaAintGetNoneLmaoo" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkBonusesNeutralized[SPD] = True
        atkBonusesNeutralized[DEF] = True

        if defHPCur / defStats[HP] <= 0.80:
            defr.vantage = True

    # Hero-King Sword - E!Marth
    if "its ok emblem you can call me engage" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 + trunc(0.20 * atkStats[SPD]) for x in atkCombatBuffs]
        atkr.DR_first_strikes_NSP.append(40)
        atkr.damage_reduction_reduction.append(50)
        atkr.self_desperation = True

    if "its ok emblem you can call me engage" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 + trunc(0.20 * defStats[SPD]) for x in defCombatBuffs]
        defr.DR_first_strikes_NSP.append(40)
        defr.damage_reduction_reduction.append(50)
        defr.self_desperation = True

    # Potent DR
    if "potentDR" in atkSkills: atkr.DR_all_hits_NSP.append(atkSkills["potentDR"])
    if "potentDR" in defSkills: defr.DR_all_hits_NSP.append(defSkills["potentDR"])

    # Sword of Peace - FE!Marth
    if "drivePreempt_f" in atkSkills: atkr.sp_jump_first += atkSkills["drivePreempt_f"]
    if "drivePreempt_f" in defSkills: defr.sp_jump_first += defSkills["drivePreempt_f"]

    # The Fire Emblem - FE!Marth
    if "THE Fire Emblem" in atkSkills: atkr.DR_fire_emblem_SP = True
    if "THE Fire Emblem" in defSkills: defr.DR_fire_emblem_SP = True

    # Feather Sword (Base) - CH!Caeda
    if "caedaVantage" in defSkills and (attacker.wpnType in ["Sword", "Lance", "Axe", "CBow"] or attacker.move == 3 or defHPCur / defStats[0] <= 0.75):
        defr.vantage = True

    # Feather Sword (Refine Base) - CH!Caeda
    if "featherSwordRefBase" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "featherSwordRefBase" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.defensive_NFU = True

        if (attacker.wpnType in ["Sword", "Lance", "Axe", "CBow"] or attacker.move == 3 or defHPCur / defStats[0] <= 0.90):
            defr.vantage = True

    # Feather Sword (Refine Eff) - CH!Caeda
    if "refinedFeather" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += min(len(atkAllyWithin3Spaces) * 3, 6)
        atkCombatBuffs[SPD] += min(len(atkAllyWithin3Spaces) * 3, 6)
        atkr.DR_first_strikes_NSP.append(40)

    if "refinedFeather" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += min(len(defAllyWithin3Spaces) * 3, 6)
        defCombatBuffs[SPD] += min(len(defAllyWithin3Spaces) * 3, 6)
        defr.DR_first_strikes_NSP.append(40)

    # Belief in Love - CH!Caeda
    if "beliefInLove" in atkSkills and defHPEqual100Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5

    if "beliefInLove" in defSkills:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5

    # Dolphin-Dive Axe (Base) - SU!Caeda
    if "suCaedaBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

    if "suCaedaBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

    # Pure-Wing Spear (Base) - X!Caeda
    if "pureWing" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + min(len(atkAllyWithin3Spaces) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.damage_reduction_reduction.append(50)
        atkr.DR_all_hits_NSP.append(30)
        atkr.all_hits_heal += 7
        if defender.move == 3 or defender.move == 1:
            atkr.all_hits_heal += 14
        else:
            atkr.all_hits_heal += 7

    if "pureWing" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + min(len(defAllyWithin3Spaces) * 3 + 5, 14) for x in defCombatBuffs]
        defr.damage_reduction_reduction.append(50)
        defr.DR_all_hits_NSP.append(30)

        if attacker.move == 3 or attacker.move == 1:
            defr.all_hits_heal += 14
        else:
            defr.all_hits_heal += 7

    # Breath of Fog (Refine Eff) - Y!Tiki/A!Tiki
    if "tikiBoost" in atkSkills:
        if any(ally.wpnType == "Sword" or ally.wpnType in DRAGON_WEAPONS for ally in atkAllyWithin2Spaces):
            atkCombatBuffs[ATK] += 5
            atkCombatBuffs[DEF] += 5

    if "tikiBoost" in defSkills:
        if any(ally.wpnType == "Sword" or ally.wpnType in DRAGON_WEAPONS for ally in defAllyWithin2Spaces):
            defCombatBuffs[ATK] += 5
            defCombatBuffs[DEF] += 5

    # Summer's Breath (Refine Base)
    if "SUTikiBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.spGainWhenAtkd += 1
        atkr.spGainOnAtk += 1

    if "SUTikiBoost" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.spGainWhenAtkd += 1
        defr.spGainOnAtk += 1

    # Summer's Breath (Refine Eff)
    if "SUTikiDamage" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "SUTikiDamage" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Remote Breath (Base) - B!A!Tiki
    if "bTikiBoost" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1

        if atkSpTriggeredByAttack:
            atkr.sp_jump_first -= 1

    if "bTikiBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1

        if defSpTriggeredByAttack:
            defr.sp_jump_first -= 1

    # Remote Breath (Refine Eff) - B!A!Tiki
    if "This might get unpleasant!" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 + trunc(0.10 * atkStats[RES]) for x in atkCombatBuffs]
        atkr.TDR_stats.append((RES, 20))
        atkr.damage_reduction_reduction.append(50)

    if "This might get unpleasant!" in defSkills:
        ignore_range = True

        if defHPGreaterEqual25Percent:
            defCombatBuffs = [x + 5 + trunc(0.10 * defStats[RES]) for x in defCombatBuffs]
            defr.TDR_stats.append((RES, 20))
            defr.damage_reduction_reduction.append(50)

    # New Divinity - B!A!Tiki
    if "newDivinity" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[RES] -= 5
        atkr.stat_scaling_DR.append((RES, 40))

        if atkHPCur/atkStats[HP] >= 0.40:
            defr.follow_up_denials -= 1

    if "newDivinity" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[RES] -= 5
        defr.stat_scaling_DR.append((RES, 40))

        if defHPCur/defStats[HP] >= 0.40:
            atkr.follow_up_denials -= 1

    # Awoken Breath (Base) - A!Y!Tiki
    if "ascTikiBoost" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        defBonusesNeutralized = [True] * 5

    if "ascTikiBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        atkBonusesNeutralized = [True] * 5

    # All Together - A!Y!Tiki
    if "allTogether!" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.DR_first_hit_NSP.append(min(20 * len(atkAllyWithin2Spaces), 40))

    if "allTogether!" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.DR_first_hit_NSP.append(min(20 * len(defAllyWithin2Spaces), 40))

    # Twin Divinestone (Base) - BR!A!Tiki
    if "brTikiBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "brTikiBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Ancient Voice - X!Y!Tiki
    if "yyTikiBoost" in atkSkills and atkAllyWithin3Spaces:
        atkr.alternative_sp_stat = 1
        atkCombatBuffs = [x + min(len(atkAllyWithin3Spaces) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((DEF, 20))

    if "yyTikiBoost" in defSkills and defAllyWithin3Spaces:
        defr.alternative_sp_stat = 1
        defCombatBuffs = [x + min(len(defAllyWithin3Spaces) * 3 + 5, 14) for x in defCombatBuffs]
        defr.true_stat_damages.append((DEF, 20))

    # Love for All! - Dragon Tiki
    if "loveForAll!" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        atkr.TDR_first_strikes += min(7 * len(atkAllyWithin3Spaces), 14)
        atkr.sp_jump_foe_first += min(len(atkAllyWithin3Spaces), 3)
        atkr.sp_pierce_DR = True

    if "loveForAll!" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        defr.TDR_first_strikes += min(7 * len(defAllyWithin3Spaces), 14)
        defr.sp_jump_foe_first += min(len(defAllyWithin3Spaces), 3)
        defr.sp_pierce_DR = True

    if "loveJump_f" in atkSkills: atkr.sp_jump_foe_first += atkSkills["loveJump_f"]
    if "loveJump_f" in defSkills: defr.sp_jump_foe_first += defSkills["loveJump_f"]

    # Veteran Lance (Base) - Jagen
    if "old" in atkSkills and defHPCur / defStats[HP] >= 0.70:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[RES] += 5

    if "old" in defSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[RES] += 5

    # Stalwart Sword (Base) - Draug
    if "draugBlade" in defSkills:
        atkCombatBuffs[ATK] -= 6

    # Stalwart Sword (Refine Eff) - Draug
    if "guardraug" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[DEF] = True

    if "guardraug" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[DEF] = True

    # Devil Axe (Base) - Barst
    if "devilAxe" in atkSkills: atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
    if "devilAxe" in defSkills: defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Parthia (Refine Base) - Jeorge
    if "parthiaRedu" in atkSkills and defender.wpnType in TOME_WEAPONS: atkr.DR_first_hit_NSP.append(30)
    if "parthiaRedu" in defSkills and attacker.wpnType in TOME_WEAPONS: defr.DR_first_hit_NSP.append(30)

    # Parthia (Refine Eff) - Jeorge
    if "parthia2RangeBoost" in atkSkills and defender.wpnType in RANGED_WEAPONS: atkCombatBuffs[ATK] += 6
    if "parthia2RangeBoost" in defSkills and attacker.wpnType in RANGED_WEAPONS: defCombatBuffs[ATK] += 6

    # Aura (Linde) / Excalibur (Merric)
    if "lindeBoost" in atkSkills:
        if any(ally.wpnType in TOME_WEAPONS or ally.wpnType == "Staff" for ally in atkAllyWithin2Spaces):
            atkCombatBuffs[ATK] += 5
            atkCombatBuffs[SPD] += 5

    if "lindeBoost" in defSkills:
        if any(ally.wpnType in TOME_WEAPONS or ally.wpnType == "Staff" for ally in defAllyWithin2Spaces):
            defCombatBuffs[ATK] += 5
            defCombatBuffs[SPD] += 5

    # Celestial Globe (Base) - DE!Linde
    if "deLindeBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))
        atkr.damage_reduction_reduction.append(50)

    if "deLindeBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))
        defr.damage_reduction_reduction.append(50)

    # Winds of Change (Refine Eff) - CH!Merric
    if "You hear that?" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.offensive_tempo = True
        defBonusesNeutralized[SPD] = True
        defBonusesNeutralized[RES] = True
        atkr.sp_pierce_DR = True

    if "You hear that?" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.offensive_tempo = True
        atkBonusesNeutralized[SPD] = True
        atkBonusesNeutralized[RES] = True
        defr.sp_pierce_DR = True

    # Tender Excalibur - A!Merric
    if "aMerricBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        low_hp_allies = 0

        for ally in atkAllAllies:
            if ally.HPcur / ally.visible_stats[HP] <= 0.40:
                low_hp_allies += 1

        atkCombatBuffs[ATK] += max(9 - 3 * low_hp_allies, 0)
        atkCombatBuffs[SPD] += max(9 - 3 * low_hp_allies, 0)

        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.DR_first_strikes_NSP.append(30)

        if atkSpTriggeredByAttack:
            atkr.sp_jump_first += 1
            atkr.sp_jump_followup += 1

    if "aMerricBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        low_hp_allies = 0

        for ally in defAllAllies:
            if ally.HPcur / ally.visible_stats[HP] <= 0.40:
                low_hp_allies += 1

        defCombatBuffs[ATK] += max(9 - 3 * low_hp_allies, 0)
        defCombatBuffs[SPD] += max(9 - 3 * low_hp_allies, 0)

        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.DR_first_strikes_NSP.append(30)

        if defSpTriggeredByAttack:
            defr.sp_jump_first += 1
            defr.sp_jump_followup += 1

    # Dark Aura (Linde/Delthea)
    if "darkAuraBoost" in atkSkills:
        if any(ally.wpnType in MELEE_WEAPONS for ally in atkAllyWithin2Spaces):
            atkCombatBuffs[ATK] += 5
            atkCombatBuffs[SPD] += 5

    if "darkAuraBoost" in defSkills:
        if any(ally.wpnType in MELEE_WEAPONS for ally in defAllyWithin2Spaces):
            defCombatBuffs[ATK] += 5
            defCombatBuffs[SPD] += 5

    # Pegasus Sisters (Palla, Catria, Est)
    if "triangleAtk" in atkSkills and len(atkFlyAlliesWithin2Spaces) >= 2:
        atkCombatBuffs = [x + 3 for x in atkCombatBuffs]
        atkr.brave = True

    if "triangleAtk" in defSkills and len(defFlyAlliesWithin2Spaces) >= 2:
        defCombatBuffs = [x + 3 for x in defCombatBuffs]

    # Whitedown Spear (Base) - CH!Palla
    if "OH SHE FLIIIIIEEEESSS" in atkSkills:
        flier_count = 1 if attacker.move == 2 else 0

        if len([ally for ally in atkAllyWithin2Spaces if ally.move == 3]) + flier_count >= 3:
            atkr.follow_ups_skill += 1
            defCombatBuffs[ATK] -= 4
            defCombatBuffs[DEF] -= 4

        if len(atkFlyAlliesWithin2Spaces) >= 2:
            atkr.brave = True

    if "OH SHE FLIIIIIEEEESSS" in defSkills:
        flier_count = 1 if defender.move == 2 else 0

        if len([ally for ally in defAllyWithin2Spaces if ally.move == 3]) + flier_count >= 3:
            defr.follow_ups_skill += 1
            atkCombatBuffs[ATK] -= 4
            atkCombatBuffs[DEF] -= 4

    # Whitedown Spear (Refine Base) - CH!Palla
    if "THROUGH THE PROUD DARKNESS" in atkSkills:
        defCombatBuffs[ATK] -= 4
        defCombatBuffs[SPD] -= 4
        defCombatBuffs[DEF] -= 4
        atkr.follow_ups_skill += 1

        if len([ally for ally in atkAllyWithin3Spaces if ally.move == 2]) >= 2:
            atkr.brave = True

    if "THROUGH THE PROUD DARKNESS" in defSkills and defAllyWithin3Spaces:
        atkCombatBuffs[ATK] -= 4
        atkCombatBuffs[SPD] -= 4
        atkCombatBuffs[DEF] -= 4
        defr.follow_ups_skill += 1

        if len([ally for ally in defAllyWithin3Spaces if ally.move == 2]) >= 2:
            defr.brave = True

    # Whitedown Spear (Refine Eff) - CH!Palla
    if "RATHER THAN, THE BREATHLESS VASTNESS OF THE WORLD" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 15))

        if len([ally for ally in atkAllyWithin3Spaces if ally.move == 2]) >= 2:
            atkr.spGainWhenAtkd += 1
            atkr.spGainOnAtk += 1

    if "RATHER THAN, THE BREATHLESS VASTNESS OF THE WORLD" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 15))

        if len([ally for ally in defAllyWithin3Spaces if ally.move == 2]) >= 2:
            defr.spGainWhenAtkd += 1
            defr.spGainOnAtk += 1

    # Ladyblade (Refine Base) - Valentia Palla
    if "valentiaPallaBoost" in atkSkills:
        atkr.brave = True
        atkr.true_stat_damages.append((DEF, 20))
        atkr.hexblade = True

    if "valentiaPallaBoost" in defSkills:
        defr.brave = True
        defr.true_stat_damages.append((DEF, 20))
        defr.hexblade = True

    # Ladyblade (Refine Eff) - Valentia Palla
    if "valentiaPallaRefine" in atkSkills and atkAllyWithin3Spaces:
        X = trunc(0.10 * atkStats[DEF]) + 5
        atkCombatBuffs[ATK] += X
        atkCombatBuffs[DEF] += X
        atkCombatBuffs[RES] += X

        atkr.TDR_stats.append((DEF, 20))
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "valentiaPallaRefine" in defSkills and defAllyWithin3Spaces:
        X = trunc(0.10 * defStats[DEF]) + 5
        defCombatBuffs[ATK] += X
        defCombatBuffs[DEF] += X
        defCombatBuffs[RES] += X

        defr.TDR_stats.append((DEF, 20))
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Huginn's Egg (Base Refine) - SP!Catria
    if "catriaDualChill" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "catriaDualChill" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Huginn's Egg (Base Eff) - SP!Catria
    if "catriaBoost" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.DR_first_hit_NSP.append(30)

    if "catriaBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.DR_first_hit_NSP.append(30)

    # Eagle's Egg (Base) - SP!Est
    if "spEstBoost" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkPenaltiesNeutralized = [True] * 5

    if "spEstBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defPenaltiesNeutralized = [True] * 5

    # Eagle's Egg (Refine Base) - SP!Est
    if "spEstRefine" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkPenaltiesNeutralized = [True] * 5
        atkr.follow_ups_skill += 1

    if "spEstRefine" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defPenaltiesNeutralized = [True] * 5
        defr.follow_ups_skill += 1

    # Tri-Edge Lance (Base) - P!Est
    if "triEdge" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((RES, 20))
        atkr.DR_first_hit_NSP.append(40)

    if "triEdge" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages.append((RES, 20))
        defr.DR_first_hit_NSP.append(40)

    # Dragoon Axe (Base) - CH!Minerva
    if "chMinervaBoost" in atkSkills and defHPEqual100Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "chMinervaBoost" in defSkills and atkHPEqual100Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Dragoon Axe (Refine Base) - CH!Minerva
    if "minervaAxe!" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "minervaAxe!" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Dragoon Axe (Refine Eff) - CH!Minerva
    if "I think I'm starting to lose it" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "I think I'm starting to lose it" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # Pastel Poleaxe (Base) - SP!Maria
    if "spMariaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((DEF, 20))
        atkr.TDR_stats.append((DEF, 20))
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self_and_allies", "within_2_spaces_self"))

    if "spMariaBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages.append((DEF, 20))
        defr.TDR_stats.append((DEF, 20))
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self_and_allies", "within_2_spaces_self"))

    # Sacrifice Staff (Base) - FA!Maria
    if "sacrificeStaff" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.offensive_tempo = True

    if "sacrificeStaff" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.offensive_tempo = True

    if "sacrificeStaff_f" in atkSkills:
        atkr.pseudo_miracle = True

    if "sacrificeStaff_f" in defSkills:
        defr.pseudo_miracle = True

    # Gladiator's Blade (Refine Eff) - Ogma
    if "ogmaBoost" in atkSkills and (atkInfAlliesWithin2Spaces or atkFlyAlliesWithin2Spaces):
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4

    if "ogmaBoost" in defSkills and (defInfAlliesWithin2Spaces or defFlyAlliesWithin2Spaces):
        defCombatBuffs[ATK] += 4
        defCombatBuffs[SPD] += 4

    # Panther Lance/Sword, Bull Blade/Spear (Base) - Abel, Stahl, Cain, Sully
    if "bibleBros" in atkSkills:
        atkCombatBuffs[ATK] += min(len(atkAllyWithin2Spaces) * 2, 6)
        atkCombatBuffs[DEF] += min(len(atkAllyWithin2Spaces) * 2, 6)

    if "bibleBros" in defSkills:
        defCombatBuffs[ATK] += min(len(defAllyWithin2Spaces) * 2, 6)
        defCombatBuffs[DEF] += min(len(defAllyWithin2Spaces) * 2, 6)

    # Panther Lance/Sword, Bull Blade/Spear (Refine Eff) - Abel, Stahl, Cain, Sully
    if "bibleBrosBrave" in atkSkills:
        for ally in atkAllyWithin2Spaces:
            if ally.move == 1 and (ally.wpnType == "Sword" or ally.wpnType == "Lance" or ally.wpnType == "Axe"):
                atkr.brave = True

    # Crimson Axe (Refine Eff) - Sheena
    if "sheenaBoost" in atkSkills and defHPEqual100Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "sheenaBoost" in defSkills and atkHPEqual100Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Joker's Wild (Base) - H!Xane
    if "xaneStatSet" in atkSkills and atkAllyWithin2Spaces:
        for i in range(1, 5):
            maximum_stat = max([ally.get_visible_stat(i) for ally in atkAllyWithin2Spaces], default=0)
            atkCombatBuffs[i] += maximum_stat - atkStats[i]

    if "xaneStatSet" in defSkills and defAllyWithin2Spaces:
        for i in range(1, 5):
            maximum_stat = max([ally.get_visible_stat(i) for ally in defAllyWithin2Spaces], default=0)
            defCombatBuffs[i] += maximum_stat - defStats[i]

    # Joker's Wild (Refine Base) - H!Xane
    if "xaneStatSetRefine" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))

        for i in range(1, 5):
            maximum_stat = max([ally.get_visible_stat(i) for ally in atkAllyWithin3Spaces])
            atkCombatBuffs[i] += maximum_stat - atkStats[i]

    if "xaneStatSetRefine" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))

        for i in range(1, 5):
            maximum_stat = max([ally.get_visible_stat(i) for ally in defAllyWithin3Spaces])
            defCombatBuffs[i] += maximum_stat - defStats[i]
            ignore_range = True

    # Joker's Wild (Refine Eff) - H!Xane
    if "xaneStuff!" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

    if "xaneStuff!" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

    # Ancient Trickery - Dragon Xane
    if "xanerific" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + max(5, min(trunc(0.25 * defStats[ATK]) - 4, 14)) for x in atkCombatBuffs]

        for i in range(1, 5):
            maximum_stat = max([ally.get_visible_stat(i) for ally in atkAllyWithin3Spaces])
            atkCombatBuffs[i] += maximum_stat - atkStats[i]

        atkr.true_stat_damages.append((SPD, 20))
        atkr.TDR_first_strikes += 7

    if "xanerific" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + max(5, min(trunc(0.25 * atkStats[ATK]) - 4, 14)) for x in defCombatBuffs]

        for i in range(1, 5):
            maximum_stat = max([ally.get_visible_stat(i) for ally in defAllyWithin3Spaces])
            defCombatBuffs[i] += maximum_stat - defStats[i]

        defr.true_stat_damages.append((SPD, 20))
        defr.TDR_first_strikes += 7

    # Volunteer Bow (Base) - Norne
    if "norneBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

        if defender.wpnType in RANGED_WEAPONS:
            defCombatBuffs[ATK] -= 5
            defCombatBuffs[SPD] -= 5
            defBonusesNeutralized = [True] * 5

    if "norneBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

        if attacker.wpnType in RANGED_WEAPONS:
            atkCombatBuffs[ATK] -= 5
            atkCombatBuffs[SPD] -= 5
            atkBonusesNeutralized = [True] * 5

    # Volunteer Bow (Refine Eff) - Norne
    if "A Pinch of Salt" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "A Pinch of Salt" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Gradivus (Refine Eff) - Camus/FA!Hardin
    if "gradivu" in atkSkills and defHPEqual100Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.all_hits_heal += 7

    if "gradivu" in defSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.all_hits_heal += 7

    # Sable Lance (Refine Base) - Sirius
    if "siriusSolo" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "siriusSolo" in defSkills and not defAdjacentToAlly:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # Sable Lance (Refine Eff) - Sirius
    if "siriusClash" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(spaces_moved_by_atkr * 2 + 4, 10) for x in atkCombatBuffs]
        atkr.DR_first_hit_NSP.append(30)

    if "siriusClash" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(spaces_moved_by_atkr * 2 + 4, 10) for x in defCombatBuffs]
        defr.DR_first_hit_NSP.append(30)

    # Mercurius (Refine Base)
    if "mercuriusMegabuff" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "mercuriusMegabuff" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Astra Blade (Refine Base) - P!Catria
    if "extraAstra" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "extraAstra" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Astra Blade (Refine Eff) - P!Catria
    if "superExtraAstra" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkCombatBuffs[ATK] += min(spaces_moved_by_atkr * 2, 8)
        defCombatBuffs[DEF] -= min(spaces_moved_by_atkr * 2, 8)

    if "superExtraAstra" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defCombatBuffs[ATK] += min(spaces_moved_by_atkr * 2, 8)
        atkCombatBuffs[DEF] -= min(spaces_moved_by_atkr * 2, 8)

    # Wedding-Bell Axe (Base) - BR!Catria
    if "weddingBellAxe" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

    if "weddingBellAxe" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

    if Status.TriangleAttack in attacker.statusPos and Status.Schism not in attacker.statusNeg:
        count = 0

        for ally in atkAllyWithin2Spaces:
            if Status.TriangleAttack in ally.statusPos and Status.Schism not in ally.statusNeg:
                count += 1

        if count >= 2:
            atkr.brave = True

    # Blade of Shadow (Base) - M!Kris / Lance of Shadow (Base) - F!Kris
    if "krisWeapon" in atkSkills and defHPEqual100Percent:
        defCombatBuffs[ATK] -= 4
        defCombatBuffs[SPD] -= 4
        defCombatBuffs[DEF] -= 4
        atkPenaltiesNeutralized = [True] * 5

    if "krisWeapon" in defSkills:
        atkCombatBuffs[ATK] -= 4
        atkCombatBuffs[SPD] -= 4
        atkCombatBuffs[DEF] -= 4
        defPenaltiesNeutralized = [True] * 5

    # Blade of Shadow (Refine Base) - M!Kris / Lance of Shadow (Refine Base) - F!Kris
    if "krisRefineWeapon" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 4
        defCombatBuffs[SPD] -= 4
        defCombatBuffs[DEF] -= 4
        atkPenaltiesNeutralized = [True] * 5
        atkr.offensive_tempo = True
        atkr.offensive_tempo = True

    if "krisRefineWeapon" in defSkills:
        atkCombatBuffs[ATK] -= 4
        atkCombatBuffs[SPD] -= 4
        atkCombatBuffs[DEF] -= 4
        defPenaltiesNeutralized = [True] * 5
        defr.offensive_tempo = True
        defr.offensive_tempo = True

    # Blade of Shadow (Refine Eff) - M!Kris / Lance of Shadow (Refine Eff) - F!Kris
    if "SUPER FREAKING MARIO!" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.DR_first_strikes_NSP.append(40)
        atkr.true_stat_damages.append((SPD, 20))
        atkr.all_hits_heal += 7

    if "SUPER FREAKING MARIO!" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.DR_first_strikes_NSP.append(40)
        defr.true_stat_damages.append((SPD, 20))
        defr.all_hits_heal += 7

    # Thief's Honesty (Base) - Julian
    if "julianBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))
        atkr.DR_first_strikes_NSP.append(30)
        atkr.hardy_bearing = True
        defr.hardy_bearing = True

    if "julianBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))
        defr.DR_first_strikes_NSP.append(30)
        atkr.hardy_bearing = True
        defr.hardy_bearing = True

    # Martyr's Staff - FA!Lena
    if "martyrsStaff" in atkSkills:
        defCombatBuffs[ATK] -= 6 + trunc(0.20 * atkStats[RES])
        defCombatBuffs[RES] -= 6 + trunc(0.20 * atkStats[RES])

        X = min(len(attacker.statusPos) + len(defender.statusNeg), 5)
        atkr.true_all_hits += X * 5

        atkr.follow_ups_skill += 1

    if "martyrsStaff" in defSkills and defAllyWithin3spaces:
        atkCombatBuffs[ATK] -= 6 + trunc(0.20 * defStats[RES])
        atkCombatBuffs[RES] -= 6 + trunc(0.20 * defStats[RES])

        X = min(len(defender.statusPos) + len(attacker.statusNeg), 5)
        defr.true_all_hits += X * 5

        defr.follow_ups_skill += 1

    if "martyrsStaff_f" in atkSkills: atkr.pseudo_miracle = True
    if "martyrsStaff_f" in defSkills: defr.pseudo_miracle = True

    # Spendy Scimitar (Base) - Malice
    if "Hello, I like money" in atkSkills:
        if attacker.flowers > 0:
            atkCombatBuffs = [x + 6 for x in atkCombatBuffs]
        else:
            atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

        if attacker.flowers >= 2:
            atkr.defensive_tempo = True
            atkr.offensive_tempo = True

    if "Hello, I like money" in defSkills and defAllyWithin2Spaces:
        if defender.flowers > 0:
            defCombatBuffs = [x + 6 for x in defCombatBuffs]
        else:
            defCombatBuffs = [x + 4 for x in defCombatBuffs]

        if defender.flowers >= 2:
            defr.defensive_tempo = True
            defr.offensive_tempo = True

    # Swirling Scimitar - DE!Malice
    if "deMaliceBoost" in atkSkills and atkAllyWithin3Spaces:
        if attacker.flowers > 0:
            atkCombatBuffs = [x + 14 for x in atkCombatBuffs]
        else:
            atkCombatBuffs = [x + 10 for x in atkCombatBuffs]

        atkr.sp_jump_foe_first += 2
        atkr.TDR_first_stats.append((SPD, 25))
        atkr.retaliatory_reduced += 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "deMaliceBoost" in defSkills and defAllyWithin3Spaces:
        if defender.flowers > 0:
            defCombatBuffs = [x + 14 for x in defCombatBuffs]
        else:
            defCombatBuffs = [x + 10 for x in defCombatBuffs]

        defr.sp_jump_foe_first += 2
        defr.TDR_first_stats.append((SPD, 25))
        defr.retaliatory_reduced += 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Keen Coyote Bow (Base) - Wolf
    if "wolfBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.self_desperation = True

    if "wolfBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

    # Coyote's Lance (Base) - Hardin
    if "CH 6P > 236S > RC > 66 > [5D] > c.S > 66 > !S > 5H > 236H > WS > 6H" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.DR_first_hit_NSP.append(40)
        atkr.true_all_hits += min(spaces_moved_by_atkr * 3, 9)

    if "CH 6P > 236S > RC > 66 > [5D] > c.S > 66 > !S > 5H > 236H > WS > 6H" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.DR_first_hit_NSP.append(40)
        defr.true_all_hits += min(spaces_moved_by_atkr * 3, 9)

    # Sneering Axe (Refine Eff) - Legion
    if "legionBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.spGainOnAtk += 1

    if "legionBoost" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.spGainOnAtk += 1

    # Clarisse's Bow+ (Refine)
    if "clarisseDebuffB" in atkSkills:
        atkPostCombatEffs[2].append(("debuff_atk", 5, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[2].append(("debuff_spd", 5, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "clarisseDebuffB" in defSkills:
        defPostCombatEffs[2].append(("debuff_atk", 5, "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[2].append(("debuff_spd", 5, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Sniper's Bow (Base) - Clarisse
    if "clarisseDebuffC" in atkSkills:
        atkPostCombatEffs[2].append(("damage", 7, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[2].append(("debuff_atk", 7, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[2].append(("debuff_spd", 7, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "clarisseDebuffC" in defSkills:
        defPostCombatEffs[2].append(("damage", 7, "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[2].append(("debuff_atk", 7, "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[2].append(("debuff_spd", 7, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Sniper's Bow (Refine Eff) - Clarisse
    if "clarisseBoost" in atkSkills:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4

        if any([attacker.isSupportOf(ally) for ally in atkAllyWithin2Spaces]) and not disableSupportEffects:
            cannotCounter = True

    if "clarisseBoost" in defSkills:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[SPD] += 4

    # Brilliant Starlight (Base) - Gotoh
    if "gotohBoost" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[RES] -= 6
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[RES] = True
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "gotohBoost" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[RES] -= 6
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[RES] = True
        disableCannotCounter = True
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Gift of Magic - Gotoh
    if "giftOMagic" in atkSkills:
        defCombatBuffs[ATK] -= 10
        defCombatBuffs[RES] -= 10
        atkr.follow_ups_skill += 1
        atkr.DR_consec_strikes_NSP.append(80)

    if "giftOMagic" in defSkills and attacker.wpnType in RANGED_WEAPONS:
        atkCombatBuffs[ATK] -= 10
        atkCombatBuffs[RES] -= 10
        defr.follow_ups_skill += 1
        defr.DR_consec_strikes_NSP.append(80)
        defr.other_desperation = True

    # Fundament - Dragon Gotoh
    if "fundies" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6 + trunc(0.20 * atkStats[RES])
        atkCombatBuffs[RES] += 6 + trunc(0.20 * atkStats[RES])
        atkr.TDR_stats.append((RES, 20))
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "fundies" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6 + trunc(0.20 * defStats[RES])
        defCombatBuffs[RES] += 6 + trunc(0.20 * defStats[RES])
        defr.TDR_stats.append((RES, 20))
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Gift of Guidance - Dragon Gotoh
    if "giftOGuidance" in atkSkills and atkHPGreaterEqual25Percent:
        atkPenaltiesNeutralized = [True] * 5
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1
        atkr.damage_reduction_reduction.append(50)

    if "giftOGuidance" in defSkills and defHPGreaterEqual25Percent:
        defPenaltiesNeutralized = [True] * 5
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1
        defr.damage_reduction_reduction.append(50)

    # Imhullu (Refine Base) - Gharnef
    if "gharnefDmg" in atkSkills and atkSkills["gharnefDmg"] == 7:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "gharnefDmg" in defSkills and defSkills["gharnefDmg"] == 7:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Imhullu (Refine Eff) - Gharnef
    if "gharnefBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        if defender.wpnType not in TOME_WEAPONS:
            atkr.DR_all_hits_NSP.append(30)

    if "gharnefBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        if attacker.wpnType not in TOME_WEAPONS:
            defr.DR_all_hits_NSP.append(30)

    # Divine Breath (Base) - Naga
    if "nagaBoost" in atkSkills:
        num_allies = 0
        for ally in atkAllyWithin2Spaces:
            if Status.EffDragons in ally.statusPos:
                num_allies += 1

        atkCombatBuffs = [x + min(num_allies * 3, 9) for x in atkCombatBuffs]

    if "nagaBoost" in defSkills:
        num_allies = 0
        for ally in defAllyWithin2Spaces:
            if Status.EffDragons in ally.statusPos:
                num_allies += 1

        defCombatBuffs = [x + min(num_allies * 3, 9) for x in defCombatBuffs]

    # Divine Breath (Refine Base) - Naga
    if "nagaRefineBoost" in atkSkills:
        num_allies = 0
        for ally in atkAllyWithin4Spaces:
            if Status.EffDragons in ally.statusPos:
                num_allies += 1

        atkCombatBuffs = [x + min(num_allies * 3, 9) for x in atkCombatBuffs]

    if "nagaRefineBoost" in defSkills:
        num_allies = 0
        for ally in defAllyWithin4Spaces:
            if Status.EffDragons in ally.statusPos:
                num_allies += 1

        defCombatBuffs = [x + min(num_allies * 3, 9) for x in defCombatBuffs]

    # Divine Breath (Refine Eff) - Naga
    if "a bit insane" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.DR_first_hit_NSP.append(25)

    if "a bit insane" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.DR_first_hit_NSP.append(25)

    # Ancient Majesty - Dragon Naga
    if "nagaaaaa" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.true_stat_damages_from_foe.append((ATK, 15))
        atkr.damage_reduction_reduction.append(50)

    if "nagaaaaa" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(len(defAllyWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defr.true_stat_damages_from_foe.append((ATK, 15))
        defr.damage_reduction_reduction.append(50)

    # Divine God Fang - Dragon Naga
    if "divineGodFang" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_all_hits += 7
        atkr.TDR_all_hits += 7
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "divineGodFang" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_all_hits += 7
        defr.TDR_all_hits += 7
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Ethereal Breath (Refine Base) - Nagi
    if "nagiRefineBoost" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[RES] -= 5
        atkr.all_hits_heal += 7

    if "nagiRefineBoost" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[RES] -= 5
        defr.all_hits_heal += 7

    # Ethereal Breath (Refine Eff) - Nagi
    if "nagiReduction" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[RES] -= 5
        atkr.stat_scaling_DR.append((RES, 40))

    if "nagiReduction" in defSkills:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[RES] -= 5
        defr.stat_scaling_DR.append((RES, 40))

    # Opposing Stones - H!Nagi
    if "hNagiBoost" in atkSkills and defHPGreaterEqual75Percent:
        X = min(len(atkAllyWithin3RowsCols) * 3 + 5, 14)

        defCombatBuffs[ATK] -= X
        defCombatBuffs[DEF] -= X
        defCombatBuffs[RES] -= X
        atkr.TDR_stats.append((RES, 20))
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "hNagiBoost" in defSkills:
        X = 14 if savior_triggered else min(len(defAllyWithin3RowsCols) * 3 + 5, 14)

        atkCombatBuffs[ATK] -= X
        atkCombatBuffs[DEF] -= X
        atkCombatBuffs[RES] -= X
        defr.TDR_stats.append((RES, 20))
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Shadow Breath (Base) - Medeus
    if "medeusBoost" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[RES] -= 6
        defr.follow_up_denials -= 1

    if "medeusBoost" in defSkills:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[RES] -= 6
        atkr.follow_up_denials -= 1

    # Ancient Betrayal - Dragon Medeus
    if "dragonMedeusBoost" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5 + trunc(0.20 * atkStats[RES])
        defCombatBuffs[DEF] -= 5 + trunc(0.20 * atkStats[RES])
        defCombatBuffs[RES] -= 5 + trunc(0.20 * atkStats[RES])

        ally_count = 0

        for ally in atkAllAllies:
            if ally.wpnType in DRAGON_WEAPONS or ally.wpnType == "Staff":
                ally_count += 1

        X = min(ally_count * 5 + 10, 20)

        atkr.true_all_hits += X
        atkr.TDR_all_hits += X

    if "dragonMedeusBoost" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5 + trunc(0.20 * defStats[RES])
        atkCombatBuffs[DEF] -= 5 + trunc(0.20 * defStats[RES])
        atkCombatBuffs[RES] -= 5 + trunc(0.20 * defStats[RES])

        ally_count = 0

        for ally in defAllAllies:
            if ally.wpnType in DRAGON_WEAPONS or ally.wpnType == "Staff":
                ally_count += 1

        X = min(ally_count * 5 + 10, 20)

        defr.true_all_hits += X
        defr.TDR_all_hits += X

    # GAIDEN / ECHOES: SHADOWS OF VALENTIA

    # Falchion (Refine Eff) - Alm
    if "almDoubler" in atkSkills and atkHPEqual100Percent:
        atkr.brave = True
        atkPostCombatEffs[0].append(("damage", 5, "self", "one"))

    # Luna Arc (Base) - L!Alm
    if "lunaArcDmg" in atkSkills:
        atkr.true_stat_damages_from_foe.append((DEF, 25))

    # Luna Arc (Refine Base) - L!Alm
    if "refineArcDmg" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.true_stat_damages_from_foe.append((DEF, 25))

    if "refineArcDmg" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.true_stat_damages_from_foe.append((DEF, 25))

    # Luna Arc (Refine Eff) - L!Alm
    if "legendAlmSweep" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.offensive_tempo = True

    if "legendAlmSweep" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.offensive_tempo = True

    # Dracofalchion (Base) - B!Alm
    if "dracofalchion" in atkSkills and len(atkFoeWithin2Spaces) - 1 >= len(atkAllyWithin2Spaces):
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

    if "dracofalchion" in defSkills and len(defFoeWithin2Spaces) - 1 >= len(defAllyWithin2Spaces):
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

    # Dracofalchion (Refine Base) - B!Alm
    if "dracofalchionDos" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

    if "dracofalchionDos" in defSkills and not defAdjacentToAlly:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

    # Dracofalchion (Refine Eff) - B!Alm
    if "sweeeeeeep" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

    if "sweeeeeeep" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

    # Scendscale - B!Alm
    if "TrueDamageAlm" in atkSkills:
        atkr.true_stat_damages.append((ATK, 25))
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 7, "self", "one"))

    if "TrueDamageAlm" in defSkills:
        defr.true_stat_damages.append((ATK, 25))
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 7, "self", "one"))

    # Scepter of Love (Refine Eff) - V!Alm
    if "It took me forever to beat Sans." in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defBonusesNeutralized = [True] * 5
        atkr.offensive_tempo = True
        atkr.defensive_tempo = True

    if "It took me forever to beat Sans." in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkBonusesNeutralized = [True] * 5
        defr.offensive_tempo = True
        defr.defensive_tempo = True

    # True-Bond Bow - X!Alm
    if "xAlmBoost" in atkSkills:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]

        X = min(2 * (attacker.great_talent[ATK] + attacker.great_talent[SPD]), 30)
        atkr.true_all_hits += X
        atkr.TDR_all_hits += X
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "xAlmBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + min(len(defAllyWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]

        X = min(2 * (defender.great_talent[ATK] + defender.great_talent[SPD]), 30)
        defr.true_all_hits += X
        defr.TDR_all_hits += X
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # True Lunar Flash - X!Alm
    if "trueLunarFlash" in atkSkills:
        atkr.DR_sp_trigger_by_any_special_SP.append(40)
        atkr.disable_def_sp = True

    if "trueLunarFlash" in defSkills:
        defr.DR_sp_trigger_by_any_special_SP.append(40)
        defr.disable_def_sp = True

    # Worldly Lance - Mycen
    if "mycenBoost" in atkSkills:
        defCombatBuffs[ATK] -= 6 + trunc(0.20 * atkStats[DEF])
        defCombatBuffs[DEF] -= 6 + trunc(0.20 * atkStats[DEF])
        atkr.follow_ups_skill += 1
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "mycenBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] -= 6 + trunc(0.20 * defStats[DEF])
        defCombatBuffs[DEF] -= 6 + trunc(0.20 * defStats[DEF])
        defr.follow_ups_skill += 1
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Bow of Devotion (Refine) - Faye
    if "fayeBoost" in defSkills and defender.wpnType in RANGED_WEAPONS:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Laid-Back Blade (Base) - Gray
    if "grayBoost" in atkSkills and atkHPGreaterEqual50Percent:
        atkCombatBuffs = [x + 3 for x in atkCombatBuffs]

    if "grayBoost" in defSkills and defHPGreaterEqual50Percent:
        defCombatBuffs = [x + 3 for x in defCombatBuffs]

    # Laid-Back Blade (Refine Eff) - Gray
    if "challenger" in atkSkills and len(atkAllyWithin2Spaces) <= len(atkFoeWithin2Spaces) - 1:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

    if "challenger" in defSkills and len(defAllyWithin2Spaces) <= len(defFoeWithin2Spaces) - 1:
        defCombatBuffs = [x + 3 for x in defCombatBuffs]

    # Jubilent Blade (Refine Eff) - Tobin / Dignified Bow (Refine Eff) - Virion
    if "HPWarrior" in atkSkills and atkStats[HP] >= defHPCur + 1: atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
    if "HPWarrior" in defSkills and defStats[HP] >= atkHPCur + 1: defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Sagittae (Base) - Kliff
    if "kliffBoost" in atkSkills and defStats[ATK] + defPhantomStats[ATK] >= atkStats[ATK] + atkPhantomStats[ATK] - 5:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

    if "kliffBoost" in defSkills and atkStats[ATK] + atkPhantomStats[ATK] >= defStats[ATK] + defPhantomStats[ATK] - 5:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

    # Sagittae (Base Refine) - Kliff
    if "kliffBoostRefine" in atkSkills and defStats[ATK] + defPhantomStats[ATK] > atkStats[ATK] + atkPhantomStats[ATK]:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages_from_foe.append((ATK, 15))

    if "kliffBoostRefine" in defSkills and atkStats[ATK] + atkPhantomStats[ATK] > defStats[ATK] + defPhantomStats[ATK]:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages_from_foe.append((ATK, 15))

    # Sagittae (Base Eff) - Kliff
    if "undersn" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defr.spLossWhenAtkd -= 1
        defr.spLossOnAtk -= 1

    if "undersn" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkr.spLossWhenAtkd -= 1
        atkr.spLossOnAtk -= 1

    # Sol Lance (Base/Refine Base) - Forsyth
    if "I LOVE HEALING!!!!" in atkSkills: atkr.all_hits_heal += atkSkills["I LOVE HEALING!!!!"]
    if "I LOVE HEALING!!!!" in defSkills: defr.all_hits_heal += defSkills["I LOVE HEALING!!!!"]

    # Sol Lance (Refine Base) - Forsyth
    if "forsythBoost" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.deep_wounds_allowance.append(50)

    if "forsythBoost" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.deep_wounds_allowance.append(50)

    # Sol Lance (Refine Eff) - Forsyth
    if "AtDailyForsyth" in atkSkills and atkAllyWithin3Spaces:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        defr.follow_up_denials -= 1

        if atkHPGreaterEqual50Percent:
            atkr.DR_first_hit_NSP.append(30)

    if "AtDailyForsyth" in defSkills and defAllyWithin3Spaces:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        atkr.follow_up_denials -= 1

        if defHPGreaterEqual50Percent:
            defr.DR_first_hit_NSP.append(30)

    # Snide Bow (Base) - Python
    if "pythonBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.true_all_hits += 7

    if "pythonBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.true_all_hits += 7

    # Staff of Lilies (Base) - Silque
    if "silqueBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "silqueBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Staff of Lilies (Refine Eff) - Silque
    if "silqueField" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("debuff_atk", 6, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("debuff_spd", 6, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "silqueField" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("debuff_atk", 6, "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("debuff_spd", 6, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "silqueField_f" in atkSkills:
        atkSkills[DEF] += 4 * atkSkills["silqueField_f"]
        atkSkills[RES] += 4 * atkSkills["silqueField_f"]
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7 * atkSkills["silqueField_f"], "self", "one"))

    if "silqueField_f" in defSkills:
        defSkills[DEF] += 4 * defSkills["silqueField_f"]
        defSkills[RES] += 4 * defSkills["silqueField_f"]
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7 * defSkills["silqueField_f"], "self", "one"))

    # Knightly Lance (Refine Eff) - Mathilda / Lordly Lance (Refine Eff) - Clive
    if "jointSupportPartner" in atkSkills:
        if any([attacker.isSupportOf(ally) for ally in atkAllyWithin2Spaces]) and not disableSupportEffects:
            atkCombatBuffs = [x + 3 for x in atkCombatBuffs]

    if "jointSupportPartner" in defSkills:
        if any([defender.isSupportOf(ally) for ally in defAllyWithin2Spaces]) and not disableSupportEffects:
            defCombatBuffs = [x + 3 for x in defCombatBuffs]

    if "jointSupportPartner_f" in atkSkills:
        atkCombatBuffs = [x + atkSkills["jointSupportPartner_f"] for x in atkCombatBuffs]

    if "jointSupportPartner_f" in defSkills:
        defCombatBuffs = [x + defSkills["jointSupportPartner_f"] for x in defCombatBuffs]

    # Death (Base) - FA!Delthea
    if "deltheaDeath" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 4, "self", "one"))

    if "deltheaDeath" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 4, "self", "one"))

    # Death (Refine Base) - FA!Delthea
    if "deltheaRefineDeath" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        defCombatBuffs[SPD] -= max(attacker.specialMax + 1, 1)
        defCombatBuffs[RES] -= max(attacker.specialMax + 1, 1)

        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 4, "self", "one"))

    if "deltheaRefineDeath" in defSkills:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        atkCombatBuffs[SPD] -= max(attacker.specialMax + 1, 1)
        atkCombatBuffs[RES] -= max(attacker.specialMax + 1, 1)

        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 4, "self", "one"))

    # Death (Refine Eff) - FA!Delthea
    if "deathOrders" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
    if "deathOrders" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs = [x + 4 for x in atkCombatBuffs]

    # Recluse's Tome (Base) - Luthier
    if "luthierBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((ATK, 15))
        atkr.sp_jump_first += 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "luthierBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages.append((ATK, 15))
        defr.sp_jump_first += 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Recluse's Tome (Refine) - Luthier
    if "luthierRefine" in atkSkills and atkHPGreaterEqual25Percent:
        atkr.TDR_first_strikes += 7

    if "luthierRefine" in defSkills and defHPGreaterEqual25Percent:
        defr.TDR_first_strikes += 7

    if "luthierField_f" in atkSkills:
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[SPD] = True
        atkBonusesNeutralized[RES] = True
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    if "luthierField_f" in defSkills:
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[SPD] = True
        defBonusesNeutralized[RES] = True
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    # Ragnarok (Base) - Celica
    if "celicaBoost100" in atkSkills and atkHPEqual100Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkPostCombatEffs[2].append(("damage", 5, "self", "one"))

    if "celicaBoost100" in defSkills and defHPEqual100Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defPostCombatEffs[2].append(("damage", 5, "self", "one"))

    # Ragnarok (Refine) - Celica
    if "celicaBoost5" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkPostCombatEffs[2].append(("damage", 5, "self", "one"))

    if "celicaBoost5" in defSkills:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defPostCombatEffs[2].append(("damage", 5, "self", "one"))

    # Beloved Zofia (Base/Refine Base) - FA!Celica
    if ("belovedZofia" in atkSkills and atkHPEqual100Percent) or "belovedZofia2" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkPostCombatEffs[2].append(("damage", 4, "self", "one"))

    if ("belovedZofia" in defSkills and defHPEqual100Percent) or "belovedZofia2" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defPostCombatEffs[2].append(("damage", 4, "self", "one"))

    # Beloved Zofia (Refine Eff) - FA!Celica
    if "ALMMM" in atkSkills and (not atkHPEqual100Percent or not defHPEqual100Percent):
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.all_hits_heal += 7

    if "ALMMM" in defSkills and (not atkHPEqual100Percent or not defHPEqual100Percent):
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.all_hits_heal += 7

    # Royal Sword (Base/Base Refine) - B!Celica
    if "royalSword" in atkSkills and atkAllyWithin2Spaces or "royalSword2" in atkSkills: atkr.spGainOnAtk += 1
    if ("royalSword" in defSkills or "royalSword2" in defSkills) and defAllyWithin2Spaces: defr.spGainOnAtk += 1

    # Royal Sword (Refine Eff) - B!Celica
    if "A man has fallen into the river in LEGO City!" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    if "A man has fallen into the river in LEGO City!" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    # Double Lion - B!Celica
    if "double_lion" in atkSkills and atkHPEqual100Percent:
        atkr.brave = True
        atkPostCombatEffs[UNCONDITIONAL].append(("damage", 1, "self", "one"))

    # Saintly Seraphim (Base) - L!Celica
    if "LCelicaBoost" in atkSkills:
        atkr.true_stat_damages_from_foe.append((SPD, 25))

    # Saintly Seraphim (Refine Base) - L!Celica
    if "LCelicaRefineBoost" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.true_stat_damages_from_foe.append((SPD, 25))

    if "LCelicaRefineBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.true_stat_damages_from_foe.append((SPD, 25))

    # Saintly Seraphim (Refine Eff) - L!Celica
    if "Garfield 2025" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "Garfield 2025" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Soul of Zofia - L!Celica/A!Celica
    if "soulOfZofia" in atkSkills:
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

        if atkHPCur/atkStats[HP] <= 0.75:
            atkr.self_desperation = True

    if "soulOfZofia" in defSkills:
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # Soul of Zofia II - L!Celica
    if "soulOfZofiaII" in atkSkills:
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.self_desperation = True

        if atkHPGreaterEqual25Percent:
            defCombatBuffs[SPD] -= 5
            atkr.damage_reduction_reduction.append(50)

    if "soulOfZofiaII" in defSkills:
        defr.offensive_NFU = True
        defr.defensive_NFU = True

        if defHPGreaterEqual25Percent:
            atkCombatBuffs[SPD] -= 5
            defr.damage_reduction_reduction.append(50)

    # Mila's Testament (Base) - A!Celica
    if "aCelicaBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.offensive_tempo = True
        atkr.true_stat_damages_from_foe.append((ATK, 10))
        atkr.pseudo_miracle = True
        atkr.pseudo_miracle_hp_cond = min(0.25, atkr.pseudo_miracle_hp_cond)

    if "aCelicaBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.offensive_tempo = True
        defr.true_stat_damages_from_foe.append((ATK, 10))
        defr.pseudo_miracle = True
        defr.pseudo_miracle_hp_cond = min(0.25, atkr.pseudo_miracle_hp_cond)

    # Caring Magic (Base) - E!Celica
    if "eCelicaBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6 + trunc(atkStats[SPD] * 0.20)
        atkCombatBuffs[SPD] += 6 + trunc(atkStats[SPD] * 0.20)

        atkr.true_stat_damages.append((SPD, 20))

        defBonusesNeutralized[SPD] = True
        defBonusesNeutralized[RES] = True

        atkr.sp_jump_followup += 1

        atkr.self_desperation = True

    if "eCelicaBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6 + trunc(defStats[SPD] * 0.20)
        defCombatBuffs[SPD] += 6 + trunc(defStats[SPD] * 0.20)

        defr.true_stat_damages.append((SPD, 20))

        atkBonusesNeutralized[SPD] = True
        atkBonusesNeutralized[RES] = True

        defr.sp_jump_followup += 1

    # Celica Ring
    if "care for us" in atkSkills:
        atkr.true_sp += attacker.specialMax * 4

    if "care for us" in defSkills:
        defr.true_sp += defender.specialMax * 4

    # Pious Offering (Base) - SU!Celica
    if "suCelicaBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6 + trunc(0.20 * atkStats[SPD])
        atkCombatBuffs[SPD] += 6 + trunc(0.20 * atkStats[SPD])

        X = len(attacker.statusPos) + len(defender.statusNeg)
        atkr.true_all_hits += min(X * 5, 25)

        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "suCelicaBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6 + trunc(0.20 * defStats[SPD])
        defCombatBuffs[SPD] += 6 + trunc(0.20 * defStats[SPD])

        X = len(defender.statusPos) + len(attacker.statusNeg)
        defr.true_all_hits += min(X * 5, 25)

        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    if style == "ECHO":
        atkr.brave = True

    # Holy Soul of Zofia - SU!Celica
    if "holySoulOfZofia" in atkSkills:
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[RES] -= 5
        atkr.true_stat_damages.append((SPD, 20))
        atkr.pseudo_miracle = True
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "holySoulOfZofia" in defSkills:
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[RES] -= 5
        defr.true_stat_damages.append((SPD, 20))
        defr.pseudo_miracle = True
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Springtime Staff (Refine Eff) - Genny
    if "gennyBoost" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[RES] += 5

        atkPostCombatEffs[0].append(("heal", 7, "self_and_allies", "within_2_spaces_self"))

    if "gennyBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[RES] += 5

        defPostCombatEffs[0].append(("heal", 7, "self_and_allies", "within_2_spaces_self"))

    # Golden Dagger (Refine Eff) - Saber
    if "SUPER MARIO!!!" in atkSkills and atkSpCountCur == 0:
        atkCombatBuffs = [x + 3 for x in atkCombatBuffs]

    if "SUPER MARIO!!!" in defSkills and defSpCountCur == 0:
        defCombatBuffs = [x + 3 for x in defCombatBuffs]
        ignore_range = True

    # Bow of Beauty (Refine Eff) - Leon
    if "leonBoost" in atkSkills and atkHPGreaterEqual50Percent:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4
        atkCombatBuffs[DEF] += 4
        defr.follow_up_denials -= 1

    if "leonBoost" in defSkills and defHPGreaterEqual50Percent:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[SPD] += 4
        defCombatBuffs[DEF] += 4
        atkr.follow_up_denials -= 1

    # Valbar's Lance (Base) - Valbar
    if "it's his lance" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5

    if "it's his lance" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        defr.DR_second_strikes_NSP.append(60)

    # Valbar's Lance (Refine Eff) - Valbar
    if "valbarBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "valbarBoost" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Magic Rabbits (Base) - SP!Sonya
    if "WOE, RABBITS UNTO YOU" in atkSkills:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 6

        if attacker.specialMax != -1:
            atkCombatBuffs[ATK] += attacker.specialMax * 3

    if "WOE, RABBITS UNTO YOU" in defSkills:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[SPD] += 6

        if defender.specialMax != -1:
            defCombatBuffs[ATK] += defender.specialMax * 3

    # Arcane Caliburnus
    if "caliburnus" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[RES] = True

    if "caliburnus" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[RES] = True

    # Holy Gradivus (Base) - Zeke
    if "zekenator" in atkSkills and atkHPGreaterEqual25Percent:
        atkr.follow_ups_skill += 1

    if "zekenator" in defSkills and defHPGreaterEqual25Percent:
        defr.follow_ups_skill += 1

    # Prior's Tome - Nomah
    if "nomahBoost" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 6 + trunc(0.20 * atkStats[RES])
        atkCombatBuffs[RES] += 6 + trunc(0.20 * atkStats[RES])
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[RES] = True
        atkr.true_stat_damages.append((RES, 20))
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "nomahBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 6 + trunc(0.20 * defStats[RES])
        defCombatBuffs[RES] += 6 + trunc(0.20 * defStats[RES])
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[RES] = True
        defr.true_stat_damages.append((RES, 20))
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "nomahNullPenalty" in atkSkills:
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[RES] = True

    if "nomahNullPenalty" in defSkills:
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[RES] = True

    # Dark Royal Spear (Base) - Berkut
    if "berkutBoost" in atkSkills and defHPEqual100Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        atkCombatBuffs[RES] += 5

    if "berkutBoost" in defSkills:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        defCombatBuffs[RES] += 5

    # Kriemhild (Base) - FA!Berkut
    if "I miss my wife, Tails" in defSkills and defAllyWithin2Spaces and attacker.wpnType in RANGED_WEAPONS:
        ignore_range = True
        atkr.follow_up_denials -= 1

        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 20, "allies", "nearest_self"))

    # Kriemhild (Refine Base) - FA!Berkut
    if "hi MTHW" in defSkills and defAllyWithin3Spaces:
        ignore_range = True
        atkr.follow_up_denials -= 1

        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 20, "allies", "nearest_self"))

    # Kriemhild (Refine Eff) - FA!Berkut
    if "evilBerkutRef" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.follow_ups_skill += 1

    if "evilBerkutRef" in defSkills:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.follow_ups_skill += 1

    # Thorn Lance (Base) - V!Rudolf
    if "atkAtkAtk" in atkSkills and atkStats[ATK] + atkPhantomStats[ATK] > defStats[ATK] + defPhantomStats[ATK]:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[DEF] -= 6
        atkr.follow_up_denials -= 1

    if "atkAtkAtk" in defSkills and defStats[ATK] + defPhantomStats[ATK] > atkStats[ATK] + atkPhantomStats[ATK]:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[DEF] -= 6
        defr.follow_up_denials -= 1

    # Proud Spear (Base) - Fernand
    if "proudSpear" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((DEF, 20))
        atkr.follow_ups_skill += 1

    if "proudSpear" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages.append((DEF, 20))
        defr.follow_ups_skill += 1

    # Proud Spear (Refine Eff) - Fernand
    if "fernandBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "fernandBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Thorn Lance (Refine Base) - V!Rudolf
    if "fireShootTheLaser" in atkSkills and (atkHPGreaterEqual25Percent or atkStats[ATK] + atkPhantomStats[ATK] > defStats[ATK] + defPhantomStats[ATK]):
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[DEF] -= 6
        atkr.follow_up_denials -= 1

    if "fireShootTheLaser" in defSkills and (defHPGreaterEqual25Percent or defStats[ATK] + defPhantomStats[ATK] > atkStats[ATK] + atkPhantomStats[ATK]):
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[DEF] -= 6
        defr.follow_up_denials -= 1

    # Masked Lance (Base) - Conrad
    if "how can a lance be masked" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

        defCombatBuffs[ATK] -= trunc(0.20 * atkStats[RES])
        defCombatBuffs[DEF] -= trunc(0.20 * atkStats[RES])
        defCombatBuffs[RES] -= trunc(0.20 * atkStats[RES])

    if "how can a lance be masked" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

        atkCombatBuffs[ATK] -= trunc(0.20 * defStats[RES])
        atkCombatBuffs[DEF] -= trunc(0.20 * defStats[RES])
        atkCombatBuffs[RES] -= trunc(0.20 * defStats[RES])

    # Masked Lance (Refine Eff) - Conrad
    if "mmm melon collie" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.stat_scaling_DR.append((RES, 40))

    if "mmm melon collie" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.stat_scaling_DR.append((RES, 40))

    # Arcane Medusa
    if "arcaneMedusa" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + max(5, min(trunc(0.25 * defStats[ATK]) - 4, 14)) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((ATK, 15))
        atkr.TDR_first_strikes += 7
        atkr.sp_jump_first += 1

    if "arcaneMedusa" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + max(5, min(trunc(0.25 * atkStats[ATK]) - 4, 14)) for x in defCombatBuffs]
        defr.true_stat_damages.append((ATK, 15))
        defr.TDR_first_strikes += 7
        defr.sp_jump_first += 1

    # Mounting Fear - Nuibaba
    if "mountingFear" in atkSkills:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[RES] -= 5
        atkr.true_stat_damages.append((RES, 20))
        atkr.damage_reduction_reduction.append(50)
        atkr.bane_first_hit = True

    if "mountingFear" in defSkills:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[RES] -= 5
        defr.true_stat_damages.append((RES, 20))
        defr.damage_reduction_reduction.append(50)
        defr.bane_first_hit = True

    # Nurturing Breath (Refine Base) - Mila
    if "milaRefineBoost" in atkSkills:
        ally_count = 0

        tiles_within_7_row = attacker.attacking_tile.tilesWithinNRows(7)
        tiles_within_7_col = attacker.attacking_tile.tilesWithinNCols(7)
        tiles_within_7_row_and_column = list(set(tiles_within_7_row) & set(tiles_within_7_col))

        for tile in tiles_within_7_row_and_column:
            if tile.hero_on and tile.hero_on.isAllyOf(attacker):
                ally_count += 1

        atkCombatBuffs = [x + min(ally_count * 2, 6) for x in atkCombatBuffs]

    if "milaRefineBoost" in defSkills:
        ally_count = 0

        tiles_within_7_row = defender.tile.tilesWithinNRows(7)
        tiles_within_7_col = defender.tile.tilesWithinNCols(7)
        tiles_within_7_row_and_column = list(set(tiles_within_7_row) & set(tiles_within_7_col))

        for tile in tiles_within_7_row_and_column:
            if tile.hero_on and tile.hero_on.isAllyOf(defender):
                ally_count += 1

        defCombatBuffs = [x + min(ally_count * 2, 6) for x in defCombatBuffs]

    # Nurturing Breath (Refine Eff) - Mila
    if "rejoice" in atkSkills:
        ally_count = 0

        tiles_within_7_row = attacker.attacking_tile.tilesWithinNRows(7)
        tiles_within_7_col = attacker.attacking_tile.tilesWithinNCols(7)
        tiles_within_7_row_and_column = list(set(tiles_within_7_row) & set(tiles_within_7_col))

        for tile in tiles_within_7_row_and_column:
            if tile.hero_on and tile.hero_on.isAllyOf(attacker):
                ally_count += 1

        if ally_count:
            defBonusesNeutralized[ATK] = True

    if "rejoice" in defSkills:
        ally_count = 0

        tiles_within_7_row = defender.tile.tilesWithinNRows(7)
        tiles_within_7_col = defender.tile.tilesWithinNCols(7)
        tiles_within_7_row_and_column = list(set(tiles_within_7_col) & set(tiles_within_7_row))

        for tile in tiles_within_7_row_and_column:
            if tile.hero_on and tile.hero_on.isAllyOf(defender):
                ally_count += 1

        if ally_count:
            atkBonusesNeutralized[ATK] = True

    if "rejoice_f" in atkSkills: defBonusesNeutralized[ATK] = True
    if "rejoice_f" in defSkills: atkBonusesNeutralized[ATK] = True

    # Fell Breath (Base) - Duma
    if "dumaBoost" in atkSkills and not defHPEqual100Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[RES] += 6
        defr.follow_up_denials -= 1

    if "dumaBoost" in defSkills and not atkHPEqual100Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[RES] += 6
        atkr.follow_up_denials -= 1

    # Fell Breath (Refine Base) - Duma
    if "dumaRefineBoost" in atkSkills and (not defHPEqual100Percent or atkStats[ATK] + atkPhantomStats[ATK] > defStats[ATK] + defPhantomStats[ATK]):
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[RES] += 6
        defr.follow_up_denials -= 1

    if "dumaRefineBoost" in defSkills and (not atkHPEqual100Percent or defStats[ATK] + defPhantomStats[ATK] > atkStats[ATK] + atkPhantomStats[ATK]):
        defCombatBuffs[ATK] += 6
        defCombatBuffs[RES] += 6
        atkr.follow_up_denials -= 1

    # Fell Breath (Refine Eff) - Duma
    if "Twilight of the Gods is so peak" in atkSkills:
        atkCombatBuffs[ATK] += 5
        defCombatBuffs[ATK] -= 5
        atkr.DR_first_hit_NSP.append(30)

    if "Twilight of the Gods is so peak" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        atkCombatBuffs[ATK] -= 5
        defr.DR_first_hit_NSP.append(30)

    # Upheaval+ - Duma
    if "ARDestroyNearest" in atkSkills and (not defHPEqual100Percent or atkStats[ATK] + atkPhantomStats[ATK] > defStats[ATK] + defPhantomStats[ATK]):
        defBonusesNeutralized = [True] * 5

    if "ARDestroyNearest" in defSkills and (not atkHPEqual100Percent or defStats[ATK] + defPhantomStats[ATK] > atkStats[ATK] + atkPhantomStats[ATK]):
        atkBonusesNeutralized = [True] * 5

    # Ghostly Lanterns (Base) - H!Duma
    if "hDumaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        defCombatBuffs[ATK] -= 6
        atkr.defensive_NFU = True
        defr.follow_up_denials -= 1

    if "hDumaBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        atkCombatBuffs[ATK] -= 6
        defr.defensive_NFU = True
        atkr.follow_up_denials -= 1

    # GENEALOGY OF THE HOLY WAR

    # Gilt Goblet (Base) - DA!Sigurd
    if "antiMagicCup" in atkSkills and defHPEqual100Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[RES] += 6

        if defender.wpnType in TOME_WEAPONS:
            atkr.DR_all_hits_NSP.append(50)

    if "antiMagicCup" in defSkills:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[RES] += 6

        if attacker.wpnType in TOME_WEAPONS:
            defr.DR_all_hits_NSP.append(50)

    # Tyrfing (Base) - Seliph
    if "baseTyrfing" in atkSkills and atkHPCur / atkStats[HP] <= 0.50:
        atkCombatBuffs[DEF] += 4

    if "baseTyrfing" in defSkills and defHPCur / defStats[HP] <= 0.50:
        defCombatBuffs[DEF] += 4

    # Tyrfing (Refine Base) - Seliph
    if "pseudoMiracle" in atkSkills and atkHPGreaterEqual50Percent:
        atkr.pseudo_miracle = True

    if "pseudoMiracle" in defSkills and defHPGreaterEqual50Percent:
        defr.pseudo_miracle = True

    # Divine Tyrfing (Refine Base) - Seliph/Sigurd
    if "refDivTyrfing" in atkSkills and atkHPGreaterEqual50Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5

    if "refDivTyrfing" in defSkills and atkHPGreaterEqual50Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5

    # Divine Tyrfing (Refine Eff) - Seliph/Sigurd
    if "WE MOVE" in atkSkills and atkHPGreaterEqual50Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        atkr.follow_ups_skill += 1

    if "WE MOVE" in defSkills and defHPGreaterEqual50Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        defr.follow_ups_skill += 1

    # Divine Tyrfing (Base & Refine) - Seliph/Sigurd
    if ("divTyrfing" in atkSkills or "refDivTyrfing" in atkSkills) and defender.wpnType in TOME_WEAPONS: atkr.DR_first_hit_NSP.append(50)
    if ("divTyrfing" in defSkills or "refDivTyrfing" in defSkills) and attacker.wpnType in TOME_WEAPONS: defr.DR_first_hit_NSP.append(50)

    # Crusader's Ward - Sigurd/L!Sigurd
    if "deflectRanged" in atkSkills and defender.wpnType in RANGED_WEAPONS:
        atkr.DR_consec_strikes_NSP.append(80)

    if "deflectRanged" in defSkills and attacker.wpnType in RANGED_WEAPONS:
        defr.DR_consec_strikes_NSP.append(80)

    # Virtuous Tyrfing (Base) - L!Seliph
    if "vTyrfing" in atkSkills and not atkHPEqual100Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[DEF] -= 6
        atkr.all_hits_heal += 7

    if "vTyrfing" in defSkills:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[DEF] -= 6
        defr.all_hits_heal += 7

    # Virtuous Tyrfing (Refine Base) - L!Seliph
    if "newVTyrfing" in atkSkills and (not atkHPEqual100Percent or defHPGreaterEqual75Percent):
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[DEF] -= 6
        atkr.all_hits_heal += 8
        atkr.defensive_NFU = True
        atkr.true_stat_damages.append((ATK, 15))

    if "newVTyrfing" in defSkills:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[DEF] -= 6
        defr.all_hits_heal += 8
        defr.defensive_NFU = True
        defr.true_stat_damages.append((ATK, 15))
        disableCannotCounter = True

    # Virtuous Tyrfing (Refine Eff) - L!Seliph
    if "NO MORE LOSSES" in atkSkills:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        if defender.wpnType in ["RTome", "BTome", "GTome", "CTome", "Staff"]:
            atkr.DR_all_hits_NSP.append(80)
        else:
            atkr.DR_all_hits_NSP.append(40)

    if "NO MORE LOSSES" in defSkills and defAllyWithin3Spaces:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        if attacker.wpnType in ["RTome", "BTome", "GTome", "CTome", "Staff"]:
            defr.DR_all_hits_NSP.append(80)
        else:
            defr.DR_all_hits_NSP.append(40)

        defr.pseudo_miracle = True
        defr.pseudo_miracle_hp_cond = min(0.50, atkr.pseudo_miracle_hp_cond)

    # Holy War's End - L!Seliph
    if "holyWarsEnd" in defSkills and defHPGreaterEqual50Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.follow_ups_skill += 1
        defr.self_desperation = True

    # Holy War's End II - L!Seliph
    if "holyWarsEndII" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.follow_ups_skill += 1
        defr.follow_up_denials -= 1

    if "holyWarsEndII" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.follow_ups_skill += 1
        atkr.follow_up_denials -= 1
        defr.brave = True

    # Holytide Tyrfing (Base) - B!Seliph
    if "I HATE FIRE JOKES >:(" in atkSkills and spaces_moved_by_atkr:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        if atkHPGreaterEqual25Percent:
            atkr.pseudo_miracle = True

    if "I HATE FIRE JOKES >:(" in defSkills and spaces_moved_by_atkr:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        if defHPGreaterEqual25Percent:
            defr.pseudo_miracle = True

    # Holytide Tyrfing (Refine Eff) - B!Seliph
    if "bSeliphRefine" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(len(atkAllyWithin3Spaces) * 2 + 5, 11) for x in atkCombatBuffs]
        atkr.damage_reduction_reduction.append(50)
        atkr.TDR_first_strikes += min(spaces_moved_by_atkr * 3, 12)
        atkr.TDR_on_foe_sp += min(spaces_moved_by_atkr * 3, 12)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "bSeliphRefine" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(len(defAllyWithin3Spaces) * 2 + 5, 11) for x in defCombatBuffs]
        defr.damage_reduction_reduction.append(50)
        defr.TDR_first_strikes += min(spaces_moved_by_atkr * 3, 12)
        defr.TDR_on_foe_sp += min(spaces_moved_by_atkr * 3, 12)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Legacy Axe - GR!Seliph
    if "grSeliphBoost" in atkSkills:
        Z = 14 if spaces_moved_by_atkr >= 3 else min(len(atkAllyWithin3RowsCols) * 3 + 5, 14)
        atkCombatBuffs = [x + Z for x in atkCombatBuffs]
        atkPenaltiesNeutralized = [True] * 5

        X = len(attacker.statusPos) + len(defender.statusNeg)
        atkr.true_all_hits += min(X * 5, 25)

        Y = trunc(0.50 * spaces_moved_by_atkr)
        atkr.sp_jump_first += Y
        atkr.sp_jump_followup += Y

        atkr.pseudo_miracle = True

    if "grSeliphBoost" in defSkills and defAllyWithin2Spaces:
        Z = 14 if spaces_moved_by_atkr >= 3 else min(len(defAllyWithin3RowsCols) * 3 + 5, 14)
        defCombatBuffs = [x + Z for x in defCombatBuffs]
        defPenaltiesNeutralized = [True] * 5

        X = len(defender.statusPos) + len(attacker.statusNeg)
        defr.true_all_hits += min(X * 5, 25)

        Y = trunc(0.50 * spaces_moved_by_atkr)
        defr.sp_jump_first += Y
        defr.sp_jump_followup += Y

        defr.pseudo_miracle = True

    # The Heir to Light - GR!Seliph
    if "theHeirToLight" in atkSkills:
        atkCombatBuffs[ATK] += min(5 + spaces_moved_by_atkr, 9)
        atkCombatBuffs[SPD] += min(5 + spaces_moved_by_atkr, 9)
        atkr.TDR_first_strikes += 7
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "theHeirToLight" in defSkills and defAllyWihtin2Spaces:
        defCombatBuffs[ATK] += min(5 + spaces_moved_by_atkr, 9)
        defCombatBuffs[SPD] += min(5 + spaces_moved_by_atkr, 9)
        defr.TDR_first_strikes += 7
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Hallowed Tyrfing (Base) - L!Sigurd
    if "WaitIsHeAGhost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkr.DR_first_hit_NSP.append(40)

    if "WaitIsHeAGhost" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        if attacker.wpnType in RANGED_WEAPONS:
            defr.DR_first_hit_NSP.append(40)

    # Hallowed Tyrfing (Refine Base) - L!Sigurd
    if "LSigurdRefine" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkr.DR_first_strikes_NSP.append(40)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "LSigurdRefine" in defSkills:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defr.DR_first_strikes_NSP.append(40)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Hallowed Tyrfing (Refine Eff) - L!Sigurd
    if "FE4 Remake When?" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(4 + spaces_moved_by_atkr, 8) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((ATK, 15))
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[DEF] = True

    if "FE4 Remake When?" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(4 + spaces_moved_by_atkr, 8) for x in defCombatBuffs]
        defr.true_stat_damages.append((ATK, 15))
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[DEF] = True

    if Status.FirstReduce40 in attacker.statusPos: atkr.DR_first_hit_NSP.append(40)
    if Status.FirstReduce40 in defender.statusPos: defr.DR_first_hit_NSP.append(40)

    # Knightly Manner - T!Sigurd
    if "tSigurdBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkr.true_stat_damages.append((ATK, 15))

        if defender.wpnType not in DAGGER_WEAPONS + BOW_WEAPONS:
            cannotCounter = True

    if "tSigurdBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defr.true_stat_damages.append((ATK, 15))

    # Holy-War Spear - E!Sigurd
    if "eSigurdBoost" in atkSkills:
        atkCombatBuffs = [x + min(len(atkFoeWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((DEF, 20))
        atkr.damage_reduction_reduction.append(50)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "eSigurdBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + min(len(defFoeWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defr.true_stat_damages.append((DEF, 20))
        defr.damage_reduction_reduction.append(50)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Sigurd Ring
    if "provide for us" in atkSkills:
        atkr.true_sp += min(spaces_moved_by_atkr, 4) * 2

    if "provide for us" in defSkills:
        defr.true_sp += min(spaces_moved_by_atkr, 4) * 2

    # Naga (Refine Eff) - Julia
    if "nagaAntiDragon" in atkSkills and defender.wpnType in DRAGON_WEAPONS:
        atkr.disable_foe_hexblade = True

    if "nagaAntiDragon" in defSkills and attacker.wpnType in DRAGON_WEAPONS:
        defr.disable_foe_hexblade = True
        ignore_range = True

    # Spirit Forest Writ (Base) - L!Deirdre
    if "LDeirdreBoost" in atkSkills and atkAllyWithin3Spaces:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[RES] -= 6
        atkr.follow_ups_skill += 1
        atkr.disable_foe_hexblade = True

        if atkStats[RES] + atkPhantomStats[RES] > defStats[RES] + defPhantomStats[RES]:
            defCombatBuffs[ATK] -= trunc(0.80 * ((atkStats[RES] + atkPhantomStats[RES]) - (defStats[RES] + defPhantomStats[RES])))
            defCombatBuffs[ATK] -= trunc(0.80 * ((atkStats[RES] + atkPhantomStats[RES]) - (defStats[RES] + defPhantomStats[RES])))

    if "LDeirdreBoost" in defSkills and defAllyWithin3Spaces:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[RES] -= 6
        defr.follow_ups_skill += 1
        defr.disable_foe_hexblade = True

        if defStats[RES] + defPhantomStats[RES] > atkStats[RES] + atkPhantomStats[RES]:
            atkCombatBuffs[ATK] -= min(trunc(0.80 * ((defStats[RES] + defPhantomStats[RES]) - (atkStats[RES] + atkPhantomStats[RES]))), 12)
            atkCombatBuffs[ATK] -= min(trunc(0.80 * ((defStats[RES] + defPhantomStats[RES]) - (atkStats[RES] + atkPhantomStats[RES]))), 12)

    # Spirit Forest Writ (Refine Base) - L!Deirdre
    if "LDeirdreRefine" in atkSkills:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[RES] -= 6
        atkr.TDR_stats.append((RES, 20))
        atkr.follow_ups_skill += 1
        atkr.disable_foe_hexblade = True

        res_diff = (atkStats[RES] + atkPhantomStats[RES]) - (defStats[RES] + defPhantomStats[RES])

        if res_diff > 1:
            defCombatBuffs[ATK] -= min(res_diff, 16)
            defCombatBuffs[ATK] -= min(res_diff, 16)

    if "LDeirdreRefine" in defSkills and defAllyWithin3Spaces:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[RES] -= 6
        defr.TDR_stats.append((RES, 20))
        defr.follow_ups_skill += 1
        defr.disable_foe_hexblade = True

        res_diff = (defStats[RES] + defPhantomStats[RES]) - (atkStats[RES] + atkPhantomStats[RES])

        if res_diff > 1:
            atkCombatBuffs[ATK] -= min(res_diff, 16)
            atkCombatBuffs[ATK] -= min(res_diff, 16)

    # Spirit Forest Writ (Refine Eff) - L!Deirdre
    if "Jovial Merryment" in atkSkills:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[RES] -= 6
        atkr.true_stat_damages.append((RES, 20))
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "Jovial Merryment" in defSkills and defAllyWithin3Spaces:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[RES] -= 6
        defr.true_stat_damages.append((RES, 20))
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Circlet of Balance - L!Deirdre
    if "circletOfBalance" in atkSkills and not attacker.once_per_map_cond: atkr.circlet_miracle = True
    if "circletOfBalance" in defSkills and defender.wpnType in RANGED_WEAPONS and not defender.once_per_map_cond: defr.circlet_miracle = True

    # Balance Circlet II - L!Deirdre
    if "circlet2" in atkSkills: atkr.pseudo_miracle = True
    if "circlet2" in defSkills: defr.pseudo_miracle = True

    # Divine Naga (Base) - Julia/Deirdre
    if "nullFoeBonuses" in atkSkills: defBonusesNeutralized = [True] * 5
    if "nullFoeBonuses" in defSkills: atkBonusesNeutralized = [True] * 5

    # General disable Hexblade and Wrathful Staff
    if "disableFoeHexblade" in atkSkills: atkr.disable_foe_hexblade = True
    if "disableFoeHexblade" in defSkills: defr.disable_foe_hexblade = True
    if "disableWrathful" in atkSkills: atkr.disable_wrathful = True
    if "disableWrathful" in defSkills: defr.disable_wrathful = True

    # Virtuous Naga (Base) - L!Julia
    if "LJuliaBoost" in atkSkills and atkStats[ATK] + atkPhantomStats[ATK] > defStats[DEF] + defPhantomStats[DEF]:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[RES] += 6

    if "LJuliaBoost" in defSkills and defStats[ATK] + defPhantomStats[ATK] > atkStats[DEF] + atkPhantomStats[DEF]:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[RES] += 6

    # Virtuous Naga (Refine Base) - L!Julia
    if "LJuliaRefineBoost" in atkSkills and (atkStats[ATK] + atkPhantomStats[ATK] > defStats[DEF] + defPhantomStats[DEF] or defHPGreaterEqual75Percent):
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[RES] += 6
        atkr.stat_scaling_DR.append((RES, 40))

    if "LJuliaRefineBoost" in defSkills and (defStats[ATK] + defPhantomStats[ATK] > atkStats[DEF] + atkPhantomStats[DEF] or atkHPGreaterEqual75Percent):
        defCombatBuffs[ATK] += 6
        defCombatBuffs[RES] += 6
        defr.stat_scaling_DR.append((RES, 40))

    # Virtuous Naga (Refine Eff) - L!Julia
    if "I call on the divine light!" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1

    if "I call on the divine light!" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.follow_ups_skill += 1

        if attacker.wpnType in DRAGON_WEAPONS:
            ignore_range = True

    # Light and Dark - L!Julia
    if "lightAndDark" in atkSkills:
        defCombatBuffs = [x - 2 for x in defCombatBuffs]
        defBonusesNeutralized = [True] * 5
        atkr.disable_foe_hexblade = True

    if "lightAndDark" in defSkills:
        atkCombatBuffs = [x - 2 for x in atkCombatBuffs]
        atkBonusesNeutralized = [True] * 5
        defr.disable_foe_hexblade = True

    # Light and Dark II - L!Julia
    if "lightAndDark2" in atkSkills:
        defCombatBuffs = [x - 5 for x in defCombatBuffs]
        defBonusesNeutralized = [True] * 5
        atkPenaltiesNeutralized = [True] * 5
        atkr.disable_foe_hexblade = True

    if "lightAndDark2" in defSkills:
        atkCombatBuffs = [x - 5 for x in atkCombatBuffs]
        atkBonusesNeutralized = [True] * 5
        defPenaltiesNeutralized = [True] * 5
        defr.disable_foe_hexblade = True

    # Dark Scripture (Base) - Julia
    dragon_eff_strs = ["effDragon", "effDragonBeast", "nagiAOEReduce", "nagiRefineBoost"]
    if "juliaFallenBoost" in atkSkills and not atkAdjacentToAlly:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[RES] -= 6
        if not (any(dragon_eff_strs == skill for skill in defSkills) or Status.EffDragons in defender.statusPos):
            atkr.follow_ups_skill += 1

    if "juliaFallenBoost" in defSkills and not defAdjacentToAlly:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[RES] -= 6
        if not (any(dragon_eff_strs == skill for skill in atkSkills) or Status.EffDragons in attacker.statusPos):
            defr.follow_ups_skill += 1

    # Dark Scripture (Refine Base) - Julia
    if "juliaFallenRefine" in atkSkills and not atkAdjacentToAlly:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[RES] -= 6
        defCombatBuffs[SPD] -= 4
        atkr.follow_ups_skill += 1

    if "juliaFallenRefine" in defSkills:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[RES] -= 6
        atkCombatBuffs[SPD] -= 4
        defr.follow_ups_skill += 1

    # Dark Scripture (Refine Eff) - Julia
    if "juliaBelief" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 4
        defCombatBuffs[SPD] -= 4
        defCombatBuffs[RES] -= 4
        defr.follow_up_denials -= 1
        atkr.true_stat_damages.append((RES, 20))
        atkr.stat_scaling_DR.append((RES, 40))

    if "juliaBelief" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 4
        atkCombatBuffs[SPD] -= 4
        atkCombatBuffs[RES] -= 4
        atkr.follow_up_denials -= 1
        defr.true_stat_damages.append((RES, 20))
        defr.stat_scaling_DR.append((RES, 40))

    # Loving Bouquets - BR!Julia
    if "brJuliaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 6 + trunc(0.20 * atkStats[RES])
        defCombatBuffs[RES] -= 6 + trunc(0.20 * atkStats[RES])

        X = min(5 * len(atkAllyWithin3RowsCols), 15)
        atkr.true_all_hits += X
        atkr.TDR_all_hits += X
        atkr.offensive_tempo = True
        atkr.sp_jump_first += 1

    if "brJuliaBoost" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 6 + trunc(0.20 * defStats[RES])
        atkCombatBuffs[RES] -= 6 + trunc(0.20 * defStats[RES])

        X = min(5 * len(defAllyWithin3RowsCols), 15)
        defr.true_all_hits += X
        defr.TDR_all_hits += X
        defr.offensive_tempo = True
        defr.sp_jump_first += 1

    # Full Light & Dark
    if "fullLightAndDark" in atkSkills:
        X = sum([1 for ally in defAllAllies if Status.Sabotage in ally.statusNeg]) + int(Status.Sabotage in defender.statusNeg)
        defCombatBuffs[ATK] -= min(X * 3 + 5, 14)
        defCombatBuffs[RES] -= min(X * 3 + 5, 14)

        atkr.true_stat_damages.append((RES, 20))
        atkr.TDR_stats.append((RES, 20))
        atkr.damage_reduction_reduction.append(50)

    if "fullLightAndDark" in defSkills:
        X = sum([1 for ally in atkAllAllies if Status.Sabotage in ally.statusNeg]) + int(Status.Sabotage in attacker.statusNeg)
        atkCombatBuffs[ATK] -= min(X * 3 + 5, 14)
        atkCombatBuffs[RES] -= min(X * 3 + 5, 14)

        defr.true_stat_damages.append((RES, 20))
        defr.TDR_stats.append((RES, 20))
        defr.damage_reduction_reduction.append(50)

    # Splashy Bucket
    if "bucket" in atkSkills:
        atkr.disable_foe_hexblade = True
        atkr.disable_wrathful = True

    if "bucket" in defSkills:
        defr.disable_foe_hexblade = True
        defr.disable_wrathful = True

    # Mystic Boost
    if "mysticBoost" in atkSkills:
        atkr.disable_foe_hexblade = True
        atkr.disable_foe_wrathful = True
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", atkSkills["mysticBoost"] * 2, "self", "one"))

    if "mysticBoost" in defSkills:
        defr.disable_foe_hexblade = True
        defr.disable_foe_wrathful = True
        defPostCombatEffs[UNCONDITIONAL].append(("heal", defSkills["mysticBoost"] * 2, "self", "one"))

        if defSkills["mysticBoost"] == 5 and attacker.wpnType == "Staff":
            disableCannotCounter = True

    if "mysticBoostSe" in atkSkills:
        atkr.disable_foe_hexblade = True
        atkr.disable_foe_wrathful = True
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", atkSkills["mysticBoostSe"] * 2, "self", "one"))

    if "mysticBoostSe" in defSkills:
        defr.disable_foe_hexblade = True
        defr.disable_foe_wrathful = True
        defPostCombatEffs[UNCONDITIONAL].append(("heal", defSkills["mysticBoostSe"] * 2, "self", "one"))

    # Divine Naga (Refine Eff) - Julia/Deirdre
    if "divineNagaBoost" in atkSkills and atkStats[RES] + atkPhantomStats[RES] >= defStats[RES] + defPhantomStats[RES] + 3:
        atkCombatBuffs = [x + 3 for x in atkCombatBuffs]

    if "divineNagaBoost" in defSkills and defStats[RES] + defPhantomStats[RES] >= atkStats[RES] + atkPhantomStats[RES] + 3:
        defCombatBuffs = [x + 3 for x in defCombatBuffs]

    # Arden's Blade (Refine Eff) - Arden
    if "I'M STRONG AND YOU'RE TOAST" in atkSkills and atkHPGreaterEqual50Percent:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[DEF] += 6
        defr.spLossWhenAtkd -= 1
        defr.spLossOnAtk -= 1

    if "I'M STRONG AND YOU'RE TOAST" in defSkills and defHPGreaterEqual50Percent:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[DEF] += 6
        atkr.spLossWhenAtkd -= 1
        atkr.spLossOnAtk -= 1

    # Follow-Up Ring - Arden
    if "ardenFollowUp" in atkSkills and atkHPGreaterEqual50Percent: atkr.follow_ups_skill += 1
    if "ardenFollowUp" in defSkills and defHPGreaterEqual50Percent: defr.follow_ups_skill += 1

    # Ayra's Blade (Refine Eff) - Ayra
    if "Ayragate" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.DR_first_hit_NSP.append(20)

    if "Ayragate" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.DR_first_hit_NSP.append(20)

    # Teatime's Edge - T!Ayra
    if "teaSword" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += max(6, min(trunc(0.25 * defStats[ATK] - 2), 16))
        atkCombatBuffs[SPD] += max(6, min(trunc(0.25 * defStats[ATK] - 2), 16))
        atkr.true_stat_damages.append((SPD, 20))
        atkr.offensive_tempo = True

    if "teaSword" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += max(6, min(trunc(0.25 * atkStats[ATK] - 2), 16))
        defCombatBuffs[SPD] += max(6, min(trunc(0.25 * atkStats[ATK] - 2), 16))
        defr.true_stat_damages.append((SPD, 20))
        defr.offensive_tempo = True

    # Supreme Astra
    if "supremeAstra" in atkSkills: atkr.triggered_sp_charge += 1
    if "supremeAstra" in defSkills: defr.triggered_sp_charge += 1

    # Sword of Isaach - L!Ayra
    if "LAyraBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 + trunc(0.15 * atkStats[SPD]) for x in atkCombatBuffs]
        atkr.potent_new_percentage = 100

        Y = len(attacker.statusPos + defender.statusNeg)

        atkr.true_all_hits += min(5 * Y, 25)
        atkr.TDR_first_strikes += min(3 * Y, 15)
        atkr.TDR_on_foe_sp += min(3 * Y, 15)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "LAyraBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 + trunc(0.15 * defStats[SPD]) for x in defCombatBuffs]
        defr.potent_new_percentage = 100

        Y = len(defender.statusPos + attacker.statusNeg)

        defr.true_all_hits += min(5 * Y, 25)
        defr.TDR_first_strikes += min(3 * Y, 15)
        defr.TDR_on_foe_sp += min(3 * Y, 15)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Crusader's Astra
    if "crusadersAstra" in atkSkills:
        atkr.sp_jump_first += 1
        atkr.sp_jump_any_followup += 1
        defr.disable_def_sp_on_foe_FU = True

    if "crusadersAstra" in defSkills:
        defr.sp_jump_first += 1
        defr.sp_jump_any_followup += 1
        atkr.disable_def_sp_on_foe_FU = True

    # Balmung (Base) - Shannan
    if "balmungBoost" in atkSkills and defHPEqual100Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkPenaltiesNeutralized = [True] * 5

    if "balmungBoost" in defSkills:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defPenaltiesNeutralized = [True] * 5

    # Balmung (Refine Base) - Shannan
    if "balmungBoost2" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkPenaltiesNeutralized = [True] * 5
        atkr.offensive_tempo = True
        atkr.defensive_tempo = True

    if "balmungBoost2" in defSkills:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defPenaltiesNeutralized = [True] * 5
        defr.offensive_tempo = True
        defr.defensive_tempo = True

    # Balmung (Refine Eff) - Shannan
    if "balmungBoost3" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 + trunc(atkStats[SPD] * 0.15) for x in atkCombatBuffs]
        atkr.stat_scaling_DR.append((SPD, 40))

    if "balmungBoost3" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 + trunc(defStats[SPD] * 0.15) for x in defCombatBuffs]
        defr.stat_scaling_DR.append((SPD, 40))

    # Larcei's Edge (Base) - Larcei
    if "larceiEdge" in atkSkills and (atkStats[SPD] + atkPhantomStats[SPD] > defStats[SPD] + defPhantomStats[SPD] or defHPEqual100Percent):
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defBonusesNeutralized = [True] * 5

    if "larceiEdge" in defSkills and (atkStats[SPD] + atkPhantomStats[SPD] < defStats[SPD] + defPhantomStats[SPD] or atkHPEqual100Percent):
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkBonusesNeutralized = [True] * 5

    # Larcei's Edge (Refine Base) - Larcei
    if "larceiEdge2" in atkSkills and (atkStats[SPD] + atkPhantomStats[SPD] > defStats[SPD] + defPhantomStats[SPD] or defHPGreaterEqual75Percent):
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defBonusesNeutralized = [True] * 5
        atkr.offensive_tempo = True

    if "larceiEdge2" in defSkills and (defStats[SPD] + defPhantomStats[SPD] > atkStats[SPD] + atkPhantomStats[SPD] or atkHPGreaterEqual75Percent):
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkBonusesNeutralized = [True] * 5
        defr.offensive_tempo = True

    # Larcei's Edge (Refine Eff) - Larcei
    if "infiniteSpecial" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 15))

    if "infiniteSpecial" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 15))

    # Whirling Grace (Base) - CF!Larcei
    if "cfLarceiBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "cfLarceiBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # Brilliant Brident - BR!Larcei
    if "brLarceiBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(len(atkFoeWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))
        atkr.TDR_first_stats.append((SPD, 20))
        atkr.TDR_special_stats.append((SPD, 20))
        atkr.potent_new_percentage = 100

    if "brLarceiBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(len(defFoeWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))
        defr.TDR_first_stats.append((SPD, 20))
        defr.TDR_special_stats.append((SPD, 20))
        defr.potent_new_percentage = 100

    # Winds of Silesse (Refine Base) - Ced
    if "cedBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        defCombatBuffs[SPD] -= trunc(atkStats[SPD] * 0.20)
        defCombatBuffs[RES] -= trunc(atkStats[SPD] * 0.20)

    if "cedBoost" in defSkills and len(atkAdjacentToAlly) <= 1:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        atkCombatBuffs[SPD] -= trunc(defStats[SPD] * 0.20)
        atkCombatBuffs[RES] -= trunc(defStats[SPD] * 0.20)

    # Winds of Silesse (Refine Eff) - Ced
    if "cedEffects" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "cedEffects" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Heired Forseti - A!Ced
    if "ascCedBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.DR_first_hit_NSP.append(30)

    if "ascCedBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.DR_first_hit_NSP.append(30)

    # Dark Mystletainn (Refine Eff) - Eldigan/Ares
    if "DRINK" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        atkr.true_sp += 7

    if "DRINK" in defSkills:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        defr.true_sp += 7

    # Mjölnir (Refine Base) - Ishtar
    if "mjolnirSolo" in defSkills and not defAdjacentToAlly:
        defCombatBuffs[SPD] += 6

    # Mjölnir (Refine Eff) - Ishtar
    if "ishtarBoost" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.offensive_NFU = True

    if "ishtarBoost" in defSkills and not defAdjacentToAlly:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.offensive_NFU = True

    # Thunder's Mjölnir (Base) - A!Ishtar
    if "aIshtarBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.offensive_tempo = True
        atkr.defensive_tempo = True

    if "aIshtarBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.offensive_tempo = True
        defr.defensive_tempo = True

    # Thunderer Tome (Base) - Tine
    if "tineBoost" in atkSkills and (turn <= 3 or not atkHPEqual100Percent):
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.true_sp += 7
        atkr.sp_pierce_DR = True

    if "tineBoost" in defSkills and (turn <= 3 or not defHPEqual100Percent):
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.true_sp += 7
        defr.sp_pierce_DR = True

    # Fiery Bolganone (Base) - Hilda
    if "evilHildaBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[RES] += 6

    if "evilHildaBoost" in defSkills and not defAdjacentToAlly:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[RES] += 6

    # Loptous (Base) - Julius
    if "juliusDebuff" in atkSkills and not ("effDragon" in defSkills or Status.EffDragons in defender.statusPos):
        defCombatBuffs[ATK] -= 6

    if "juliusDebuff" in defSkills and not ("effDragon" in atkSkills or Status.EffDragons in attacker.statusPos):
        atkCombatBuffs[ATK] -= 6

    # Loptous (Refine Base) - Julius
    if "juliusDebuffPlus" in atkSkills and not (any(dragon_eff_strs == skill for skill in defSkills) or Status.EffDragons in defender.statusPos):
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[RES] -= 6
        atkr.stat_scaling_DR.append((RES, 40))

    if "juliusDebuffPlus" in defSkills and not (any(dragon_eff_strs == skill for skill in atkSkills) or Status.EffDragons in attacker.statusPos):
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[RES] -= 6
        defr.stat_scaling_DR.append((RES, 40))

    # Loptous (Refine Eff) - Julius
    if "juliusSabotage" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[RES] -= 5

    if "juliusSabotage" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[RES] -= 5

    # Bow of Verdane (Base) - Jamke
    if "jamkeBoost" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "jamkeBoost" in defSkills and not defAdjacentToAlly:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Bow of Verdane (Refine Eff) - Jamke
    if "jamkeEffects" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "jamkeEffects" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Gáe Bolg (Base) - Quan
    if "noooo fliers pls" in atkSkills and defender.moveType != 2:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5

    if "noooo fliers pls" in defSkills and attacker.moveType != 2:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5

    # Gáe Bolg (Refine Eff) - Quan
    if "refMeleeMoves" in atkSkills:
        condition = False
        for ally in atkAllAllies:
            if ally.wpnType in ["Sword", "Lance", "Axe"] or ally.move == 1:
                condition = True

        if condition:
            atkCombatBuffs[ATK] += 5
            atkCombatBuffs[DEF] += 5

    if "refMeleeMoves" in defSkills:
        condition = False
        for ally in defAllAllies:
            if ally.wpnType in ["Sword", "Lance", "Axe"] or ally.move == 1:
                condition = True

        if condition:
            defCombatBuffs[ATK] += 5
            defCombatBuffs[DEF] += 5

    # Forseti (Base) - Lewyn
    if "lewynDesp" in atkSkills and atkHPGreaterEqual50Percent:
        atkr.self_desperation = True

    # Forseti (Refine Base) - Lewyn
    if "lewynDesp2" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4
        atkr.self_desperation = True

    # Forseti (Refine Eff) - Lewyn
    if "lewynBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4

        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[SPD] = True
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[SPD] = True

    if "lewynBoost" in atkSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[SPD] += 4

        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[SPD] = True
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[SPD] = True

    # Earthly Gáe Bolg (Base) - Altena
    if "PLEASE no fliers" in atkSkills and defender.wpnType != 2:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[DEF] = True

    if "PLEASE no fliers" in defSkills and attacker.wpnType != 2:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[DEF] = True

    # Earthly Gáe Bolg (Refine Base) - Altena
    if "FOR THE LOVE OF GOD, NO FLIERS" in atkSkills and (defender.wpnType != 2 or defHPGreaterEqual50Percent):
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[DEF] = True
        atkr.true_stat_damages.append((DEF, 10))

    if "FOR THE LOVE OF GOD, NO FLIERS" in defSkills and (attacker.wpnType != 2 or atkHPGreaterEqual50Percent):
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[DEF] = True
        defr.true_stat_damages.append((DEF, 10))

    # Earthly Gáe Bolg (Refine Eff) - Altena
    if "altenaStuff" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.follow_ups_skill += 1
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "altenaStuff" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.follow_ups_skill += 1
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Thracia Kinglance (Base) - Travant
    if "Silver Lance???" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defCombatBuffs[ATK] -= trunc(atkStats[DEF] * 0.15)
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "Silver Lance???" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkCombatBuffs[ATK] -= trunc(defStats[DEF] * 0.15)
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Thracia Kinglance (Refine Eff) - Travant
    if "travantBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "travantBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Heired Gungnir - Arion
    if "neat" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkr.true_stat_damages.append((DEF, 15))

    if "neat" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defr.true_stat_damages.append((DEF, 15))

    # Aerial Longsword (Base) - Annand
    if "annandBoost" in atkSkills:
        atkCombatBuffs = [x + 5 + trunc(0.10 * atkStats[SPD]) for x in atkCombatBuffs]
        atkr.TDR_first_strikes += 7
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "annandBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 + trunc(0.10 * defStats[SPD]) for x in defCombatBuffs]
        defr.TDR_first_strikes += 7
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Aerial Longsword (Refine Eff) - Annand
    if "aerialLongsword" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))

    if "aerialLongsword" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))

    # Silesse Frost (Base) - Erinys
    if "stabbity" in atkSkills and defHPGreaterEqual50Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

        if atkWithin2SpaceOfSupportPartner:
            atkr.brave = True

    if "stabbity" in defSkills and atkHPGreaterEqual50Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

    # Silesse Frost (Refine Base) - Erinys
    if "stabbitystabbity" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkCombatBuffs[DEF] += 5
        atkCombatBuffs[RES] += 5
        atkr.TDR_first_strikes += 7

        support_partners = []
        highest_spd_allies = []

        for ally in atkAllAllies:
            if ally.isSupportOf(attacker):
                support_partners.append(ally)

            if not highest_spd_allies or ally.get_visible_stat(SPD) == highest_spd_allies[0].get_visible_stat(SPD):
                highest_spd_allies.append(ally)
            elif ally.get_visible_stat(SPD) > highest_spd_allies[0].get_visible_stat(SPD):
                highest_spd_allies = [ally]

        if disableSupportEffects:
            support_partners = []

        if support_partners:
            target_allies = support_partners
        else:
            target_allies = highest_spd_allies

        if any([ally in target_allies for ally in atkAllyWithin4Spaces]):
            atkr.brave = True

    if "stabbitystabbity" in defSkills and atkHPGreaterEqual50Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defCombatBuffs[DEF] += 5
        defCombatBuffs[RES] += 5
        defr.TDR_first_strikes += 7

        support_partners = []
        highest_spd_allies = []

        for ally in defAllAllies:
            if ally.isSupportOf(defender):
                support_partners.append(ally)

            if not highest_spd_allies or ally.get_visible_stat(SPD) == highest_spd_allies[0].get_visible_stat(SPD):
                highest_spd_allies.append(ally)
            elif ally.get_visible_stat(SPD) > highest_spd_allies[0].get_visible_stat(SPD):
                highest_spd_allies = [ally]

        if disableSupportEffects:
            support_partners = []

        if support_partners:
            target_allies = support_partners
        else:
            target_allies = highest_spd_allies

        if any([ally in target_allies for ally in defAllyWithin4Spaces]):
            defr.brave = True

    # Silesse Frost (Refine Eff) - Erinys
    if "stabbitystabbitystabstab" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 5 + trunc(0.10 * atkStats[SPD]) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))

    if "stabbitystabbitystabstab" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 5 + trunc(0.10 * defStats[SPD]) for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))

    # Goddess Axe (Refine Base) - Lex
    if "GuaranteedFollowUp" in atkSkills: atkr.follow_ups_skill += 1
    if "GuaranteedFollowUp" in defSkills: defr.follow_ups_skill += 1

    # Goddess Axe (Refine Eff) - Lex
    if "lexStuff" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[DEF] += 6
        atkr.true_stat_damages.append((DEF, 15))
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "lexStuff" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[DEF] += 6
        defr.true_stat_damages.append((DEF, 15))
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Heavenly Icicle (Base) - Díthorba
    if "dithorbaField" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5
        atkr.DR_first_strikes_NSP.append(40)

    if "dithorbaField" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5
        defr.DR_first_strikes_NSP.append(40)

    # Heavenly Icicle (Refine Eff) - Díthorba
    if "dithorbaStuff" in atkSkills:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[SPD] = True
        defBonusesNeutralized[DEF] = True
        atkr.true_all_hits += min(4 * (len(atkAllyWithin3Spaces) + len(defAllyWithin3Spaces) + 1), 16)

    if "dithorbaStuff" in defSkills and defAllyWithin3Spaces:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[SPD] = True
        atkBonusesNeutralized[DEF] = True
        defr.true_all_hits += min(4 * (len(defAllyWithin3Spaces) + len(atkAllyWithin3Spaces) + 1), 16)

    # Heired Yewfelle - Febail
    if "febailBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkCombatBuffs[ATK] += max(0, min(trunc(0.25 * defStats[ATK]) - 8, 10))
        atkCombatBuffs[SPD] += max(0, min(trunc(0.25 * defStats[ATK]) - 8, 10))
        atkr.offensive_NFU = True
        atkr.DR_first_hit_NSP.append(30)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "febailBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defCombatBuffs[ATK] += max(0, min(trunc(0.25 * atkStats[ATK]) - 8, 10))
        defCombatBuffs[SPD] += max(0, min(trunc(0.25 * atkStats[ATK]) - 8, 10))
        defr.offensive_NFU = True
        defr.DR_first_hit_NSP.append(30)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Holy Yewfelle (Base/Refine Base) - Ullr
    if "ullrBoost" in atkSkills or "ullrRefineBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[SPD] = True
        atkr.offensive_tempo = True

    if ("ullrBoost" in defSkills or "ullrRefineBoost" in defSkills) and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[SPD] = True
        defr.offensive_tempo = True

    # Holy Yewfelle (Refine Eff) - Ullr
    if "yewfelleBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5 + trunc(0.15 * atkStats[SPD])
        atkCombatBuffs[SPD] += 5 + trunc(0.15 * atkStats[SPD])
        defBonusesNeutralized[SPD] = True
        defBonusesNeutralized[DEF] = True
        atkr.damage_reduction_reduction.append(50)

    if "yewfelleBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5 + trunc(0.15 * defStats[SPD])
        defCombatBuffs[SPD] += 5 + trunc(0.15 * defStats[SPD])
        atkBonusesNeutralized[SPD] = True
        atkBonusesNeutralized[DEF] = True
        defr.damage_reduction_reduction.append(50)

    if "yngviAsc" in atkSkills:
        atkr.offensive_NFU = True
        cannotCounter = True

    if "yngviAsc" in defSkills:
        defr.offensive_NFU = True

    # Divine Yewfelle - Brigid
    if "brigidBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6 + trunc(0.20 * atkStats[SPD])
        atkCombatBuffs[SPD] += 6 + trunc(0.20 * atkStats[SPD])
        atkr.true_all_hits += min(len(attacker.statusPos + defender.statusNeg) * 5, 25)
        atkr.sp_jump_followup += 2

    if "brigidBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6 + trunc(0.20 * defStats[SPD])
        defCombatBuffs[SPD] += 6 + trunc(0.20 * defStats[SPD])
        defr.true_all_hits += min(len(defender.statusPos + attacker.statusNeg) * 5, 25)
        defr.sp_jump_followup += 2

    # I Remember... - Brigid
    if "iRememberYou'reNeutrals" in atkSkills:
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.true_stat_damages.append((SPD, 20))
        atkr.pseudo_miracle = True
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "iRememberYou'reNeutrals" in defSkills and defAllyWithin2Spaces:
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.true_stat_damages.append((SPD, 20))
        defr.pseudo_miracle = True
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Staff of Yngvi - Edain
    if "edainBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6 + trunc(0.20 * atkStats[RES])
        atkCombatBuffs[RES] += 6 + trunc(0.20 * atkStats[RES])
        atkr.true_stat_damages.append((RES, 20))
        atkr.sp_jump_first += 1

    if "edainBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 6 + trunc(0.20 * defStats[RES])
        defCombatBuffs[RES] += 6 + trunc(0.20 * defStats[RES])
        defr.true_stat_damages.append((RES, 20))
        defr.sp_jump_first += 1

    # Rampart Bow - Midir
    if "midirBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(len(atkFoeWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkPenaltiesNeutralized = [True] * 5
        atkr.true_all_hits += min((len(defAllyWithin3Spaces) + 1) * 8, 32)
        atkr.TDR_first_strikes += 7

    if "midirBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(len(defFoeWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defPenaltiesNeutralized = [True] * 5
        defr.true_all_hits += min((len(atkAllyWithin3Spaces) + 1) * 8, 32)
        defr.TDR_first_strikes += 7

    # THRACIA 776

    # Light Brand (Refine Eff) - Leif
    if "leafSword" in atkSkills and defHPEqual100Percent:
        atkCombatBuffs[SPD] += 4
        atkCombatBuffs[DEF] += 4

    if "leafSword" in defSkills and atkHPEqual100Percent:
        defCombatBuffs[SPD] += 4
        defCombatBuffs[DEF] += 4

    # Meisterbogen (Base) - L!Leif
    if "leifBowFU" in atkSkills and attacker.side == 0:
        defr.follow_up_denials -= 1

    # Meisterbogen (Refine Eff) - L!Leif
    if "leifWhyDoesHeHaveAOEDamageOnThis" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.true_stat_damages_from_foe.append((ATK, 10))
        atkr.offensive_tempo = True

    if "leifWhyDoesHeHaveAOEDamageOnThis" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.true_stat_damages_from_foe.append((ATK, 10))
        defr.offensive_tempo = True

    # Bow of Twelve (Base) - CF!Leif
    if "cfLeifBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.pseudo_miracle = True

    if "cfLeifBoost" in defSkills and atkHPGreaterEqual75Percent and defender.wpnType in TOME_WEAPONS + ["Staff"]:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.pseudo_miracle = True

    # Bow of Loyalty
    if "xLeifBoost" in atkSkills:
        atkCombatBuffs[ATK] += 5 + trunc(0.20 * atkStats[DEF])
        atkCombatBuffs[DEF] += 5 + trunc(0.20 * atkStats[DEF])
        atkCombatBuffs[RES] += 5 + trunc(0.20 * atkStats[DEF])

        X = min(len(atkAllyWithin3RowsCols) * 5, 15)
        atkr.true_all_hits += X
        atkr.TDR_all_hits += X
        atkr.offensive_tempo = True

    if "xLeifBoost" in defSkills:
        defCombatBuffs[ATK] += 5 + trunc(0.20 * defStats[DEF])
        defCombatBuffs[DEF] += 5 + trunc(0.20 * defStats[DEF])
        defCombatBuffs[RES] += 5 + trunc(0.20 * defStats[DEF])

        X = min(len(defAllyWithin3RowsCols) * 5, 15)
        defr.true_all_hits += X
        defr.TDR_all_hits += X
        defr.offensive_tempo = True

    # Loyalty Spear (Refine Eff) - Finn
    if "finnBoost" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 4
        defCombatBuffs[SPD] -= 4
        defCombatBuffs[DEF] -= 4

        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[DEF] = True

    if "finnBoost" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 4
        atkCombatBuffs[SPD] -= 4
        atkCombatBuffs[DEF] -= 4

        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[DEF] = True

    # Lands Sword (Base) - L!Nanna
    if "theLand" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.offensive_NFU = True
        atkr.always_pierce_DR = True
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))
        if defender.getSpecialType() == "Defense":
            defr.special_disabled = True

    if "theLand" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.offensive_NFU = True
        defr.always_pierce_DR = True
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))
        if attacker.getSpecialType() == "Defense":
            atkr.special_disabled = True

    # Lands Sword (Refine Base) - L!Nanna
    if "theTrueLand" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.always_pierce_DR = True
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))
        if defender.getSpecialType() == "Defense":
            defr.special_disabled = True

    if "theTrueLand" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.always_pierce_DR = True
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))
        if attacker.getSpecialType() == "Defense":
            atkr.special_disabled = True

    # Lands Sword (Refine Eff) - L!Nanna
    if "theLappland" in atkSkills:
        atkCombatBuffs[ATK] += min(6 + len(atkAllyWithin3RowsCols) * 2, 12)
        atkCombatBuffs[SPD] += min(6 + len(atkAllyWithin3RowsCols) * 2, 12)
        atkr.true_stat_damages.append((SPD, 20))

    if "theLappland" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += min(6 + len(defAllyWithin3RowsCols) * 2, 12)
        defCombatBuffs[SPD] += min(6 + len(defAllyWithin3RowsCols) * 2, 12)
        defr.true_stat_damages.append((SPD, 20))

    # Hoðr's Zeal - L!Nanna
    if "hoðrsZeal" in atkSkills:
        atkr.true_stat_damages.append((ATK, 20))
        atkr.self_desperation = True

    if "hoðrsZeal" in defSkills:
        defr.true_stat_damages.append((ATK, 20))

    # Hoðr's Zeal II - L!Nanna
    if "hoðrsZeal2" in atkSkills:
        atkr.true_stat_damages.append((ATK, 20))
        atkr.self_desperation = True
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[SPD] = True

    if "hoðrsZeal2" in defSkills:
        defr.true_stat_damages.append((ATK, 20))
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[SPD] = True

    # Meisterschwert (Refine Eff) - Sword Reinhardt
    if "bigHands" in atkSkills and defHPGreaterEqual50Percent:
        atkCombatBuffs[ATK] += 5
        defCombatBuffs[ATK] -= 5
        defr.follow_up_denials -= 1

    if "bigHands" in defSkills and atkHPGreaterEqual50Percent:
        defCombatBuffs[ATK] += 5
        atkCombatBuffs[ATK] -= 5

    # Arcane Thunder
    if "arcaneThunder" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        defBonusesNeutralized[SPD] = True
        defBonusesNeutralized[RES] = True
        atkr.speed_NFU = True

    if "arcaneThunder" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        atkBonusesNeutralized[SPD] = True
        atkBonusesNeutralized[RES] = True
        defr.speed_NFU = True

    # Thunder's Fist - R!Reinhardt
    if "MAGIC IS EVERYTHING" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 7 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((ATK, 15))
        atkr.DR_first_hit_NSP.append(50)

        if spaces_moved_by_atkr >= 2:
            atkr.brave = True

    if "MAGIC IS EVERYTHING" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 7 for x in defCombatBuffs]
        defr.true_stat_damages.append((ATK, 15))

    # Thunderhead (Refine Eff) - P!Olwen
    if "olwen_field_f" in defSkills:
        defCombatBuffs[SPD] -= defSkills["olwen_field_f"]
        defCombatBuffs[RES] -= defSkills["olwen_field_f"]

    # Shadow Sword (Base) - FA!Mareeta
    if "swagDesp" in atkSkills and atkHPGreaterEqual50Percent:
        atkr.self_desperation = True

    # Shadow Sword (Refine Base) - FA!Mareeta
    if "swagDespPlus" in atkSkills and atkHPGreaterEqual25Percent:
        atkr.self_desperation = True
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "swagDespPlus" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Shadow Sword (Refine Eff) - FA!Mareeta
    if "swagDespPlusPlus" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.offensive_tempo = True

        if defStats[SPD] > defStats[DEF]:
            defCombatBuffs[SPD] -= 8
        else:
            defCombatBuffs[DEF] -= 8

    if "swagDespPlusPlus" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.offensive_tempo = True

        if atkStats[SPD] > atkStats[DEF]:
            atkCombatBuffs[SPD] -= 8
        else:
            atkCombatBuffs[DEF] -= 8

    # Mareeta's Sword (Base) - Mareeta
    if "NFUSolo" in atkSkills and not atkAdjacentToAlly:
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True

    if "NFUSolo" in defSkills and not defAdjacentToAlly:
        defr.defensive_NFU = True
        defr.offensive_NFU = True

    # Mareeta's Sword (Refine Base)
    if "mareeeeta" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True
        defBonusesNeutralized[SPD] = True
        defBonusesNeutralized[DEF] = True

    if "mareeeeta" in defSkills and len(defAdjacentToAlly) <= 1:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.defensive_NFU = True
        defr.offensive_NFU = True
        atkBonusesNeutralized[SPD] = True
        atkBonusesNeutralized[DEF] = True

    if "moreeeeta" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 10))
        atkr.sp_pierce_DR = True
        atkr.offensive_tempo = True

    if "moreeeeta" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 10))
        defr.sp_pierce_DR = True
        defr.offensive_tempo = True

    # Ascending Blade (Base) - A!Mareeta
    if "ascendingBlade" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    if "ascendingBlade" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.defensive_NFU = True
        defr.offensive_NFU = True
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    # Vital Astra
    if "vitalAstra" in atkSkills and atkSpCountCur == 0:
        atkr.stat_scaling_DR.append((SPD, 30))

    if "vitalAstra" in defSkills and defSpCountCur == 0:
        defr.stat_scaling_DR.append((SPD, 30))

    # Violdrake Bow (Base) - Tanya
    if "tanyaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 10))
        atkr.hexblade = True

    if "tanyaBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 10))
        defr.hexblade = True

    # Vouge (Refine Base) - Osian
    if "osianDC" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "osianDC" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        ignore_range = True

    # Vouge (Refine Eff) - Osian
    if "osianBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.DR_first_hit_NSP.append(30)
        atkr.retaliatory_reduced += 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "osianBoost" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.DR_first_hit_NSP.append(30)
        defr.retaliatory_reduced += 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Freeblade's Edge (Base) - Eyvel
    if "eyvelBlade" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defr.spLossWhenAtkd -= 1
        defr.spLossOnAtk -= 1
        atkr.DR_all_hits_NSP.append(30)

    if "eyvelBlade" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkr.spLossWhenAtkd -= 1
        atkr.spLossOnAtk -= 1
        defr.DR_all_hits_NSP.append(30)

    # Freeblade's Edge (Refine Eff) - Eyvel
    if "sword wow!" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((DEF, 15))
        atkr.follow_ups_skill += 1

    if "sword wow!" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.true_stat_damages.append((DEF, 15))
        defr.follow_ups_skill += 1

    # Venin Edge (Base) - Kempf
    if "AMERICA" in atkSkills:
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 10, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.Flash, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "AMERICA" in defSkills:
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 10, "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.Flash, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Venin Edge (Refine Base) - Kempf
    if "FREEDOM" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
    if "FREEDOM" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Venin Edge (Refine Eff) - Kempf
    if "MY TRAP! 🇺🇸" in atkSkills and len(atkAdjacentToAlly) <= 1:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.DR_first_hit_NSP.append(30)
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.Discord, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "MY TRAP! 🇺🇸" in defSkills and len(defAdjacentToAlly) <= 1:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.DR_first_hit_NSP.append(30)
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.Discord, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Grafcalibur (Base) - Asbel
    if "asbelBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defBonusesNeutralized = [True] * 5

    if "asbelBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkBonusesNeutralized = [True] * 5

    # Grafcalibur (Refine Base) - Asbel
    if "asbelRefineBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))
        defBonusesNeutralized = [True] * 5

    if "asbelRefineBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))
        atkBonusesNeutralized = [True] * 5

    # Grafcalibur (Refine Eff) - Asbel
    if "asbelFollowUp" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + trunc(atkStats[SPD] * 0.10) + 5 for x in atkCombatBuffs]
        atkr.sp_jump_followup += 2

    if "asbelFollowUp" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + trunc(defStats[SPD] * 0.10) + 5 for x in defCombatBuffs]
        defr.sp_jump_followup += 2

    # Indignant Bow (Base) - Ronan
    if "ronanBoost" in atkSkills and defHPEqual100Percent:
        atkCombatBuffs[ATK] += 6
        defCombatBuffs[ATK] -= 6
        atkPenaltiesNeutralized[ATK] = True
        defBonusesNeutralized[ATK] = True

    if "ronanBoost" in defSkills:
        defCombatBuffs[ATK] += 6
        atkCombatBuffs[ATK] -= 6
        defPenaltiesNeutralized[ATK] = True
        atkBonusesNeutralized[ATK] = True

    # Indignant Bow (Refine Base) - Ronan
    if "ronanRefineBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 6 for x in atkCombatBuffs]
        atkCombatBuffs[SPD] -= 1
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[SPD] = True
        atkPenaltiesNeutralized[RES] = True
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[SPD] = True
        atkr.true_stat_damages.append((RES, 20))
        atkr.alternative_sp_stat = 2

    if "ronanRefineBoost" in defSkills:
        defCombatBuffs = [x + 6 for x in defCombatBuffs]
        defCombatBuffs[SPD] -= 1
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[SPD] = True
        defPenaltiesNeutralized[RES] = True
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[SPD] = True
        defr.true_stat_damages.append((RES, 20))
        defr.alternative_sp_stat = 2

    # Indignant Bow (Refine Eff) - Ronan
    if "about half done, and there's still so many" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.offensive_tempo = True
        atkr.sp_jump_first += 1
        atkr.TDR_all_hits += 10
        atkr.TDR_on_foe_sp += 10

    if "about half done, and there's still so many" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.offensive_tempo = True
        defr.sp_jump_first += 1
        defr.TDR_all_hits += 10
        defr.TDR_on_foe_sp += 10

    if "ronanField_f" in atkSkills:
        atkr.offensive_tempo = True
        atkr.TDR_first_strikes += atkSkills["ronanField_f"]

    if "ronanField_f" in defSkills:
        defr.offensive_tempo = True
        defr.TDR_first_strikes += defSkills["ronanField_f"]

    # Kia Staff (Refine Eff) - Sara
    if "kiaRecoveryPlus" in atkSkills:
        if atkAllyWithin3Spaces:
            atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
            atkr.true_stat_damages_from_foe.append((ATK, 15))
            atkr.spGainOnAtk += 1
            atkr.spGainWhenAtkd += 1

        if atkHPGreaterEqual25Percent:
            atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
            defBonusesNeutralized = [True] * 5
            atkr.offensive_NFU = True
            atkr.defensive_NFU = True
            atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "kiaRecoveryPlus" in defSkills:
        if defAllyWithin3Spaces:
            defCombatBuffs = [x + 5 for x in defCombatBuffs]
            defr.true_stat_damages_from_foe.append((ATK, 15))
            defr.spGainOnAtk += 1
            defr.spGainWhenAtkd += 1

        if defHPGreaterEqual25Percent:
            defCombatBuffs = [x + 5 for x in defCombatBuffs]
            atkBonusesNeutralized = [True] * 5
            defr.offensive_NFU = True
            defr.defensive_NFU = True
            defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "postCombatHeal_f" in atkSkills: atkPostCombatEffs[UNCONDITIONAL].append(("heal", atkSkills["postCombatHeal_f"], "self", "one"))
    if "postCombatHeal_f" in defSkills: defPostCombatEffs[UNCONDITIONAL].append(("heal", defSkills["postCombatHeal_f"], "self", "one"))

    # Tome of Fury (Base) - Miranda
    if "mirandaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((RES, 20))
        atkr.TDR_all_hits += 7

    if "mirandaBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages.append((RES, 20))
        defr.TDR_all_hits += 7

    # Tome of Fury (Refine Eff) - Miranda
    if "youRudeCreature" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "youRudeCreature" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Petrify (Base) - Veld
    if "veldRefinePetrify" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1

    if "veldRefinePetrify" in defSkills and len(defAdjacentToAlly) <= 1:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1

    # Repair - Safy
    if "repair" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1

    if "repair" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1

    # Thief - Tina
    if "tinaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.true_all_hits += min(5 * len(attacker.statusPos), 20)

    if "tinaBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.true_all_hits += min(5 * len(defender.statusPos), 20)

    # Blade Royale
    if "perneBoost" in atkSkills:
        atkr.brave = True
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "perneBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Arcane Renegade
    if "renegade" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + max(5, min(trunc(0.25 * defStats[ATK]) - 4, 14)) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((ATK, 15))
        atkr.TDR_stats.append((ATK, 15))
        atkr.sp_jump_first -= 1
        atkr.all_hits_heal += 7

    if "renegade" in defSkills:
        defCombatBuffs = [x + max(5, min(trunc(0.25 * atkStats[ATK]) - 4, 14)) for x in defCombatBuffs]
        defr.true_stat_damages.append((ATK, 15))
        defr.TDR_stats.append((ATK, 15))
        defr.sp_jump_first -= 1
        defr.all_hits_heal += 7

    # Hot-Blooded - Machyua
    if "hotBlooded" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.true_stat_damages.append((SPD, 20))
        atkr.TDR_stats.append((SPD, 20))
        atkPostCombatEffs[GIVEN_SPECIAL_MAX].append(("sp_charge", 1, "self", "one"))

    if "hotBlooded" in defSkills:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.vantage = True
        defr.true_stat_damages.append((SPD, 20))
        defr.TDR_stats.append((SPD, 20))
        defPostCombatEffs[GIVEN_SPECIAL_MAX].append(("sp_charge", 1, "self", "one"))

    # BINDING BLADE

    # Blazing Durandal (Refine) - B!Roy/Eliwood
    if "ourBoyBlade" in atkSkills:
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        defr.spLossWhenAtkd -= 1
        defr.spLossOnAtk -= 1

    # Blazing Durandal (Refine Eff) - B!Roy/Eliwood
    if "roys" in atkSkills:
        atkCombatBuffs[SPD] += 7
        atkCombatBuffs[DEF] += 10
        defr.follow_up_denials -= 1

    # Dragonbind (Refine Eff) - L!Roy
    if "ROY'S OUR BOY" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkr.offensive_tempo = True

    if "ROY'S OUR BOY" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defr.offensive_tempo = True

    # Human Virtue II - L!Roy
    if "humanVir2" in atkSkills:
        highest_stats = [0, 0, 0, 0, 0]
        bonus_totals = []

        for ally in atkAllyWithin2Spaces:
            bonus_total = 0

            ally_panic = Status.Panic in ally.statusNeg and Status.NullPanic not in ally.statusPos
            if ally_panic or ally.wpnType in DRAGON_WEAPONS + BEAST_WEAPONS: continue

            i = 1
            while i < 5:
                cur_buff = ally.buffs[i]
                bonus_total += cur_buff
                highest_stats[i] = max(highest_stats[i], cur_buff)
                i += 1

            bonus_totals.append(bonus_total)

        i = 1
        while i < 5:
            atkCombatBuffs[i] += highest_stats[i]
            i += 1

        atkr.DR_first_hit_NSP.append(min(sum(nlargest(3, bonus_totals)), 40))

    if "humanVir2" in defSkills:
        highest_stats = [0, 0, 0, 0, 0]
        bonus_totals = []

        for ally in defAllyWithin2Spaces:
            bonus_total = 0

            ally_panic = Status.Panic in ally.statusNeg and Status.NullPanic not in ally.statusPos
            if ally_panic or ally.wpnType in DRAGON_WEAPONS + BEAST_WEAPONS: continue

            i = 1
            while i < 5:
                cur_buff = ally.buffs[i]
                bonus_total += cur_buff
                highest_stats[i] = max(highest_stats[i], cur_buff)
                i += 1

            bonus_totals.append(bonus_total)

        i = 1
        while i < 5:
            defCombatBuffs[i] += highest_stats[i]
            i += 1

        defr.DR_first_hit_NSP.append(min(sum(nlargest(3, bonus_totals)), 40))

    # Studied Forblaze (Base) - L!Lilina
    if "studiedForblaze" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[RES] += 6
        atkr.hardy_bearing = True
        defr.hardy_bearing = True

    if "studiedForblaze" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[RES] += 6
        atkr.hardy_bearing = True
        defr.hardy_bearing = True

    # Studied Forblaze (Refine Base) - L!Lilina
    if "AOEqueen" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[RES] += 5
        atkr.follow_ups_skill += 1
        atkr.true_stat_damages.append((RES, 15))
        atkr.DR_first_hit_NSP.append(30)

    if "AOEqueen" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[RES] += 5
        defr.follow_ups_skill += 1
        defr.true_stat_damages.append((RES, 15))
        defr.DR_first_hit_NSP.append(30)

    # True-Love Roses (Base) - BR!Lilina
    if "brLilinaBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[RES] += 6
        atkr.true_stat_damages.append((RES, 10))

    if "brLilinaBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[RES] += 6
        defr.true_stat_damages.append((RES, 10))

    # Arcane Truthfire
    if "truthfire" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + max(5, min(trunc(0.25 * defStats[ATK]) - 4, 14)) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((ATK, 15))
        atkr.TDR_first_strikes += 7

        if attacker.getSpecialType() == "Offense":
            atkr.sp_jump_first += 1

    if "truthfire" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + max(5, min(trunc(0.25 * atkStats[ATK]) - 4, 14)) for x in defCombatBuffs]
        defr.true_stat_damages.append((ATK, 15))
        defr.TDR_first_strikes += 7

        if defender.getSpecialType() == "Offense":
            defr.sp_jump_first += 1

    # Gift for Magic - R!Lilina
    if "giftForMagic" in atkSkills:
        atkr.hardy_bearing = True
        defr.hardy_bearing = True
        atkr.DR_sp_trigger_by_any_special_SP.append(40)

        if aoe_triggered:
            atkr.damage_reduction_reduction.append(50)

    if "giftForMagic" in defSkills:
        atkr.hardy_bearing = True
        defr.hardy_bearing = True
        defr.DR_sp_trigger_by_any_special_SP.append(40)

    # Weighted Lance (Base) - Gwendolyn
    if "gwendyBoost" in atkSkills and atkHPGreaterEqual50Percent:
        atkr.spGainWhenAtkd += 1

        atkCombatBuffs[DEF] += 4
        atkCombatBuffs[RES] += 4

    if "gwendyBoost" in defSkills and defHPGreaterEqual50Percent:
        defr.spGainWhenAtkd += 1

        defCombatBuffs[DEF] += 4
        defCombatBuffs[RES] += 4

    # Light Breath (Base) - Fae, Ninian
    if "light_buff" in atkSkills:
        atkPostCombatEffs[0].append(("buff_def", 4, "allies", "within_1_spaces_self"))
        atkPostCombatEffs[0].append(("buff_res", 4, "allies", "within_1_spaces_self"))

    # Light Breath (Refine) - Fae, Ninian
    if "super_light_buff" in atkSkills:
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("buff_omni", 4, "self_and_allies", "within_2_spaces_self"))

    if "super_light_buff" in defSkills:
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("buff_omni", 4, "self_and_allies", "within_2_spaces_self"))

    # Glittering Breath/Goodie Boot (Base) - WI!Fae/WI!Cecilia
    if "winterForm" in atkSkills:
        atkCombatBuffs[DEF] += min(2 * len(atkAllyWithin2Spaces), 6)
        atkCombatBuffs[RES] += min(2 * len(atkAllyWithin2Spaces), 6)

    if "winterForm" in defSkills:
        defCombatBuffs[DEF] += min(2 * len(defAllyWithin2Spaces), 6)
        defCombatBuffs[RES] += min(2 * len(defAllyWithin2Spaces), 6)

    # Dazzling Breath (Base) - L!Fae
    if "LFaeBoost" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs = [x - 5 for x in defCombatBuffs]
        defr.follow_up_denials -= 1

        if atkAllyWithin2Spaces:
            defr.spLossOnAtk -= 1
            defr.spLossWhenAtkd -= 1

    if "LFaeBoost" in defSkills:
        atkCombatBuffs = [x - 5 for x in atkCombatBuffs]
        atkr.follow_up_denials -= 1

        if defAllyWithin2Spaces:
            atkr.spLossOnAtk -= 1
            atkr.spLossWhenAtkd -= 1

    # Dazzling Breath (Refine Base) - L!Fae
    if "LFaeRefine" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs = [x - 5 for x in defCombatBuffs]
        defr.follow_up_denials -= 1
        atkr.true_stat_damages.append((RES, 20))
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "LFaeRefine" in defSkills:
        atkCombatBuffs = [x - 5 for x in atkCombatBuffs]
        atkr.follow_up_denials -= 1
        defr.true_stat_damages.append((RES, 20))
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Dazzling Breath (Refine Eff) - L!Fae
    if "LEMME HELP!" in atkSkills and atkAllyWithin3Spaces:
        defCombatBuffs = [x - 5 for x in defCombatBuffs]
        atkr.TDR_stats.append((RES, 20))

    if "LEMME HELP!" in defSkills and defAllyWithin3Spaces:
        atkCombatBuffs = [x - 5 for x in atkCombatBuffs]
        defr.TDR_stats.append((RES, 20))

    # Life Unending II - L!Fae
    if "lifeUnendingII" in atkSkills:
        atkr.DR_first_strikes_SP.append(40)
        atkr.retaliatory_reduced += 1

    if "lifeUnendingII" in defSkills:
        defr.DR_first_strikes_SP.append(40)
        defr.retaliatory_reduced += 1

    # Wanderer Blade (Base) - Rutger
    if "wandererer" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "wandererer" in defSkills and atkHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    # Wanderer Blade (Refine Eff) - Rutger
    if "like the university" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.stat_scaling_DR.append((SPD, 40))

    if "like the university" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.stat_scaling_DR.append((SPD, 40))

    # Tome of Reason (Base) - Lugh
    if "lughBuffs" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "lughBuffs" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Tome of Reason (Refine Eff) - Lugh
    if "lughBonus" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "lughBonus" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Icy Maltet (Base) - Thea
    if "I LOVE MY FLOWERSSSSSSS" in atkSkills and defHPGreaterEqual75Percent:
        if attacker.flowers >= 1:
            atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        else:
            atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

        if attacker.flowers >= 5:
            defr.spLossOnAtk -= 1
            defr.spLossWhenAtkd -= 1

    if "I LOVE MY FLOWERSSSSSSS" in defSkills:
        if defender.flowers >= 1:
            defCombatBuffs = [x + 5 for x in defCombatBuffs]
        else:
            defCombatBuffs = [x + 4 for x in defCombatBuffs]

        if defender.flowers >= 5:
            atkr.spLossOnAtk -= 1
            atkr.spLossWhenAtkd -= 1

    # Ilian Frost Blade - FF!Thea
    if "iceTheaBoost" in atkSkills:
        atkCombatBuffs = [x + min(5 + (attacker.flowers * 2), 15) for x in atkCombatBuffs]
        atkr.damage_reduction_reduction.append(50)
        atkr.TDR_first_strikes += 7
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "iceTheaBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + min(5 + (defender.flowers * 2), 15) for x in defCombatBuffs]
        defr.damage_reduction_reduction.append(50)
        defr.TDR_first_strikes += 7
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Rose-Quartz Bow (Base) - BR!Shanna
    if "brShannaBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.true_stat_damages.append((SPD, 20))

    if "brShannaBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.true_stat_damages.append((SPD, 20))

    # Light of Etruria - Elffin
    if "elffinBoost" in defSkills:
        defCombatBuffs[ATK] -= 6 + trunc(0.20 * atkStats[RES])
        defCombatBuffs[SPD] -= 6 + trunc(0.20 * atkStats[RES])
        defr.pseudo_miracle = True

    # Quick Mulagir (Base) - Sue
    if "sueSweep" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "sueSweep" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Quick Mulagir (Refine Eff) - Sue
    if "sueScatter" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

        atkPostCombatEffs.append(("damage", 7, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "sueScatter" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Western Axe (Base) - Echidna
    if "echidnaBoost" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.DR_first_hit_NSP.append(30)
        atkr.retaliatory_reduced += 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "echidnaBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.DR_first_hit_NSP.append(30)
        defr.retaliatory_reduced += 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Hoo boy
    # https://feheroes.fandom.com/wiki/Regarding_an_Issue_with_the_Description_of_the_Guardian%27s_Bow_Skill_and_How_It_Will_Be_Addressed_(Notification)
    atkIgreneTriggered = False
    defIgreneTriggered = False

    # Guardian's Bow (Base) - Igrene
    if "what the hell????" in atkSkills and atkStats[SPD] + atkPhantomStats[SPD] > defStats[SPD] + defPhantomStats[SPD]:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5
        atkIgreneTriggered = True

    if "what the hell????" in defSkills and defStats[SPD] + defPhantomStats[SPD] > atkStats[SPD] + atkPhantomStats[SPD]:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        defIgreneTriggered = True

    # Guardian's Bow (Refine Base) - Igrene
    if "yay its gone" in atkSkills:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.DR_first_hit_NSP.append(30)

    if "yay its gone" in defSkills and defStats[SPD] + defPhantomStats[SPD] > atkStats[SPD] + atkPhantomStats[SPD] - 7:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.DR_first_hit_NSP.append(30)

    # Guardian's Bow (Refine Eff) - Igrene
    if "igreneBoost" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 10))
        atkr.offensive_tempo = True
        defBonusesNeutralized[SPD] = True
        defBonusesNeutralized[DEF] = True

    if "igreneBoost" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 10))
        defr.offensive_tempo = True
        atkBonusesNeutralized[SPD] = True
        atkBonusesNeutralized[DEF] = True

    # Nabata Kunai (Base) - NI!Igrene
    if "igreneWarp" in atkSkills:
        atkr.brave = True

    # Sandglass Bow - DE!Igrene
    if "deIgreneBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.true_stat_damages.append((ATK, 15))
        atkr.true_sp += trunc(((attacker.specialMax * 10 + 10) / 100) * atkStats[SPD])

    if "deIgreneBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.true_stat_damages.append((ATK, 15))
        defr.true_sp += trunc(((defender.specialMax * 10 + 10) / 100) * atkStats[SPD])

    # Blade of Sands - DE!Juno
    if "bladeofsans" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.true_stat_damages.append((SPD, 20))

    if "bladeofsans" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.true_stat_damages.append((SPD, 20))

    # Prized Lance (Base) - Perceval
    if "percyBoost" in atkSkills and not defHPEqual100Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "percyBoost" in defSkills and not atkHPEqual100Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Prized Lance (Refine Base) - Perceval
    if "percyRefineBoost" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "percyRefineBoost" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Prized Lance (Refine Eff) - Perceval
    if "power wave" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 15))
        atkr.offensive_NFU = True
        atkr.offensive_tempo = True

    if "power wave" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 15))
        defr.offensive_NFU = True
        defr.offensive_tempo = True

    # Bun-Bun Baton (Refine Base) - SP!Fir
    if "firNFU" in atkSkills or "refineFirNFU" in atkSkills:
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True

        if atkHPGreaterEqual25Percent:
            atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
            atkr.offensive_tempo = True

    if "firNFU" in defSkills or "refineFirNFU" in defSkills:
        defr.defensive_NFU = True
        defr.offensive_NFU = True

        if defHPGreaterEqual25Percent:
            defCombatBuffs = [x + 4 for x in defCombatBuffs]
            defr.offensive_tempo = True

    # Bun-Bun Baton (Refine Eff) - SP!Fir
    if "refineFirNFU" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.damage_reduction_reduction.append(50)
        atkr.stat_scaling_DR.append((SPD, 40))

    if "refineFirNFU" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.damage_reduction_reduction.append(50)
        defr.stat_scaling_DR.append((SPD, 40))

    # Vassal-Saint Steel - A!Fir
    if "godSword?" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        if defender.specialMax != -1:
            defCombatBuffs[SPD] -= max(11 - defender.specialMax * 2, 3)
            defCombatBuffs[DEF] -= max(11 - defender.specialMax * 2, 3)
        else:
            defCombatBuffs[SPD] -= 3
            defCombatBuffs[DEF] -= 3

        atkr.DR_first_hit_NSP.append(40)

    if "godSword?" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        if attacker.specialMax != -1:
            atkCombatBuffs[SPD] -= max(11 - attacker.specialMax * 2, 3)
            atkCombatBuffs[DEF] -= max(11 - attacker.specialMax * 2, 3)
        else:
            atkCombatBuffs[SPD] -= 3
            atkCombatBuffs[DEF] -= 3

        defr.DR_first_hit_NSP.append(40)

    # Ilian Merc Lance - Noah
    if "insert Xenoblade 3 thingy" in atkSkills and len(atkAdjacentToAlly) <= 1:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages_from_foe.append((ATK, 15))

    if "insert Xenoblade 3 thingy" in defSkills and len(defAdjacentToAlly) <= 1:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages_from_foe.append((ATK, 15))

    # Tiger-Roar Axe (Base) - Dieck
    if "dieckBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        if defHPEqual100Percent:
            atkr.follow_ups_skill += 1

    if "dieckBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        if atkHPEqual100Percent:
            defr.follow_ups_skill += 1

    # Tiger-Roar Axe (Refine Base) - Dieck
    if "dieckRefineBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkr.TDR_stats.append((DEF, 20))

    if "dieckRefineBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defr.TDR_stats.append((DEF, 20))

    # Tiger-Roar Axe (Refine Eff) - Dieck
    if "tigerRoar" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + min(4 + len(atkFoeWithin3RowsCols) * 2, 10) for x in atkCombatBuffs]
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1
        atkr.sp_jump_first += 1

    if "tigerRoar" in defSkills:
        defCombatBuffs = [x + min(4 + len(defFoeWithin3RowsCols) * 2, 10) for x in defCombatBuffs]
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1
        defr.sp_jump_first += 1

    # Aureola (Base) - Guinivere
    if "guinivereBoost" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkCombatBuffs[RES] += 5
        atkr.disable_foe_hexblade = True
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self_and_allies", "within_2_spaces_self"))

    if "guinivereBoost" in defSkills:
        if defAllyWithin2Spaces:
            defCombatBuffs[ATK] += 5
            defCombatBuffs[SPD] += 5
            defCombatBuffs[RES] += 5
            defr.disable_foe_hexblade = True

        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self_and_allies", "within_2_spaces_self"))

    # Aureola (Refine Eff) - Guinivere
    if "guinivereStuff" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.offensive_tempo = True
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "guinivereStuff" in defSkills:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.offensive_tempo = True
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Radiant Aureola - L!Guinivere
    if "LGuinBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((RES, 20))
        atkr.TDR_stats.append((RES, 20))
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1
        atkr.disable_foe_hexblade = True

    if "LGuinBoost" in defSkills:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages.append((RES, 20))
        defr.TDR_stats.append((RES, 20))
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1
        defr.disable_foe_hexblade = True

    # Bern's New Way - L!Guinivere
    if "bernsNewWay" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "bernsNewWay" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Crimson Lance (Base) - Melady
    if "meladyBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))
        defr.follow_up_denials -= 1

    if "meladyBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))
        atkr.follow_up_denials -= 1

    # Crimson Lance (Refine Eff) - Melady
    if "crimsonLance" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((DEF, 20))
        atkr.follow_ups_skill += 1

    if "crimsonLance" in defSkills:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages.append((DEF, 20))
        defr.follow_ups_skill += 1

    # Convoy Dagger (Base) - Merlinus
    if "merlinusWarp" in atkSkills and atkAllyWithin3Spaces:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[SPD] -= 6
        defr.follow_up_denials -= 1

    if "merlinusWarp" in defSkills and defAllyWithin3Spaces:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[SPD] -= 6
        atkr.follow_up_denials -= 1

    # Convoy Dagger (Refine Base) - Merlinus
    if "merlinusRally" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[SPD] -= 6
        atkr.DR_all_hits_NSP.append(40)

    if "merlinusRally" in defSkills:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[SPD] -= 6
        defr.DR_all_hits_NSP.append(40)

    # Dragon Bouquet (Base) - BR!Sophia
    if "brSophiaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1

    if "brSophiaBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1

    # Wyvern Lance (Base) - Galle
    if "galleField" in atkSkills: atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))
    if "galleField" in defSkills: defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Wyvern Lance (Refine Base) - Galle
    if "wyvernLance" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 5 + trunc(0.15 * atkStats[DEF])
        defCombatBuffs[DEF] -= 5 + trunc(0.15 * atkStats[DEF])
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "wyvernLance" in defSkills:
        atkCombatBuffs[ATK] -= 5 + trunc(0.15 * defStats[DEF])
        atkCombatBuffs[DEF] -= 5 + trunc(0.15 * defStats[DEF])
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Runeaxe (Base) - Narcian
    if "runeaxeHeal" in atkSkills: atkr.all_hits_heal += 7
    if "runeaxeHeal" in defSkills: defr.all_hits_heal += 7

    # Fimbulvetr (Base) - Brunnya
    if "brunnyaBoost" in atkSkills and (attacker.hasPenalty() or not atkHPEqual100Percent):
        atkPenaltiesNeutralized = [True] * 5
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "brunnyaBoost" in defSkills and (defender.hasPenalty() or not defHPEqual100Percent):
        defPenaltiesNeutralized = [True] * 5
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Fimbulvetr (Refine Base) - Brunnya
    if "brunnyaRefineBoost" in atkSkills and (attacker.hasPenalty() or defHPGreaterEqual75Percent or not atkHPEqual100Percent):
        atkPenaltiesNeutralized = [True] * 5
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "brunnyaRefineBoost" in defSkills and (defender.hasPenalty() or atkHPGreaterEqual75Percent or not defHPEqual100Percent):
        defPenaltiesNeutralized = [True] * 5
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Fimbulvetr (Refine Eff) - Brunnya
    if "brunnyaWhatTheHell" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defCombatBuffs[ATK] -= max(10 - (defender.specialMax * 2), 2) if defender.specialMax != -1 else 2
        defCombatBuffs[RES] -= max(10 - (defender.specialMax * 2), 2) if defender.specialMax != -1 else 2

        for ally in atkAllyWithin3Spaces:
            if attacker.isSupportOf(ally) and not disableSupportEffects:
                atkr.follow_ups_skill += 1
                break

    if "brunnyaWhatTheHell" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkCombatBuffs[ATK] -= max(10 - (attacker.specialMax * 2), 2) if attacker.specialMax != -1 else 2
        atkCombatBuffs[RES] -= max(10 - (attacker.specialMax * 2), 2) if attacker.specialMax != -1 else 2

        for ally in defAllyWithin3Spaces:
            if defender.isSupportOf(ally) and not disableSupportEffects:
                defr.follow_ups_skill += 1
                break

    # Demonic Breath (Base, Refine Base) - Idunn
    if ("idunnBoost" in atkSkills or "idunnRefineBoost" in atkSkills) and (attacker.hasPenalty() or not atkHPEqual100Percent):
        atkPenaltiesNeutralized = [True] * 5
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if ("idunnBoost" in defSkills and (defender.hasPenalty() or not defHPEqual100Percent)) or "idunnRefineBoost" in defSkills:
        defPenaltiesNeutralized = [True] * 5
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Demonic Breath (Refine Eff) - Idunn
    if "idunnDR" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        defCombatBuffs[ATK] -= 5

    if "idunnDR" in defSkills:
        defCombatBuffs[ATK] += 5
        atkCombatBuffs[ATK] -= 5

    # Zephyr Breath (Base) - SP!Idunn
    # Not exactly sure if interaction with bonuses is correct
    if "spIdunnBoost" in atkSkills and ((sum(attacker.buffs) and AtkPanicFactor != -1) or atkAllyWithin2Spaces):
        atkPenaltiesNeutralized = [True] * 5
        defCombatBuffs[ATK] -= 6
        defr.follow_up_denials -= 1

    if "spIdunnBoost" in defSkills and ((sum(defender.buffs) and DefPanicFactor != -1) or defAllyWithin2Spaces):
        defPenaltiesNeutralized = [True] * 5
        atkCombatBuffs[ATK] -= 6
        atkr.follow_up_denials -= 1

    # Zephyr Breath (Refine Base) - SP!Idunn
    if "spIdunnBoost" in atkSkills and (attacker.hasBonus() or atkAllyWithin2Spaces):
        atkPenaltiesNeutralized = [True] * 5
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[SPD] -= 4
        defCombatBuffs[DEF] -= 4
        defCombatBuffs[RES] -= 4
        defr.follow_up_denials -= 1

    if "spIdunnBoost" in defSkills and (defender.hasBonus() or defAllyWithin2Spaces):
        defPenaltiesNeutralized = [True] * 5
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[SPD] -= 4
        atkCombatBuffs[DEF] -= 4
        atkCombatBuffs[RES] -= 4
        atkr.follow_up_denials -= 1

    # Zephyr Breath (Refine Eff) - SP!Idunn
    if "To your house? In 3D Land?" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs = [x - 4 for x in defCombatBuffs]
        atkr.TDR_first_strikes += 5
        atkr.stat_scaling_DR.append((RES, 40))

    if "To your house? In 3D Land?" in defSkills:
        atkCombatBuffs = [x - 4 for x in atkCombatBuffs]
        defr.TDR_first_strikes += 5
        defr.stat_scaling_DR.append((RES, 40))

    # Dew Dragonstone (Base) - A!Idunn
    if "aIdunnBoost" in atkSkills and atkAllyWithin3Spaces:
        defCombatBuffs = [x - 5 for x in defCombatBuffs]
        atkPenaltiesNeutralized = [True] * 5
        defr.follow_up_denials -= 1

    if "aIdunnBoost" in defSkills and defAllyWithin3Spaces:
        atkCombatBuffs = [x - 5 for x in atkCombatBuffs]
        defPenaltiesNeutralized = [True] * 5
        atkr.follow_up_denials -= 1

    # Staff of the Saint (Refine) - Elimine
    if "the BONUS she gives in mario kart DOUBLE dash" in atkSkills:
        if atkAllyWithin3Spaces:
            atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
            atkr.offensive_NFU = True
            atkr.defensive_NFU = True
            atkr.true_stat_damages.append((RES, 20))

        if defHPGreaterEqual75Percent:
            atkCombatBuffs = [x + min(len(atkAllyWithin3Spaces) * 2 + 5, 11) for x in atkCombatBuffs]
            atkPenaltiesNeutralized = [True] * 5
            atkr.spGainOnAtk += 1
            atkr.spGainWhenAtkd += 1

    if "the BONUS she gives in mario kart DOUBLE dash" in defSkills:
        if defAllyWithin3Spaces:
            defCombatBuffs = [x + 5 for x in defCombatBuffs]
            defr.offensive_NFU = True
            defr.defensive_NFU = True
            defr.true_stat_damages.append((RES, 20))

        defCombatBuffs = [x + min(len(defAllyWithin3Spaces) * 2 + 5, 11) for x in defCombatBuffs]
        defPenaltiesNeutralized = [True] * 5
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Holy Ground+ - Elimine
    if "holyGroundPlus" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkCombatBuffs[RES] += 5
        atkr.DR_all_hits_NSP.append(30)
        atkr.TDR_first_strikes += 7
        atkr.sp_jump_first += 1

    if "holyGroundPlus" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defCombatBuffs[RES] += 5
        defr.DR_all_hits_NSP.append(30)
        defr.TDR_first_strikes += 7
        defr.sp_jump_first += 1

    if "holyGroundPlus_f" in atkSkills:
        atkr.TDR_first_strikes += atkSkills["holyGroundPlus_f"] * 7
        atkr.sp_jump_foe_first += atkSkills["holyGroundPlus_f"]

    if "holyGroundPlus_f" in defSkills:
        defr.TDR_first_strikes += defSkills["holyGroundPlus_f"] * 7
        defr.sp_jump_foe_first += defSkills["holyGroundPlus_f"]

    # BLAZING BLADE

    # Ardent Durandal (Refine Base) - L!Eliwood
    if "elistats" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "elistats" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Ardent Durandal (Refine Eff) - L!Eliwood
    if "hamburger" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defBonusesNeutralized = [True] * 5
        atkr.true_stat_damages_from_foe.append((DEF, 15))

    if "hamburger" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkBonusesNeutralized = [True] * 5
        defr.true_stat_damages_from_foe.append((DEF, 15))

    # Nini's Ice Lance (Refine Base) - B!Eliwood
    if "niniRef" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.offensive_NFU = True

    if "niniRef" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.offensive_NFU = True

    # Nini's Ice Lance (Refine Eff) - B!Eliwood
    if "nininiRef" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.stat_scaling_DR.append((SPD, 40))

    if "nininiRef" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.stat_scaling_DR.append((SPD, 40))

    # Fiery War Sword (Base) - CH!Eliwood
    if "fieryEliSword" in atkSkills:
        atkCombatBuffs = [x + min(5 + len(attacker.statusPos) * 3, 17) for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.DR_first_hit_NSP.append(40)

    if "fieryEliSword" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + min(5 + len(attacker.statusPos) * 3, 17) for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.DR_first_hit_NSP.append(40)

    # Mulagir (Refine Eff) - B!Lyn
    if "blynBoost" in atkSkills and atkStats[SPD] + atkPhantomStats[SPD] > defStats[SPD] + defPhantomStats[SPD]:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "blynBoost" in defSkills and defStats[SPD] + defPhantomStats[SPD] > atkStats[SPD] + atkPhantomStats[SPD]:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Sacae's Blessing - B!Lyn
    if "sacaeSweep" in atkSkills and defender.wpnType in ["Sword", "Lance", "Axe"]:
        cannotCounter = True

    # Swift Mulagir (Base) - L!Lyn
    if "lynBoost" in atkSkills and len(atkAllyWithin2Spaces) > len(atkFoeWithin2Spaces) - 1:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "lynBoost" in defSkills and len(defAllyWithin2Spaces) > len(defFoeWithin2Spaces) - 1:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Swift Mulagir (Refine Base) - L!Lyn
    if "betterLynBoost" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "betterLynBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Swift Mulagir (Refine Eff) - L!Lyn
    if "i got her from my first AHR summon and foddered her immediately" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.true_stat_damages.append((SPD, 15))

    if "i got her from my first AHR summon and foddered her immediately" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.true_stat_damages.append((SPD, 15))

    # Deep-Blue Bow (Base) - SU!Lyn
    if "summerLynBoost" in atkSkills and defHPEqual100Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    # Deep-Blue Bow (Refine Base) - SU!Lyn
    if "summerLynRefine" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.offensive_tempo = True

    if "summerLynRefine" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.offensive_tempo = True

    # Deep-Blue Bow (Refine Eff) - SU!Lyn
    if "summerLynSweep" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "summerLynSweep" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Laws of Sacae - L!Lyn
    # No, like legitimately what were they going for in this kit when she first released? She has a skill that forces enemy phase, which she doesn't seem likely to survive with
    # 21/27 defenses, and boy o boy does that +3 visible Res from the weapon help! She comes with Desperation 3 for player phase so she can do something both phases I guess?
    # Atk/Spd boosts for herself in the weapon, in her weapon, Spd/Def/Res stat boosts in her assist and C skill for support, she's trying to do everything at once and
    # can't focus on just killing the foe!!! DEAD ON ARRIVAL GOT DAMNIT!!!!!!
    if "What were they cooking???" in defSkills and len(defAllyWithin2Spaces) >= 2:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Laws of Sacae II - L!Lyn
    if "That's a bit better" in atkSkills:
        atkCombatBuffs = [x + 6 for x in atkCombatBuffs]

    if "That's a bit better" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 6 for x in atkCombatBuffs]

    # Tailwind Shuriken (Refine Base) - NI!Lyn
    if "ninjalynrefineBoost" in atkSkills:
        atkr.brave = True

        if atkHPGreaterEqual25Percent:
            atkCombatBuffs[ATK] += min(len(atkAllyWithin3RowsCols) * 2, 6)
            atkCombatBuffs[SPD] += min(len(atkAllyWithin3RowsCols) * 2, 6)

    if "ninjalynrefineBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += min(len(defAllyWithin3RowsCols) * 2, 6)
        defCombatBuffs[SPD] += min(len(defAllyWithin3RowsCols) * 2, 6)

    # Tailwind Shuriken (Refine Eff) - NI!Lyn
    if "fwam" in atkSkills and atkHPGreaterEqual25Percent: atkr.true_stat_damages.append((SPD, 20))
    if "fwam" in defSkills and defHPGreaterEqual25Percent: defr.true_stat_damages.append((SPD, 20))

    if "reinHalfDR_f" in atkSkills:
        for i in range(0, atkSkills["reinHalfDR_f"]):
            defr.damage_reduction_reduction.append(50)

    if "reinHalfDR_f" in defSkills:
        for i in range(0, defSkills["reinHalfDR_f"]):
            atkr.damage_reduction_reduction.append(50)

    # Firelight Lance (Base) - FF!Lyn
    if "flamingLyn" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages_from_foe.append((ATK, 15))
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self_and_allies", "within_4_spaces_self"))

    if "flamingLyn" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages_from_foe.append((ATK, 15))
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self_and_allies", "within_4_spaces_self"))

    # Verdict of Sacae - FF!Lyn
    if "fiyaaa" in atkSkills and atkAllyWithin4Spaces:
        atkCombatBuffs = [x + min(4 + len(atkAllyWithin4Spaces) * 4, 12) for x in atkCombatBuffs]
        atkr.true_finish += 5
        atkr.finish_mid_combat_heal += 7

    if "fiyaaa" in defSkills and defAllyWithin4Spaces:
        defCombatBuffs = [x + min(4 + len(defAllyWithin4Spaces) * 4, 12) for x in defCombatBuffs]
        defr.true_finish += 5
        defr.finish_mid_combat_heal += 7

    # Lady's Bow - E!Lyn
    if "eLynBoost" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 6 + trunc(0.20 * atkStats[SPD])
        atkCombatBuffs[SPD] += 6 + trunc(0.20 * atkStats[SPD])
        atkr.true_all_hits += 7
        atkr.damage_reduction_reduction.append(50)

    if "eLynBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 6 + trunc(0.20 * defStats[SPD])
        defCombatBuffs[SPD] += 6 + trunc(0.20 * defStats[SPD])
        defr.true_all_hits += 7
        defr.damage_reduction_reduction.append(50)

    if Status.PreemptPulse in attacker.statusPos: atkr.sp_jump_first += 1
    if Status.PreemptPulse in defender.statusPos: defr.sp_jump_first += 1

    if "preempt" in atkSkills: atkr.sp_jump_first += 1
    if "preempt" in defSkills: defr.sp_jump_first += 1

    # Emblem Lyn Style
    if style == "EMBLEM-LYN":
        atkPostCombatEffs[UNCONDITIONAL].append(("disable_emblem", 2, "self", "one"))

    # Lyn Ring
    if "sweep across" in atkSkills:
        atkr.true_sp += attacker.specialMax * 4

    if "sweep across" in defSkills:
        defr.true_sp += defender.specialMax * 4

    # Florina's Lance (Refine Eff) - Florina
    if "closeSpectrum" in defSkills and attacker.wpnType in MELEE_WEAPONS:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # New-Height Bow (Base) - A!Florina
    if "aFlorinaBoost" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.true_stat_damages.append((SPD, 15))

    if "aFlorinaBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.true_stat_damages.append((SPD, 15))

    # Jolly Jade Lance (Base) - Sain
    if "jolly!" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

    if "jolly!" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

    # Morph Fimbulvetr (Base) - Limstella
    if "limstellaBoost" in atkSkills and atkAllyWithin3Spaces:
        defCombatBuffs[ATK] -= 8
        defCombatBuffs[RES] -= 8

        atkCombatBuffs[ATK] += max([ally.get_total_buff(ATK) + ally.get_total_buff(RES) for ally in atkAllyWithin3Spaces])
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 20, "allies", "nearest_self"))

    if "limstellaBoost" in defSkills and defAllyWithin3Spaces:
        atkCombatBuffs[ATK] -= 8
        atkCombatBuffs[RES] -= 8

        defCombatBuffs[ATK] += max([ally.get_total_buff(ATK) + ally.get_total_buff(RES) for ally in defAllyWithin3Spaces])
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 20, "allies", "nearest_self"))

    # Berserk Armads (Refine Eff) - Hector/V!Hector
    if "oho ono" in atkSkills and defHPEqual100Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.surge_heal += trunc(atkStats[HP] * 0.30)

    if "oho ono" in defSkills:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.surge_heal += trunc(defStats[HP] * 0.30)

    # Thunder Armads (Base) - L!Hector
    if "hectorFUDenial" in atkSkills and len(atkAllyWithin2Spaces) > len(atkFoeWithin2Spaces) - 1:
        defr.follow_up_denials -= 1
    if "hectorFUDenial" in defSkills and len(defAllyWithin2Spaces) > len(defFoeWithin2Spaces) - 1:
        atkr.follow_up_denials -= 1

    # Thunder Armads (Refine Base) - L!Hector
    if "hectorBoost" in atkSkills and atkAllyWithin3Spaces:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        defr.follow_up_denials -= 1

    if "hectorBoost" in defSkills and defAllyWithin3Spaces:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        atkr.follow_up_denials -= 1

    # Thunder Armads (Refine Eff) - L!Hector
    if "d'oho" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.DR_first_hit_NSP.append(40)

    if "d'oho" in defSkills:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.DR_first_hit_NSP.append(40)

    # Maltet (Base) - B!Hector
    if "hectorFollowUp" in defSkills and defHPGreaterEqual50Percent:
        defr.follow_ups_skill += 1

    # Maltet (Refine Base) - B!Hector
    if "refHectorFollowUp" in defSkills and defHPGreaterEqual25Percent:
        defPenaltiesNeutralized = 5 * [True]
        defr.follow_ups_skill += 1

    # Maltet (Refine Eff) - B!Hector
    if "hectorDenial?" in atkSkills and defHPEqual100Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[DEF] -= 6
        defr.follow_up_denials -= 1

    if "hectorDenial?" in defSkills:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[DEF] -= 6
        atkr.follow_up_denials -= 1

    # Conjurer Curios (Base/Refine Base) - H!Hector
    if ("curiosBoost" in atkSkills or "reduFU" in atkSkills) and (turn % 2 == 1 or not defHPEqual100Percent):
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if ("curiosBoost" in defSkills or "reduFU" in defSkills) and (turn % 2 == 1 or not atkHPEqual100Percent):
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Conjurer Curios (Refine Eff) - H!Hector
    if "oho dad" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defCombatBuffs[ATK] -= math.trunc(atkStats[ATK] * 0.1)
        defCombatBuffs[DEF] -= math.trunc(atkStats[ATK] * 0.1)

        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "oho dad" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkCombatBuffs[ATK] -= math.trunc(defStats[ATK] * 0.1)
        atkCombatBuffs[DEF] -= math.trunc(defStats[ATK] * 0.1)

        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Valiant War Axe (Base) - CH!Hector
    if "Burger King D Donkey Kong eat Burger King BK" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[DEF] -= 6
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1
        atkr.DR_all_hits_NSP.append(30)

        if atkAllyWithin3Spaces:
            if defender.specialMax != -1:
                defCombatBuffs[ATK] -= max(12 - defender.specialMax * 2, 4)
            else:
                defCombatBuffs[ATK] -= 4

    if "Burger King D Donkey Kong eat Burger King BK" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[DEF] -= 6
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1
        defr.DR_all_hits_NSP.append(30)

        if defAllyWithin3Spaces:
            if attacker.specialMax != -1:
                atkCombatBuffs[ATK] -= max(12 - attacker.specialMax * 2, 4)
            else:
                atkCombatBuffs[ATK] -= 4

    # Ostia's Heart - CH!Hector
    if "ostiasHeart" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 8
        defCombatBuffs[DEF] -= 8
        atkr.all_hits_heal += 7

    if "ostiasHeart" in defSkills:
        atkCombatBuffs[ATK] -= 8
        atkCombatBuffs[DEF] -= 8
        defr.all_hits_heal += 7

    # Total War Tome (Base) - CH!Mark
    if "oh hi mark" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs = [x - 5 for x in defCombatBuffs]
        atkr.follow_ups_skill += 1
        if any([foe.get_penalty_total() < 0 for foe in defAllyWithin2Spaces]):
            atkr.offensive_tempo = True

    if "oh hi mark" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs = [x - 5 for x in atkCombatBuffs]
        defr.follow_ups_skill += 1
        if any([foe.get_penalty_total() < 0 for foe in atkAllyWithin2Spaces]):
            defr.offensive_tempo = True

    # Mystic War Staff (Base) - CH!Lucius
    if "chLuciusBoost" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[RES] += 6
        atkr.follow_ups_skill += 1

    if "chLuciusBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[RES] += 6
        defr.follow_ups_skill += 1

    # Gusty War Bow (Base) - CH!Rebecca
    if "chRebeccaBoost" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        if defender.wpnType in BEAST_WEAPONS or (defender.move == 1 or defender.move == 2) and defender.wpnType in RANGED_WEAPONS:
            atkr.DR_first_hit_NSP.append(60)
        else:
            atkr.DR_first_hit_NSP.append(30)

        atkr.true_finish += 7

    if "chRebeccaBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        if attacker.wpnType in BEAST_WEAPONS or (attacker.move == 1 or attacker.move == 2) and attacker.wpnType in RANGED_WEAPONS:
            defr.DR_first_hit_NSP.append(60)
        else:
            defr.DR_first_hit_NSP.append(30)

        defr.true_finish += 7

    # Stout Tomahawk (Refine Eff) - Dorcas
    if "mutton idk" in atkSkills:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        defBonusesNeutralized = [True] * 5

    if "mutton idk" in defSkills and defAllyWithin2Spaces:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        atkBonusesNeutralized = [True] * 5

    # Deathly Dagger (Refine) - Jaffar
    if "jaffarDmg" in atkSkills: atkPostCombatEffs[2].append(("damage", 10, "foe_and_foes_allies", "within_2_spaces_foe"))
    if "jaffarDmg" in defSkills: defPostCombatEffs[2].append(("damage", 10, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Deathly Dagger (Refine +Eff) - Jaffar
    if "magicDenial" in atkSkills and defender.wpnType in TOME_WEAPONS:
        cannotCounter = True

    # Giga Excalibur (Refine Base) - P!Nino
    if "ninoDmg" in atkSkills:
        atkr.true_stat_damages.append((SPD, 20))
    if "ninoDmg" in defSkills:
        defr.true_stat_damages.append((SPD, 20))

    # Giga Excalibur (Refine Eff) - P!Nino
    if "doing her best" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4

    if "doing her best" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[SPD] += 4

    # Child's Compass (Base) - DE!Nino
    if "deNinoBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkCombatBuffs[ATK] += min(len(attacker.statusPos) * 4, 16)
        atkCombatBuffs[SPD] += min(len(attacker.statusPos) * 4, 16)
        atkr.DR_sp_trigger_next_only_NSP.append(50)

    if "deNinoBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defCombatBuffs[ATK] += min(len(defender.statusPos) * 4, 16)
        defCombatBuffs[SPD] += min(len(defender.statusPos) * 4, 16)
        defr.DR_sp_trigger_next_only_NSP.append(50)

    # Bouncin' Ball - SU!Nino
    if "suNinoBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6 + trunc(0.20 * atkStats[SPD])
        atkCombatBuffs[SPD] += 6 + trunc(0.20 * atkStats[SPD])

        X = len(attacker.statusPos) + len(defender.statusNeg)
        atkr.true_all_hits += min(X * 5, 25)
        atkr.damage_reduction_reduction.append(50)
        atkr.self_desperation = True

    if "suNinoBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6 + trunc(0.20 * defStats[SPD])
        defCombatBuffs[SPD] += 6 + trunc(0.20 * defStats[SPD])

        X = len(defender.statusPos) + len(attacker.statusNeg)
        defr.true_all_hits += min(X * 5, 25)
        defr.damage_reduction_reduction.append(50)

    # Black Fang Bond - SU!Nino
    if "blackFangBond" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.true_all_hits += 7

    if "blackFangBond" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.true_all_hits += 7

    # Regal Blade (Base/Refine) - Lloyd
    if "garbageSword" in atkSkills and defHPEqual100Percent:
        atkCombatBuffs[ATK] += atkSkills["garbageSword"]
        atkCombatBuffs[SPD] += atkSkills["garbageSword"]

    if "garbageSword" in defSkills and atkHPEqual100Percent:
        defCombatBuffs[ATK] += defSkills["garbageSword"]
        defCombatBuffs[SPD] += defSkills["garbageSword"]

    # Regal Blade (Refine Eff) - Lloyd
    if "Hi Nino" in atkSkills and any(ally.wpnType in TOME_WEAPONS and ally.move == 0 for ally in atkAllyWithin2Spaces):
        atkCombatBuffs = [x + 3 for x in atkCombatBuffs]

    if "Hi Nino" in defSkills and any(ally.wpnType in TOME_WEAPONS and ally.move == 0 for ally in defAllyWithin2Spaces):
        defCombatBuffs = [x + 3 for x in defCombatBuffs]

    # Dead-Wolf Blade - FA!Lloyd
    if "LaLoyd" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 + trunc(0.15 * atkStats[SPD]) for x in atkCombatBuffs]
        atkr.DR_first_strikes_NSP.append(40)
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "LaLoyd" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 + trunc(0.15 * defStats[SPD]) for x in defCombatBuffs]
        defr.DR_first_strikes_NSP.append(40)
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Fanged Basilikos (Base) - Linus
    if "linusBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "linusBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Crow's Crystal (Base) - DE!Ursula
    if "deUrsulaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.offensive_NFU = True

    if "deUrsulaBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.offensive_NFU = True

    # Dead-Crow Tome - Ursula
    if "faUrsulaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6 + trunc(0.20 * atkStats[SPD])
        atkCombatBuffs[SPD] += 6 + trunc(0.20 * atkStats[SPD])
        atkr.true_stat_damages.append((SPD, 20))
        atkr.offensive_NFU = True

        if atkHPEqual100Percent:
            atkr.offensive_tempo = True

    if "faUrsulaBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6 + trunc(0.20 * defStats[SPD])
        defCombatBuffs[SPD] += 6 + trunc(0.20 * defStats[SPD])
        defr.true_stat_damages.append((SPD, 20))
        defr.offensive_NFU = True

        if defHPEqual100Percent:
            defr.offensive_tempo = True

    # Hurricane Dagger - Legault
    if "ghetsis holding a ducklett" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[SPD] += 5
        atkCombatBuffs[ATK] += 5
        atkr.stat_scaling_DR.append((SPD, 30))

    if "ghetsis holding a ducklett" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[SPD] += 5
        atkCombatBuffs[ATK] += 5
        defr.stat_scaling_DR.append((SPD, 30))

    # Vassal's Blade (Refine Base) - Karla
    if "vassalBlade" in atkSkills:
        atkCombatBuffs[SPD] += 5
        atkr.true_stat_damages.append((SPD, 15))

    if "vassalBlade" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[SPD] += 5
        defr.true_stat_damages.append((SPD, 15))

    if "Barry B. Benson" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True

    if "Barry B. Benson" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.defensive_NFU = True
        defr.offensive_NFU = True

    # Dryblade Lance (Base) - DE!Karla
    if "hey squidward" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

    if "hey squidward" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

    # Sisterly War Axe (Base) - SP!Karla
    if "DK, are you gonna eat BK after you win this?" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.always_pierce_DR = True
        if defender.getSpecialType() == "Defense":
            defr.special_disabled = True

    if "DK, are you gonna eat BK after you win this?" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.always_pierce_DR = True
        if attacker.getSpecialType() == "Defense":
            atkr.special_disabled = True

    # Ancient Codex (Base) - Canas
    if "canasBoost" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[RES] += 5

    if "canasBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[RES] += 5

    # Ancient Codex (Refine Eff) - Canas
    if "canasPulse" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[RES] += 5

    if "canasPulse" in atkSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[RES] += 5

    # Troubling Blade - Harken
    if "bomba" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.DR_first_hit_NSP.append(40)
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "bomba" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.DR_first_hit_NSP.append(40)
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Guarding Lance - Isadora
    if "isadoraBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.DR_first_hit_NSP.append(40)

    if "isadoraBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.DR_first_hit_NSP.append(40)

    # Airborne Spear (Base) - Fiora
    if "fioraBoost" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.stat_scaling_DR.append((RES, 40))

    if "fioraBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.stat_scaling_DR.append((RES, 40))

    if "FIORAAAAAA" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.offensive_tempo = True
        atkr.defensive_tempo = True
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "FIORAAAAAA" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.offensive_tempo = True
        defr.defensive_tempo = True
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Constant Dagger (Base) - Leila
    if "leilaSwap" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

        if atkWithin2SpaceOfSupportPartner:
            cannotCounter = True

    # Constant Dagger (Refine Base) - Leila
    if "leilaRefineSwap" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.true_stat_damages.append((SPD, 10))

        if atkWithin2SpaceOfSupportPartner:
            cannotCounter = True

    if "leilaRefineSwap" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.true_stat_damages.append((SPD, 10))

    # Constant Dagger (Refine Eff) - Leila
    if "leilaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.spGainWhenAtkd += 1
        atkr.spGainOnAtk += 1
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 7, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "leilaBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.spGainWhenAtkd += 1
        defr.spGainOnAtk += 1

    # Soothing Scent (Base) - TH!Leila
    if "thLeilaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 10, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "thLeilaBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 10, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Arcane Sly Knife
    if "slyKnife" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + max(5, min(trunc(0.25 * defStats[ATK]) - 4, 14)) for x in atkCombatBuffs]
        defBonusesNeutralized[SPD] = True
        defBonusesNeutralized[DEF] = True
        atkr.true_stat_damages.append((ATK, 15))
        atkr.TDR_first_strikes += 7
        atkr.sp_jump_first += 1

    if "slyKnife" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + max(5, min(trunc(0.25 * atkStats[ATK]) - 4, 14)) for x in defCombatBuffs]
        atkBonusesNeutralized[SPD] = True
        atkBonusesNeutralized[DEF] = True
        defr.true_stat_damages.append((ATK, 15))
        defr.TDR_first_strikes += 7
        defr.sp_jump_first += 1

    # Dark Perfume - R!Leila
    if "darkPerfume" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.true_stat_damages.append((SPD, 20))
        atkr.offensive_tempo = True

    if "darkPerfume" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.true_stat_damages.append((SPD, 20))
        defr.offensive_tempo = True

    # Corsair Cleaver - Fargus
    if "donkey kong is versing jokerrrrrr" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkr.offensive_tempo = True
        atkr.defensive_tempo = True

    if "donkey kong is versing jokerrrrrr" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defr.offensive_tempo = True
        defr.defensive_tempo = True

    # Sacaen-Wolf Bow (Base) - Rath
    if "rathBoost" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.DR_first_hit_NSP.append(30)

    if "rathBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.DR_first_hit_NSP.append(30)

    # Sacaen-Wolf Bow (Refine Eff) - Rath
    if "shrek5" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkr.offensive_tempo = True

    if "shrek5" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defr.offensive_tempo = True

    # Hyperion Lance (Base) - Heath
    if "heathBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defCombatBuffs[ATK] -= trunc(0.10 * atkStats[DEF])
        defCombatBuffs[SPD] -= trunc(0.10 * atkStats[DEF])
        defCombatBuffs[DEF] -= trunc(0.10 * atkStats[DEF])
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "heathBoost" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkCombatBuffs[ATK] -= trunc(0.10 * defStats[DEF])
        atkCombatBuffs[SPD] -= trunc(0.10 * defStats[DEF])
        atkCombatBuffs[DEF] -= trunc(0.10 * defStats[DEF])
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Hyperion Lance (Refine Eff) - Heath
    if "tepig" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1

        if attacker.unitCombatInitiates == 0:
            atkr.DR_all_hits_NSP.append(40)
        else:
            atkr.DR_all_hits_NSP.append(20)

    if "tepig" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.follow_ups_skill += 1

        if defender.unitCombatInitiates == 0:
            defr.DR_all_hits_NSP.append(40)
        else:
            defr.DR_all_hits_NSP.append(20)

    # Hotshot Lance (Base) - Farina
    if "FLOWERS!!" in atkSkills and atkHPGreaterEqual25Percent:
        if attacker.flowers >= 5:
            atkCombatBuffs = [x + 7 for x in atkCombatBuffs]
        elif attacker.flowers == 4:
            atkCombatBuffs = [x + 6 for x in atkCombatBuffs]
        elif attacker.flowers == 3:
            atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        else:
            atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "FLOWERS!!" in defSkills and defHPGreaterEqual25Percent:
        if defender.flowers >= 5:
            defCombatBuffs = [x + 7 for x in defCombatBuffs]
        elif defender.flowers == 4:
            defCombatBuffs = [x + 6 for x in defCombatBuffs]
        elif defender.flowers == 3:
            defCombatBuffs = [x + 5 for x in defCombatBuffs]
        else:
            defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Tome of Reglay (Base) - Pent
    if "pentBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

    if "pentBoost" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

    # Tome of Reglay (Refine Base) - Pent
    if "pentRefine" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkCombatBuffs[DEF] += 5
        atkCombatBuffs[RES] += 5
        atkr.TDR_first_strikes += 7
        atkr.offensive_tempo = True
        atkr.defensive_tempo = True

    if "pentRefine" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defCombatBuffs[DEF] += 5
        defCombatBuffs[RES] += 5
        defr.TDR_first_strikes += 7
        defr.offensive_tempo = True
        defr.defensive_tempo = True

    # Tome of Reglay (Refine Eff) - Pent
    if "soPentsive" in atkSkills and atkHPGreaterEqual25Percent:
        if any([ally.isSupportOf(attacker) for ally in atkAllyWithin3Spaces]) and not disableSupportEffects:
            X = 11
        else:
            X = min(len(atkAllyWithin3Spaces) * 2 + 5, 11)

        atkCombatBuffs = [x + X for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))
        atkr.damage_reduction_reduction.append(50)

    if "soPentsive" in defSkills and defHPGreaterEqual25Percent:
        if any([ally.isSupportOf(defender) for ally in defAllyWithin3Spaces]) and not disableSupportEffects:
            X = 11
        else:
            X = min(len(defAllyWithin3Spaces) * 2 + 5, 11)

        defCombatBuffs = [x + X for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))
        defr.damage_reduction_reduction.append(50)

    # Noble Bow (Base) - Louise
    if "louiseBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + trunc(0.10 * atkStats[SPD]) for x in atkCombatBuffs]
        atkr.TDR_first_strikes += 7

    if "louiseBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + trunc(0.10 * atkStats[SPD]) for x in defCombatBuffs]
        defr.TDR_first_strikes += 7

    if "louiseHealDisable" in atkSkills:
        defr.disable_foe_healing = True
        defPostCombatEffs[UNCONDITIONAL].append(("disable_heal", 0, "foe", "one"))

    if "louiseHealDisable" in defSkills:
        atkr.disable_foe_healing = True
        atkPostCombatEffs[UNCONDITIONAL].append(("disable_heal", 0, "foe", "one"))

    # Noble Bow (Refine Eff) - Louise
    if "louiseStuff" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))
        atkr.sp_jump_first += 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "louiseStuff" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))
        defr.sp_jump_first += 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # General-to-Be (Base) - Erk
    if "erkWOW" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.damage_reduction_reduction.append(50)

    if "erkWOW" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.damage_reduction_reduction.append(50)

    # General-to-Be (Refine Eff) - Erk
    if "erkHESJUSTADEMOTE" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defBonusesNeutralized[SPD] = True
        defBonusesNeutralized[RES] = True
        atkr.true_stat_damages.append((SPD, 20))
        atkr.TDR_first_strikes += 7
        atkPostCombatEffs[GIVEN_UNIT_SURVIVED].append(("dv_flame", 1, "foe", "one"))

    # General-to-Be (Refine Eff) - Erk
    if "erkHESJUSTADEMOTE" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkBonusesNeutralized[SPD] = True
        atkBonusesNeutralized[RES] = True
        defr.true_stat_damages.append((SPD, 20))
        defr.TDR_first_strikes += 7

    # Fimbulvetr Morn (Base) - Sonia
    if "soniaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[RES] -= 6
        atkr.true_stat_damages.append((RES, 20))
        atkr.TDR_first_strikes += 7
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "soniaBoost" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[RES] -= 6
        defr.true_stat_damages.append((RES, 20))
        defr.TDR_first_strikes += 7
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Fimbulvetr Morn (Refine Eff) - Sonia
    if "yoink!" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[RES] -= 6
        atkr.follow_ups_skill += 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "yoink!" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[RES] -= 6
        defr.follow_ups_skill += 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if Status.EssenceDrain in attacker.statusPos:
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("essence_drain", 0, "foe_and_foes_allies", "within_2_spaces_foe"))

    if Status.EssenceDrain in defender.statusPos:
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("essence_drain", 0, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Enveloping Breath (Base) - FA!Ninian
    if "faNinianBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[SPD] += 6
        atkCombatBuffs[RES] += 6

    if "faNinianBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[SPD] += 6
        defCombatBuffs[RES] += 6

    # Faithful Breath (Base) - L!Ninian
    if "LNinianBoost" in atkSkills and atkHPCur / atkStats[HP] >= 0.40:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.offensive_NFU = True

    if "LNinianBoost" in defSkills and defHPCur / defStats[HP] >= 0.40:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

    # Spear - Vaida
    if "vaidaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(len(atkFoeWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((ATK, 10))
        atkr.TDR_stats.append((ATK, 10))

    if "vaidaBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(len(defFoeWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defr.true_stat_damages.append((ATK, 10))
        defr.TDR_stats.append((ATK, 10))

    # Blessed Aureola - Athos
    if "athosBoost" in atkSkills and atkAllyWithin3RowsCols:
        atkCombatBuffs[ATK] += 5 + trunc(0.20 * atkStats[RES])
        atkCombatBuffs[DEF] += 5 + trunc(0.20 * atkStats[RES])
        atkCombatBuffs[RES] += 5 + trunc(0.20 * atkStats[RES])
        atkr.true_stat_damages.append((RES, 20))
        atkr.sp_jump_first += 1

        if defender.wpnType in RANGED_WEAPONS:
            atkCombatBuffs[ATK] += 10

    if "athosBoost" in defSkills and defAllyWithin3RowsCols:
        defCombatBuffs[ATK] += 5 + trunc(0.20 * defStats[RES])
        defCombatBuffs[DEF] += 5 + trunc(0.20 * defStats[RES])
        defCombatBuffs[RES] += 5 + trunc(0.20 * defStats[RES])
        defr.true_stat_damages.append((RES, 20))
        defr.sp_jump_first += 1

        if attacker.wpnType in RANGED_WEAPONS:
            defCombatBuffs[ATK] += 10
            defr.vantage = True

    # Beyond Reason - Athos
    if "beyondReason" in atkSkills and defHPGreaterEqual75Percent:
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[RES] = True
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "beyondReason" in defSkills:
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[RES] = True
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Ereshkigal - Nergal
    if "My name is Nergal. I made the morphs. It was difficult to put the quintessence together." in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 6 + trunc(0.20 * atkStats[RES])
        defCombatBuffs[RES] -= 6 + trunc(0.20 * atkStats[RES])
        atkr.true_all_hits += min(len(attacker.statusPos) * 5, 25)
        atkr.TDR_all_hits += min(len(attacker.statusPos) * 3, 15)

        if atkSpTriggeredByAttack:
            atkr.sp_jump_first += min(len(attacker.statusPos), 3)

    if "My name is Nergal. I made the morphs. It was difficult to put the quintessence together." in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 6 + trunc(0.20 * defStats[RES])
        atkCombatBuffs[RES] -= 6 + trunc(0.20 * defStats[RES])
        defr.true_all_hits += min(len(defender.statusPos) * 5, 25)
        defr.TDR_all_hits += min(len(defender.statusPos) * 3, 15)

        if defSpTriggeredByAttack:
            defr.sp_jump_first += min(len(defender.statusPos), 3)

    # SACRED STONES

    # Sieglinde (Refine Eff) - Eirika
    if "bonusInheritor" in atkSkills:  # eirika, should be highest bonus for each given stat on allies within 2 spaces
        highest_stats = [0, 0, 0, 0, 0]
        for ally in atkAllyWithin2Spaces:
            ally_panic = Status.Panic in ally.statusNeg and Status.NullPanic not in ally.statusPos
            if ally_panic: continue

            i = 1
            while i < 5:
                cur_buff = ally.buffs[i]
                highest_stats[i] = max(highest_stats[i], cur_buff)
                i += 1

        i = 1
        while i < 5:
            atkCombatBuffs[i] += highest_stats[i]
            i += 1

    if "bonusInheritor" in defSkills:
        highest_stats = [0, 0, 0, 0, 0]
        for ally in defAllyWithin2Spaces:
            ally_panic = Status.Panic in ally.statusNeg and Status.NullPanic not in ally.statusPos
            if ally_panic: continue

            i = 1
            while i < 5:
                cur_buff = ally.buffs[i]
                highest_stats[i] = max(highest_stats[i], cur_buff)

                i += 1

        i = 1
        while i < 5:
            defCombatBuffs[i] += highest_stats[i]
            i += 1

    if "eirikaBook" in atkSkills and defHPEqual100Percent:
        atkCombatBuffs[ATK] += atkSkills["eirikaBook"]
        atkCombatBuffs[SPD] += atkSkills["eirikaBook"]

    if "eirikaBook" in defSkills and atkHPEqual100Percent:
        defCombatBuffs[ATK] += defSkills["eirikaBook"]
        defCombatBuffs[SPD] += defSkills["eirikaBook"]

    # Binding Reginleif (Base) - B!Eirika
    if "braveEirikaThing" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.DR_first_hit_NSP.append(30)
        atkr.offensive_NFU = True

    if "bEirikaRefine" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.DR_first_hit_NSP.append(30)

    # Binding Reginleif (Refine Base) - B!Eirika
    if "bEirikaRefine" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.DR_first_hit_NSP.append(30)
        atkr.offensive_NFU = True

    if "braveEirikaThing" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.DR_first_hit_NSP.append(40)
        defr.offensive_NFU = True

    # Binding Reginleif (Refine Eff) - B!Eirika
    if "Junior Mints" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defCombatBuffs[ATK] -= min(5 + len(defender.statusPos), 9)
        defCombatBuffs[SPD] -= min(5 + len(defender.statusPos), 9)
        defCombatBuffs[DEF] -= min(5 + len(defender.statusPos), 9)
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[SPD] = True
        defBonusesNeutralized[DEF] = True
        atkr.defensive_NFU = True

    if "Junior Mints" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkCombatBuffs[ATK] -= min(5 + len(attacker.statusPos), 9)
        atkCombatBuffs[SPD] -= min(5 + len(attacker.statusPos), 9)
        atkCombatBuffs[DEF] -= min(5 + len(attacker.statusPos), 9)
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[SPD] = True
        atkBonusesNeutralized[DEF] = True
        defr.defensive_NFU = True

    if "yup she has a book" in atkSkills and defHPEqual100Percent:
        defCombatBuffs = [x - 4 for x in defCombatBuffs]
        atkPenaltiesNeutralized = [True] * 5

    if "yup she has a book" in defSkills and atkHPEqual100Percent:
        atkCombatBuffs = [x - 4 for x in atkCombatBuffs]
        defPenaltiesNeutralized = [True] * 5

    if "stormSieglinde" in atkSkills and len(atkFoeWithin2Spaces) - 1 >= len(atkAllyWithin2Spaces):
        atkCombatBuffs[DEF] += 3
        atkCombatBuffs[RES] += 3
        atkr.spGainOnAtk += 1

    if "stormSieglinde" in defSkills and len(defFoeWithin2Spaces) - 1 >= len(defAllyWithin2Spaces):
        defCombatBuffs[DEF] += 3
        defCombatBuffs[RES] += 3
        defr.spGainOnAtk += 1

    if "stormSieglinde2" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "stormSieglinde2" in defSkills and not defAdjacentToAlly:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    if "Just Lean" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.stat_scaling_DR.append((SPD, 40))

    if "Just Lean" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.stat_scaling_DR.append((SPD, 40))

    if "renaisTwins" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

    if "renaisTwins" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

    # Caring Conch (Base) - SU!Eirika
    if "suEirikaBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.Guard, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "suEirikaBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.offensive_NFU = True
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.Guard, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Sisterly Axe (X!Eirika)
    if "who's vince?" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.TDR_stats.append((SPD, 20))
        atkr.damage_reduction_reduction.append(50)
        atkr.all_hits_heal += 7

    if "who's vince?" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + min(len(defAllyWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defr.TDR_stats.append((SPD, 20))
        defr.damage_reduction_reduction.append(50)
        defr.all_hits_heal += 7

    # Moonlit Bangle Q - X!Eirika
    if "moonlitBangleQ" in atkSkills:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.true_stat_damages_from_foe.append((ATK, 25))
        atkr.sp_jump_first += 1
        atkr.sp_jump_followup += 1
        atkr.offensive_tempo = True

    if "moonlitBangleQ" in defSkills:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.true_stat_damages_from_foe.append((ATK, 25))
        defr.sp_jump_first += 1
        defr.sp_jump_followup += 1
        defr.offensive_tempo = True


    # Azure Twin Edge - E!Eirika
    if "eEirikaBoost" in atkSkills:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]

        atkr.true_stat_damages.append((SPD, 20))
        atkr.TDR_first_stats.append((SPD, 20))
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "eEirikaBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + min(len(defAllyWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))
        defr.TDR_first_stats.append((SPD, 20))
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    if style == "WIND-SWORD":
        atkr.hexblade = True

    # Eirika Ring
    if "restore calm" in atkSkills:
        atkr.true_sp += attacker.specialMax * 4

        if attacker.unitCombatInitiates == 0 and attacker.wpnType in MELEE_WEAPONS and attacker.getSpecialType() != "AOE":
            atkr.brave = True

    if "restore calm" in defSkills:
        defr.true_sp += defender.specialMax * 4

        if defender.unitCombatInitiates == 0 and defender.wpnType in MELEE_WEAPONS and defender.getSpecialType() != "AOE":
            defr.brave = True

    # Siegmund (+Eff) - Ephraim
    if "FollowUpEph" in atkSkills and atkHPCur / atkStats[HP] > 0.90:
        atkr.follow_ups_skill += 1

    # Flame Siegmund (Base) - Ephraim, L!Ephraim
    if "flameEphFollowUp" in atkSkills and len(atkFoeWithin2Spaces) - 1 >= len(atkAllyWithin2Spaces):
        atkr.follow_ups_skill += 1

    if "flameEphFollowUp" in defSkills and len(defFoeWithin2Spaces) - 1 >= len(defAllyWithin2Spaces):
        defr.follow_ups_skill += 1

    # Flame Siegmund (Refine Base) - Ephraim, L!Ephraim
    if "refEphFU" in atkSkills:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[DEF] += 4
        atkr.follow_ups_skill += 1

    if "refEphFU" in defSkills and not defAdjacentToAlly:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[DEF] += 4
        defr.follow_ups_skill += 1

    # Flame Siegmund (Refine Eff) - Ephraim, L!Ephraim
    if "ephRefineSuper" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "ephRefineSuper" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Solar Brace II - L!Ephraim
    if "solarBraceII" in atkSkills:
        atkr.offensive_tempo = True
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 10, "self", "one"))

    if "solarBraceII" in defSkills:
        defr.offensive_tempo = True
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 10, "self", "one"))

    # Garm (Refine Eff) - B!Ephraim
    if "bEphBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.all_hits_heal += 7

    if "bEphBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.all_hits_heal += 7

    # Festive Siegmund (Refine Base) - WI!Ephraim
    if "festEph" in atkSkills and (not atkAdjacentToAlly or defHPGreaterEqual75Percent):
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "festEph" in defSkills and (not defAdjacentToAlly or atkHPGreaterEqual75Percent):
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Festive Siegmund (Refine Eff) - WI!Ephraim
    if "twoTurtleDoves" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5

    if "twoTurtleDoves" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5

    # Seafoam Splitter - SU!Ephraim
    if "DK BK DK's eating BK when he wins this" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[DEF] -= 6
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkr.DR_first_hit_NSP.append(40)

    if "DK BK DK's eating BK when he wins this" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[DEF] -= 6
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defr.DR_first_hit_NSP.append(40)

    # Sunlight Bangle - SU!Ephraim
    if "sunlightBangle" in atkSkills and len(atkAdjacentToAlly) <= 1:
        defCombatBuffs[ATK] -= min(4 + spaces_moved_by_atkr, 8)
        defCombatBuffs[DEF] -= min(4 + spaces_moved_by_atkr, 8)
        atkr.brave = True
        atkr.all_hits_heal += 7
        atkr.vantage = True

    if "sunlightBangle" in defSkills and len(defAdjacentToAlly) <= 1:
        atkCombatBuffs[ATK] -= min(4 + spaces_moved_by_atkr, 8)
        atkCombatBuffs[DEF] -= min(4 + spaces_moved_by_atkr, 8)
        defr.brave = True
        defr.all_hits_heal += 7

    # Righteous Lance - V!Ephraim
    if "Oh, I insist!" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= min(len(atkAllyWithin3Spaces) * 4 + 6, 14)
        defCombatBuffs[DEF] -= min(len(atkAllyWithin3Spaces) * 4 + 6, 14)
        atkr.DR_all_hits_NSP.append(30)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))
        atkr.sp_pierce_DR = True

    if "Oh, I insist!" in defSkills:
        atkCombatBuffs[ATK] -= min(len(defAllyWithin3Spaces) * 4 + 6, 14)
        atkCombatBuffs[DEF] -= min(len(defAllyWithin3Spaces) * 4 + 6, 14)
        defr.DR_all_hits_NSP.append(30)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))
        defr.sp_pierce_DR = True

    # Sunlit Bangle D - V!Ephraim
    if "sunlitBangleD" in atkSkills and atkHPGreaterEqual25Percent:
        atkr.vantage = True
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.offensive_tempo = True
        atkr.all_hits_heal += 7

    if "sunlitBangleD" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.offensive_tempo = True
        defr.all_hits_heal += 7

    # Nidhogg (Refine Eff) - Innes
    if "innesDenial" in atkSkills and defender.wpnType in MAGICAL_WEAPONS + DRAGON_WEAPONS:
        cannotCounter = True

    # Bow of Frelia (Base) - CH!Innes
    if "chInnesBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.true_sp += 7
        atkr.sp_pierce_DR = True

    if "chInnesBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.true_sp += 7
        defr.sp_pierce_DR = True

    # Bow of Frelia (Refine Base) - CH!Innes
    if "chInnesRefine" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkCombatBuffs[DEF] += 5
        atkCombatBuffs[DEF] += 5
        atkr.true_sp += 15
        atkr.sp_pierce_DR = True

    if "chInnesRefine" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defCombatBuffs[DEF] += 5
        defCombatBuffs[DEF] += 5
        defr.true_sp += 15
        defr.sp_pierce_DR = True

    # Bow of Frelia (Refine Eff) - CH!Innes
    if "c zachary chad" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.offensive_tempo = True

    if "c zachary chad" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.offensive_tempo = True

    # Vidofnir (Base) - Tana
    if "meleeStance" in defSkills and defender.wpnType in ["Sword", "Lance", "Axe"]:
        defCombatBuffs[DEF] += 7

    # Vidofnir (Refine Eff) - Tana
    if "tanaBoost" in atkSkills and (atkInfAlliesWithin2Spaces or atkArmAlliesWithin2Spaces):
        atkCombatBuffs[ATK] += 7
        atkCombatBuffs[SPD] += 7

    if "tanaBoost" in defSkills and (defInfAlliesWithin2Spaces or defArmAlliesWithin2Spaces):
        defCombatBuffs[ATK] += 7
        defCombatBuffs[SPD] += 7

    # Fruit of Iðunn (Refine Base) - SU!Tana
    if "SUTanaBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "SUTanaBoost" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Lance of Frelia (Base) - CH!Tana
    if "they fly now?" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkCombatBuffs[DEF] += 10
        atkCombatBuffs[RES] += 10

    if "they fly now?" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

    # Kindling Taiko (Base) - FF!Tana
    if "ffTanaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.offensive_NFU = True

        if defender.wpnType not in RED_WEAPONS:
            atkCombatBuffs[ATK] += trunc(0.20 * atkStats[ATK])
            defCombatBuffs[ATK] += trunc(0.20 * defStats[ATK])

    if "ffTanaBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.offensive_NFU = True

        if attacker.wpnType not in RED_WEAPONS:
            defCombatBuffs[ATK] += trunc(0.20 * defStats[ATK])
            atkCombatBuffs[ATK] += trunc(0.20 * atkStats[ATK])

    # Arcane Náströnd
    if "nastrond" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkr.DR_first_hit_NSP.append(30)

        if defender.specialMax != -1:
            atkCombatBuffs[ATK] += max(12 - (defender.specialMax * 2), 4)
        else:
            atkCombatBuffs[ATK] += 4

    if "nastrond" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defr.DR_first_hit_NSP.append(30)

        if attacker.specialMax != -1:
            defCombatBuffs[ATK] += max(12 - (attacker.specialMax * 2), 4)
        else:
            defCombatBuffs[ATK] += 4

    # Soaring Wings - R!Tana
    if "soaringWings" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[SPD] -= min(4 + spaces_moved_by_atkr, 8)
        defCombatBuffs[DEF] -= min(4 + spaces_moved_by_atkr, 8)

    if "soaringWings" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[SPD] -= min(4 + spaces_moved_by_atkr, 8)
        atkCombatBuffs[DEF] -= min(4 + spaces_moved_by_atkr, 8)

    # Snaking Sword - NY!Tana
    if "nyTanaBoost" in atkSkills:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))

    if "nyTanaBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + min(len(defAllyWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))

    # Heavenly Wings - NY!Tana
    if "heavenlyWings" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(5 + spaces_moved_by_atkr * 3, 14) for x in defCombatBuffs]
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "heavenlyWings" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(5 + spaces_moved_by_atkr * 3, 14) for x in atkCombatBuffs]
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Ivaldi (Refine Base) - L'Arachel
    if "laBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 3
        atkCombatBuffs[SPD] += 3
        atkCombatBuffs[RES] += 3

    if "laBoost" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 3
        defCombatBuffs[SPD] += 3
        defCombatBuffs[RES] += 3

    if "holyWomanBeatsYouSenseless" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[RES] -= 5
        atkPostCombatEffs[0].append(("heal", 7, "self", "one"))

    if "holyWomanBeatsYouSenseless" in defSkills and atkHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[RES] -= 5
        defPostCombatEffs[0].append(("heal", 7, "self", "one"))

    # Staff of Rausten (Base) - CH!L'Arachel
    if "chL'ArachelBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

    # Frelian Lance (Base) - Gilliam
    if "Official Nintendo Licensed Product" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 6
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[ATK] -= trunc(0.20 * atkStats[DEF])
        defCombatBuffs[DEF] -= trunc(0.20 * atkStats[DEF])
        atkr.DR_first_hit_NSP.append(40)

    if "Official Nintendo Licensed Product" in defSkills:
        defCombatBuffs[ATK] += 6
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[ATK] -= trunc(0.20 * defStats[DEF])
        atkCombatBuffs[DEF] -= trunc(0.20 * defStats[DEF])
        defr.DR_first_hit_NSP.append(40)

    # Frelian Blade (Base) - Syrene
    if "freliaSword" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defCombatBuffs[ATK] -= trunc(0.15 * atkStats[SPD])
        defCombatBuffs[SPD] -= trunc(0.15 * atkStats[SPD])
        defCombatBuffs[DEF] -= trunc(0.15 * atkStats[SPD])
        atkr.offensive_NFU = True
        atkr.DR_first_hit_NSP.append(40)

    if "freliaSword" in defSkills:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkCombatBuffs[ATK] -= trunc(0.15 * defStats[SPD])
        atkCombatBuffs[SPD] -= trunc(0.15 * defStats[SPD])
        atkCombatBuffs[DEF] -= trunc(0.15 * defStats[SPD])
        defr.offensive_NFU = True
        defr.DR_first_hit_NSP.append(40)

    # Great Flame (Refine Eff) - Myrrh
    if "myrrhBoost" in atkSkills and atkHPGreaterEqual25Percent and atkAllyWithin2Spaces:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.defensive_NFU = True

    if "myrrhBoost" in defSkills and defHPGreaterEqual25Percent and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.defensive_NFU = True

    # Spirit Breath (Refine Base) - H!Myrrh
    if "HMyrrhBoost" in atkSkills and (atkStats[DEF] + atkPhantomStats[DEF] > defStats[DEF] + defPhantomStats[DEF] or defHPGreaterEqual75Percent):
        atkr.follow_ups_skill += 1
        atkCombatBuffs[ATK] += 5
        defCombatBuffs[ATK] -= 5

    if "HMyrrhBoost" in defSkills and (defStats[DEF] + defPhantomStats[DEF] > atkStats[DEF] + atkPhantomStats[DEF] or atkHPGreaterEqual75Percent):
        defr.follow_ups_skill += 1
        defCombatBuffs[ATK] += 5
        atkCombatBuffs[ATK] -= 5

    # Spirit Breath (Refine Eff) - H!Myrrh
    if "pls gimme candy" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 5
        defCombatBuffs[ATK] -= 5

    if "pls gimme candy" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 5
        atkCombatBuffs[ATK] -= 5
        defr.DR_second_strikes_NSP.append(70)

    # Lilac-Jade Breath (Base) - SP!Myrrh
    if "spMyrrhBoost" in atkSkills and defHPEqual100Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.DR_all_hits_NSP.append(40)

    if "spMyrrhBoost" in defSkills:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.DR_all_hits_NSP.append(40)

    # Godly Breath (Base) - L!Myrrh
    if "LMyrrhBoost" in atkSkills:
        defCombatBuffs = [x - 5 for x in defCombatBuffs]
        atkr.DR_all_hits_NSP.append(30)
        atkr.follow_ups_skill += 1

    if "LMyrrhBoost" in defSkills and defAllyWithin2Spaces:
        atkCombatBuffs = [x - 5 for x in atkCombatBuffs]
        defr.DR_all_hits_NSP.append(30)
        defr.follow_ups_skill += 1

    # Godly Breath (Refine Base) - L!Myrrh
    if "LMyrrhRefine" in atkSkills:
        defCombatBuffs = [x - 5 for x in defCombatBuffs]
        atkr.DR_all_hits_NSP.append(40)
        atkr.follow_ups_skill += 1

        X = min(len(attacker.statusPos) + len(defender.statusNeg), 5)
        atkr.true_all_hits += X * 5

    if "LMyrrhRefine" in defSkills and defAllyWithin3Spaces:
        atkCombatBuffs = [x - 5 for x in atkCombatBuffs]
        defr.DR_all_hits_NSP.append(40)
        defr.follow_ups_skill += 1

        X = min(len(attacker.statusPos) + len(defender.statusNeg), 5)
        defr.true_all_hits += X * 5

    # Godly Breath (Refine Eff) - L!Myrrh
    if "the orbs" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs = [x - trunc(0.10 * atkStats[DEF]) for x in defCombatBuffs]

        X = min(len(attacker.statusPos) + len(defender.statusNeg), 5)
        atkr.TDR_all_hits += X * 3

    if "the orbs" in defSkills:
        atkCombatBuffs = [x - trunc(0.10 * atkStats[DEF]) for x in atkCombatBuffs]

        X = min(len(attacker.statusPos) + len(defender.statusNeg), 5)
        defr.TDR_all_hits += X * 3

    # Darkling Guard II - L!Myrrh
    if "darklingGuardianII" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkPenaltiesNeutralized[ATK] = True
        defBonusesNeutralized[ATK] = True
        atkr.TDR_all_hits += 7
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "darklingGuardianII" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defPenaltiesNeutralized[ATK] = True
        atkBonusesNeutralized[ATK] = True
        defr.TDR_all_hits += 7
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Loving Breath - V!Myrrh
    if "myrrhLove" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += min(len(atkAllyWithin3Spaces) * 4 + 6, 14)
        defCombatBuffs[ATK] += min(len(atkAllyWithin3Spaces) * 4 + 6, 14)
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))
        atkr.stat_scaling_DR.append((RES, 40))

    if "myrrhLove" in defSkills:
        defCombatBuffs[ATK] += min(len(defAllyWithin3Spaces) * 4 + 6, 14)
        atkCombatBuffs[ATK] += min(len(defAllyWithin3Spaces) * 4 + 6, 14)
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))
        defr.stat_scaling_DR.append((RES, 40))

    # Darkling Dragon
    if "darklingDragon" in atkSkills and atkAllyWithin2Spaces:
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1
        atkr.damage_reduction_reduction.append(50)

    if "darklingDragon" in defSkills:
        if defAllyWithin2Spaces:
            atkr.spLossOnAtk -= 1
            atkr.spLossWhenAtkd -= 1
            defr.damage_reduction_reduction.append(50)

        if savior_triggered:
            atkCombatBuffs[ATK] += 4
            atkCombatBuffs[DEF] += 4
            atkCombatBuffs[RES] += 4

    # Audhulma (Base) - Joshua
    if "audBoost" in atkSkills and defHPEqual100Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defr.spLossWhenAtkd -= 1
        defr.spLossOnAtk -= 1

    if "audBoost" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkr.spLossWhenAtkd -= 1
        atkr.spLossOnAtk -= 1

    # Blade of Jehanna (Base) - A!Joshua
    if "aJoshuaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[SPD] -= 6
        defCombatBuffs[DEF] -= 6
        defBonusesNeutralized = [True] * 5

        if attacker.attacking_tile.x_coord == defender.tile.x_coord or attacker.attacking_tile.y_coord == defender.tile.y_coord:
            cannotCounter = True
        else:
            atkr.true_stat_damages_from_foe.append((ATK, 15))

    if "aJoshuaBoost" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[SPD] -= 6
        atkCombatBuffs[DEF] -= 6
        atkBonusesNeutralized = [True] * 5

        if not (attacker.attacking_tile.x_coord == defender.tile.x_coord or attacker.attacking_tile.y_coord == defender.tile.y_coord):
            defr.true_stat_damages_from_foe.append((ATK, 15))

    # Shamshir (Refine Eff) - Marisa
    if "hey all scott here" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "hey all scott here" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Laconic Axe - DE!Marisa
    if "deMarisaBoost" in atkSkills:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))
        atkr.offensive_tempo = True
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

        support_partners = []
        highest_hp_allies = []

        for ally in atkAllAllies:
            if ally.isSupportOf(attacker):
                support_partners.append(ally)

            if not highest_hp_allies or ally.get_visible_stat(HP) == highest_hp_allies[0].get_visible_stat(HP):
                highest_hp_allies.append(ally)
            elif ally.get_visible_stat(HP) > highest_hp_allies[0].get_visible_stat(HP):
                highest_hp_allies = [ally]

        if disableSupportEffects:
            support_partners = []

        if support_partners:
            target_allies = support_partners
        else:
            target_allies = highest_hp_allies

        if any([ally in target_allies for ally in atkAllyWithin3RowsCols]):
            atkr.brave = True

    if "deMarisaBoost" in defSkills:
        if defAllyWithin3RowsCols:
            defCombatBuffs = [x + min(len(defAllyWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
            defr.true_stat_damages.append((SPD, 20))
            defr.offensive_tempo = True
            defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

        support_partners = []
        highest_hp_allies = []

        for ally in defAllAllies:
            if ally.isSupportOf(defender):
                support_partners.append(ally)

            if not highest_hp_allies or ally.get_visible_stat(HP) == highest_hp_allies[0].get_visible_stat(HP):
                highest_hp_allies.append(ally)
            elif ally.get_visible_stat(HP) > highest_hp_allies[0].get_visible_stat(HP):
                highest_hp_allies = [ally]

        if disableSupportEffects:
            support_partners = []

        if support_partners:
            target_allies = support_partners
        else:
            target_allies = highest_hp_allies

        if any([ally in target_allies for ally in defAllyWithin3RowsCols]):
            defr.brave = True

    if "deMarisaBraveTarget" in atkSkills: atkr.brave = True
    if "deMarisaBraveTarget" in defSkills and not savior_triggered: defr.brave = True

    # Lance of Grado - A!Amelia
    if "ascAmeliaBoost" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkPenaltiesNeutralized = [True] * 5
        atkr.DR_first_strikes_NSP.append(40)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "ascAmeliaBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + min(len(defAllyWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defPenaltiesNeutralized = [True] * 5
        defr.DR_first_strikes_NSP.append(40)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Obsidian Tactics - A!Amelia
    if "obsidianTactics" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 9 for x in atkCombatBuffs]

        X = len(attacker.statusPos)

        if X >= 1:
            defCombatBuffs[ATK] -= min(X * 2, 12)
            defCombatBuffs[DEF] -= min(X * 2, 12)
        if X >= 5:
            atkr.damage_reduction_reduction.append(50)

    if "obsidianTactics" in defSkills:
        defCombatBuffs = [x + 9 for x in defCombatBuffs]

        X = len(defender.statusPos)

        if X >= 1:
            atkCombatBuffs[ATK] -= min(X * 2, 12)
            atkCombatBuffs[DEF] -= min(X * 2, 12)
        if X >= 3:
            ignore_range = True
        if X >= 5:
            defr.damage_reduction_reduction.append(50)

    # Pupil's Tome (Base) - Ewan
    if "ewanBoost" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.DR_first_hit_NSP.append(30)
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[RES] = True

    if "ewanBoost" in defSkills and defender.wpnType in RANGED_WEAPONS:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.DR_first_hit_NSP.append(30)
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[RES] = True

    # Pupil's Tome (Refine Eff) - Ewan
    if "ewanStuff" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defCombatBuffs[ATK] -= trunc(0.20 * atkStats[RES])
        defCombatBuffs[RES] -= trunc(0.20 * atkStats[RES])
        atkr.follow_ups_skill += 1

    if "ewanStuff" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkCombatBuffs[ATK] -= trunc(0.20 * defStats[RES])
        atkCombatBuffs[RES] -= trunc(0.20 * defStats[RES])
        defr.follow_ups_skill += 1

    # Desert-Tiger Axe (Base) - Gerik
    if "gerikBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "gerikBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Flashing Carrot/Beguiling Bow
    if "easterSpectrum" in atkSkills and defHPEqual100Percent:
        atkCombatBuffs = [x + 2 for x in atkCombatBuffs]

    if "easterSpectrum" in defSkills and atkHPEqual100Percent:
        defCombatBuffs = [x + 2 for x in defCombatBuffs]

    # Tome of Storms (Base) - SS!Selena
    if "selenaBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "selenaBoost" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # Tome of Storms (Refine Base) - SS!Selena
    if "selenaRefineBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6 + trunc(atkStats[SPD] * 0.15)
        atkCombatBuffs[SPD] += 6 + trunc(atkStats[SPD] * 0.15)
        defBonusesNeutralized[SPD] = True
        defBonusesNeutralized[RES] = True
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "selenaRefineBoost" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 6 + trunc(defStats[SPD] * 0.15)
        defCombatBuffs[SPD] += 6 + trunc(defStats[SPD] * 0.15)
        atkBonusesNeutralized[SPD] = True
        atkBonusesNeutralized[RES] = True
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    if "theDayTheEarthBlewUp" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.true_stat_damages.append((SPD, 20))

    if "theDayTheEarthBlewUp" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.true_stat_damages.append((SPD, 20))

    # Exotic Fruit Juice (Refine Base) - SU!SS!Selena
    if "suSelenaField" in atkSkills and atkHPGreaterEqual25Percent:
        defBonusesNeutralized[SPD] = True
        defBonusesNeutralized[RES] = True
        atkr.true_stat_damages_from_foe.append((ATK, 15))

    if "suSelenaField" in defSkills and defHPGreaterEqual25Percent:
        atkBonusesNeutralized[SPD] = True
        atkBonusesNeutralized[RES] = True
        defr.true_stat_damages_from_foe.append((ATK, 15))

    # Exotic Fruit Juice (Refine Eff) - SU!SS!Selena
    if "suSelenaHexblade" in atkSkills:
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[RES] -= 5
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "suSelenaHexblade" in defSkills and atkHPGreaterEqual75Percent:
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[RES] -= 5
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # Obsidian Lance (Base) - Duessel
    if "duesselPenalty" in atkSkills and atkAdjacentToAlly:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[DEF] -= 6
        atkr.follow_ups_skill += 1

    if "duesselPenalty" in defSkills and defAdjacentToAlly:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[DEF] -= 6
        defr.follow_ups_skill += 1

    # Obsidian Lance (Refine Base) - Duessel
    if "duesselRefine" in atkSkills and len(atkAdjacentToAlly) <= 1:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[DEF] -= 6
        atkr.follow_ups_skill += 1
        atkr.TDR_stats.append((DEF, 20))

    if "duesselRefine" in defSkills and len(defAdjacentToAlly) <= 1:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[DEF] -= 6
        defr.follow_ups_skill += 1
        defr.TDR_stats.append((DEF, 20))

    # Obsidian Lance (Refine Eff) - Duessel
    if "duesselField_f" in atkSkills:
        defr.defensive_tempo = True
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[DEF] = True

    if "duesselField_f" in defSkills:
        atkr.defensive_tempo = True
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[DEF] = True

    if "obsidianField" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[DEF] -= 6
        atkr.true_stat_damages.append((DEF, 20))
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "obsidianField" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[DEF] -= 6
        defr.true_stat_damages.append((DEF, 20))
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Dark Monograph (Base) - Knoll
    if "knollBoost" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[RES] -= 5
        atkr.true_stat_damages.append((RES, 20))
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "knollBoost" in defSkills:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[RES] -= 5
        defr.true_stat_damages.append((RES, 20))
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Dark Monograph (Refine Eff) - Knoll
    if "knollStuff" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[RES] -= 5
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[SPD] = True
        atkPenaltiesNeutralized[RES] = True
        atkr.follow_ups_skill += 1

    if "knollStuff" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[RES] -= 5
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[SPD] = True
        defPenaltiesNeutralized[RES] = True
        defr.follow_ups_skill += 1

    # Tiger-Eye Axe (Base) - Caellach
    if "caellachBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.DR_first_hit_NSP.append(30)
        atkr.retaliatory_full_damages.append(30)

    if "caellachBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.DR_first_hit_NSP.append(30)
        defr.retaliatory_full_damages.append(30)

    # Naglfar (Refine Eff) - Lyon
    if "lyonBoost" in atkSkills and atkHPGreaterEqual50Percent:
        defCombatBuffs[ATK] -= 4
        defCombatBuffs[RES] -= 4

    if "lyonBoost" in defSkills and defHPGreaterEqual50Percent:
        atkCombatBuffs[ATK] -= 4
        atkCombatBuffs[RES] -= 4

        if defHPCur / defStats[HP] >= 0.70:
            atkr.follow_ups_skill += 1

    # Blood Tome (Base) - FA!Lyon
    if "colorlessAdvRanged" in atkSkills and defender.wpnType in RANGED_WEAPONS: atkr.DR_all_hits_NSP.append(50)
    if "colorlessAdvRanged" in defSkills and attacker.wpnType in RANGED_WEAPONS: defr.DR_all_hits_NSP.append(50)

    # Blood Tome (Refine Base) - FA!Lyon
    if "colorlessAdvRefine" in atkSkills:
        atkCombatBuffs[ATK] += 5
        defCombatBuffs[ATK] -= 5
        atkr.true_stat_damages.append((RES, 20))
        atkr.DR_all_hits_NSP.append(50)

    if "colorlessAdvRefine" in defSkills and attacker.wpnType in RANGED_WEAPONS:
        defCombatBuffs[ATK] += 5
        atkCombatBuffs[ATK] -= 5
        defr.true_stat_damages.append((RES, 20))
        defr.DR_all_hits_NSP.append(50)

    # Blood Tome (Refine Eff) - FA!Lyon
    if "betaFomortiis" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        defCombatBuffs[ATK] -= 5
        atkr.follow_ups_skill += 1
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "betaFomortiis" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        atkCombatBuffs[ATK] -= 5
        defr.follow_ups_skill += 1
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Tome of Grado (Base) - CH!Lyon
    if "chLyonBoost" in atkSkills and defHPEqual100Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[RES] -= 6
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[RES] = True

    if "chLyonBoost" in defSkills:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[RES] -= 6
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[RES] = True

    # Tender Vessel - V!Lyon
    if "vLyonBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5 + trunc(0.20 * atkStats[RES])
        atkCombatBuffs[DEF] += 5 + trunc(0.20 * atkStats[RES])
        atkCombatBuffs[RES] += 5 + trunc(0.20 * atkStats[RES])
        atkr.damage_reduction_reduction.append(50)

    if "vLyonBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5 + trunc(0.20 * defStats[RES])
        defCombatBuffs[DEF] += 5 + trunc(0.20 * defStats[RES])
        defCombatBuffs[RES] += 5 + trunc(0.20 * atkStats[RES])
        defr.damage_reduction_reduction.append(50)

    # Gray Illusion - V!Lyon
    if "grayIllusion" in atkSkills:
        atkCombatBuffs[ATK] += 9
        atkCombatBuffs[DEF] += 9
        atkCombatBuffs[RES] += 9
        atkPostCombatEffs[GIVEN_UNIT_SURVIVED].append(("status", Status.CancelAction, "highest_spd_foes_ally", "within_3_spaces_foe"))

    if "grayIllusion" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 9
        defCombatBuffs[DEF] += 9
        defCombatBuffs[RES] += 9

    # Bereft Lance (Base) - Orson
    if "You can make your own joke about this guy I'm tired" in atkSkills:
        atkCombatBuffs[ATK] += max(6 - len(atkAllyWithin2Spaces) * 2, 0)
        atkCombatBuffs[DEF] += max(6 - len(atkAllyWithin2Spaces) * 2, 0)

        if len(atkAllyWithin2Spaces) <= 1:
            defBonusesNeutralized = [True] * 5

    if "You can make your own joke about this guy I'm tired" in defSkills:
        defCombatBuffs[ATK] += max(6 - len(defAllyWithin2Spaces) * 2, 0)
        defCombatBuffs[DEF] += max(6 - len(defAllyWithin2Spaces) * 2, 0)

        if len(defAllyWithin2Spaces) <= 1:
            atkBonusesNeutralized = [True] * 5

    # Bereft Lance (Refine Base) - Orson
    if "orsonBoost" in atkSkills:
        atkCombatBuffs = [x + max(6 - len(atkAllyWithin2Spaces) * 2, 0) + 4 for x in atkCombatBuffs]
        defBonusesNeutralized = [True] * 5
        atkr.TDR_stats.append((DEF, 20))

    if "orsonBoost" in defSkills:
        defCombatBuffs = [x + max(6 - len(defAllyWithin2Spaces) * 2, 0) + 4 for x in defCombatBuffs]
        atkBonusesNeutralized = [True] * 5
        defr.TDR_stats.append((DEF, 20))

    # Bereft Lance (Refine Eff) - Orson
    if "or Son" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "or Son" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Argent Aura (Base) - Riev
    if "rievBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[RES] += 6

    if "rievBoost" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[RES] += 6

    # Sunstone's Blade - Glen
    if "glenBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defCombatBuffs[ATK] -= trunc(atkStats[DEF] * 0.20)
        defCombatBuffs[RES] -= trunc(atkStats[DEF] * 0.20)
        atkr.TDR_stats.append((DEF, 15))
        atkr.follow_ups_skill += 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 10, "self", "one"))

    if "glenBoost" in defSkills and defAllyWithin3RowsCols:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkCombatBuffs[ATK] -= trunc(defStats[DEF] * 0.20)
        atkCombatBuffs[RES] -= trunc(defStats[DEF] * 0.20)
        defr.TDR_stats.append((DEF, 15))
        defr.follow_ups_skill += 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 10, "self", "one"))

    # Ravager (Base) - Fomortiis
    if "fomortiisBoost" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[DEF] -= 6
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

        if attacker.transformed:
            atkr.spGainOnAtk += 1
            atkr.spGainWhenAtkd += 1

    if "fomortiisBoost" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[DEF] -= 6
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

        defr.DR_second_strikes_NSP.append(80)

        if defender.transformed:
            defr.spGainOnAtk += 1
            defr.spGainWhenAtkd += 1

    if "nightmare" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 10
        defCombatBuffs[DEF] -= 10
        atkr.DR_first_hit_NSP.append(30)

    if "nightmare" in defSkills:
        atkCombatBuffs[ATK] -= 10
        atkCombatBuffs[DEF] -= 10
        defr.DR_first_hit_NSP.append(30)
        defPostCombatEffs[GIVEN_UNIT_SURVIVED].append(("end_action", "pingas", "foes_allies", "nearest_within_4_spaces_foe"))

    # Icy Ravager - WI!Fomortiis
    if "satanSavesChristmas" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 6 + trunc(0.20 * defStats[DEF])
        defCombatBuffs[DEF] -= 6 + trunc(0.20 * defStats[DEF])

        X = attacker.num_foes_defeated + sum([ally.num_foes_defeated for ally in atkAllAllies])
        atkr.true_all_hits += min(X * 3 + 10, 19)
        atkr.TDR_all_hits += X
        atkr.offensive_tempo = True

    if "satanSavesChristmas" in defSkills:
        atkCombatBuffs[ATK] -= 6 + trunc(0.20 * atkStats[DEF])
        atkCombatBuffs[DEF] -= 6 + trunc(0.20 * atkStats[DEF])

        num_foes_acted = len([ally for ally in atkAllAllies if ally not in units_left_to_act])
        num_foes_defeated = defender.num_foes_defeated + sum([ally.num_foes_defeated for ally in defAllAllies])

        X = num_foes_acted + num_foes_defeated
        defr.true_all_hits += min(X * 3 + 10, 19)
        defr.TDR_all_hits += X
        defr.offensive_tempo = True

    # Leaden Regrets - WI!Fomortiis
    if "leadenRegrets" in atkSkills and attacker.transformed:
        defCombatBuffs[ATK] -= 10
        defCombatBuffs[DEF] -= 10
        atkr.DR_second_strikes_NSP.append(80)
        atkr.damage_reduction_reduction.append(50)

    if "leadenRegrets" in defSkills:
        atkCombatBuffs[ATK] -= 10
        atkCombatBuffs[DEF] -= 10
        defr.DR_second_strikes_NSP.append(80)
        defr.damage_reduction_reduction.append(50)
        defPostCombatEffs[GIVEN_UNIT_SURVIVED].append(("end_action", "pingas", "foes_allies", "nearest_within_4_spaces_foe"))

    # PATH OF RADIANCE / RADIANT DAWN

    # Ragnell/Alondite (Refine Eff) - Ike, L!Ike/Black Knight, Zelgius
    if ("I fight for my friends" in atkSkills or "WILLYOUSURVIVE?" in atkSkills) and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if ("I fight for my friends" in defSkills or "WILLYOUSURVIVE?" in defSkills) and defHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    # Urvan (Base) - B!Ike
    if "bikeDR" in atkSkills:
        atkr.DR_consec_strikes_NSP.append(80)

    if "bikeDR" in defSkills:
        defr.DR_consec_strikes_NSP.append(80)

    # Urvan (Refine Eff) - B!Ike
    if "bikeDesp" in atkSkills:
        atkr.DR_first_hit_NSP.append(40)

    if "bikeDesp" in defSkills:
        defr.DR_first_hit_NSP.append(40)
        defr.other_desperation = True

    # Valentine's 2019 Weapons
    if "telliusBond" in atkSkills and atkAdjacentToAlly: atkCombatBuffs = [x + 3 for x in atkCombatBuffs]
    if "telliusBond" in defSkills and defAdjacentToAlly: defCombatBuffs = [x + 3 for x in defCombatBuffs]

    # Sturdy War Sword (Base) - CH!Ike
    if "sturdyWarrr" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        if atkSpTriggeredByAttack:
            if len(atkAllyWithin4Spaces) >= 1:
                atkr.sp_jump_first += math.trunc(attacker.specialMax / 2)
            if len(atkAllyWithin4Spaces) >= 2:
                atkr.DR_first_hit_NSP.append(attacker.specialMax * 10)
            if len(atkAllyWithin4Spaces) >= 3:
                atkr.defensive_NFU = True
                atkr.offensive_NFU = True

    if "sturdyWarrr" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        if defSpTriggeredByAttack:
            if len(defAllyWithin4Spaces) >= 1:
                defr.sp_jump_first += math.trunc(defender.specialMax / 2)
            if len(defAllyWithin4Spaces) >= 2:
                defr.DR_first_hit_NSP.append(defender.specialMax * 10)
            if len(defAllyWithin4Spaces) >= 3:
                defr.defensive_NFU = True
                defr.offensive_NFU = True

    # Emblem Ragnell - E!Ike
    if "BIGIKEFAN" in atkSkills and atkHPGreaterEqual25Percent:
        X = min(max(trunc(defStats[ATK] * 0.20) - 2, 6), 16)
        atkCombatBuffs[ATK] += X
        defCombatBuffs[ATK] -= X
        atkPenaltiesNeutralized = [True] * 5
        atkr.offensive_tempo = True

    if "BIGIKEFAN" in defSkills and defHPGreaterEqual25Percent:
        X = min(max(trunc(atkStats[ATK] * 0.20) - 2, 6), 16)
        defCombatBuffs[ATK] += X
        atkCombatBuffs[ATK] -= X
        defPenaltiesNeutralized = [True] * 5
        defr.offensive_tempo = True
        disableCannotCounter = True

    # Great Aether
    if "AETHER_GREAT" in atkSkills:
        atkr.vantage = True
        atkr.other_desperation = True
        atkr.DR_great_aether_SP = True

    if "AETHER_GREAT" in defSkills:
        defr.other_desperation = True
        defr.DR_great_aether_SP = True

    # Ike Ring
    if "fight on" in atkSkills and defender.wpnType in RANGED_WEAPONS:
        atkr.DR_sp_trigger_by_any_special_non_twin_SP.append(40)

    if "fight on" in defSkills and attacker.wpnType in RANGED_WEAPONS:
        defr.DR_sp_trigger_by_any_special_non_twin_SP.append(40)

    # Swirling Lance - DE!Ike
    if "jehannaIkeBoost" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))
        atkr.TDR_stats.append((SPD, 20))
        atkr.damage_reduction_reduction.append(50)

    if "jehannaIkeBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + min(len(defAllyWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))
        defr.TDR_stats.append((SPD, 20))
        defr.damage_reduction_reduction.append(50)

    if Status.Outspeeding in atkSkills:
        defr.outspeed_factor += 10

    if Status.Outspeeding in defSkills:
        atkr.outspeed_factor += 10

    # Aether's Path - DE!Ike
    if "aetherAgain" in atkSkills:
        atkr.surge_heal += trunc(atkStats[HP] * 0.50)
        atkr.offensive_tempo = True
        atkr.deep_wounds_allowance.append(50)
        atkr.DR_aether_path_SP = True

    if "aetherAgain" in defSkills:
        defr.surge_heal += trunc(defStats[HP] * 0.50)
        defr.offensive_tempo = True
        defr.deep_wounds_allowance.append(50)
        defr.DR_aether_path_SP = True

    # Adroit War Tome (Base) - CH!Soren
    if "chSorenBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[RES] += 6

    if "chSorenBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[RES] += 6

    # Elena's Staff (Base) - Mist
    if "mistDebuff" in atkSkills:
        atkPostCombatEffs[2].append(("debuff_atk", 7, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[2].append(("debuff_spd", 7, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "mistDebuff" in defSkills:
        defPostCombatEffs[2].append(("debuff_atk", 7, "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[2].append(("debuff_spd", 7, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Elena's Staff (Refine Eff) - Mist
    if "mistPanic" in atkSkills:
        atkPostCombatEffs[2].append(("status", Status.Panic, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "mistPanic" in defSkills:
        defPostCombatEffs[2].append(("status", Status.Panic, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Loyal Greatlance (Refine Eff) - Oscar
    if "oscarDrive" in atkSkills and (atkInfAlliesWithin2Spaces or atkCavAlliesWithin2Spaces):
        atkCombatBuffs[ATK] += 3
        atkCombatBuffs[SPD] += 3

    if "oscarDrive" in defSkills and (defInfAlliesWithin2Spaces or defCavAlliesWithin2Spaces):
        defCombatBuffs[ATK] += 3
        defCombatBuffs[SPD] += 3

    # Summer Strikers (Base) - SU!Mia
    if "summerMiaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.DR_first_hit_NSP.append(75)

    # Summer Strikers (Refine Base) - SU!Mia
    if "summerMiaRefine" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.DR_first_strikes_NSP.append(75)
        atkr.offensive_tempo = True

    if "summerMiaRefine" in defSkills and defender.wpnType in RANGED_WEAPONS:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.DR_first_strikes_NSP.append(75)
        defr.offensive_tempo = True

    # Summer Strikers (Refine Eff) - SU!Mia
    if "summerMiaPulse" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5 + trunc(0.20 * atkStats[SPD])
        atkCombatBuffs[SPD] += 5 + trunc(0.20 * atkStats[SPD])
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "summerMiaPulse" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5 + trunc(0.20 * defStats[SPD])
        defCombatBuffs[SPD] += 5 + trunc(0.20 * defStats[SPD])
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # Sharp War Sword (Base) - CH!Mia
    if "pointySword" in atkSkills: atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
    if "pointySword" in defSkills and defAllyWithin2Spaces: defCombatBuffs = [x + 5 for x in defCombatBuffs]

    # Summertime Axe - SF!Mia
    if "sfMiaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + trunc(atkStats[SPD] * 0.15) for x in atkCombatBuffs]
        atkr.offensive_tempo = True

        X = len(attacker.statusPos) + len(defender.statusPos)

        atkr.true_all_hits += min(X * 5, 30)
        atkr.TDR_all_hits += min(X * 3, 18)
        atkr.TDR_on_foe_sp += min(X * 3, 18)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "sfMiaBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + trunc(defStats[SPD] * 0.15) for x in defCombatBuffs]
        defr.offensive_tempo = True

        X = len(attacker.statusPos) + len(defender.statusPos)

        defr.true_all_hits += min(X * 5, 30)
        defr.TDR_all_hits += min(X * 3, 18)
        defr.TDR_on_foe_sp += min(X * 3, 18)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Fluttering Fan - SF!Nephenee
    if "sfNepheneeBoost" in atkSkills and atkAllyWithin3RowsCols:
        tile_cond = False
        for tile in atkr.tile.tilesWithinNSpaces(2):
            if (tile.terrain == 1 or tile.terrain == 3) or (tile.divine_vein_turn > 0):
                tile_cond = True
                break

        X = 14 if tile_cond else min(len(atkAllyWithin3RowsCols) * 3 + 5, 14)

        atkCombatBuffs = [x + X for x in atkCombatBuffs]
        defBonusesNeutralized[SPD] = True
        defBonusesNeutralized[RES] = True
        atkSkills.update({"flutteringFanSp": 0})

        if atkSpTriggeredByAttack:
            atkr.sp_jump_first += 1
            atkr.sp_jump_followup += 1

    if "sfNepheneeBoost" in defSkills and defAllyWithin3RowsCols:
        tile_cond = False
        for tile in defr.tile.tilesWithinNSpaces(2):
            if (tile.terrain == 1 or tile.terrain == 3) or (tile.divine_vein_turn > 0):
                tile_cond = True
                break

        X = 14 if tile_cond else min(len(defAllyWithin3RowsCols) * 3 + 5, 14)

        defCombatBuffs = [x + X for x in defCombatBuffs]
        atkBonusesNeutralized[SPD] = True
        atkBonusesNeutralized[RES] = True
        defSkills.update({"flutteringFanSp": 0})

        if defSpTriggeredByAttack:
            defr.sp_jump_first += 1
            defr.sp_jump_followup += 1

    if "sfNepheneeBoost_f" in atkSkills and atkSpTriggeredByAttack:
        atkr.offensive_tempo = True
        atkr.sp_jump_first += atkSkills["sfNepheneeBoost_f"]
        atkSkills.update({"flutteringFanSp_f": atkSkills["sfNepheneeBoost_f"]})

    if "sfNepheneeBoost_f" in defSkills and defSpTriggeredByAttack:
        atkr.offensive_tempo = True
        atkr.sp_jump_first += defSkills["sfNepheneeBoost_f"]
        atkSkills.update({"flutteringFanSp_f": defSkills["sfNepheneeBoost_f"]})

    # Large War Axe (Base) - CH!Boyd
    if "chBoydBoost" in atkSkills:
        if turn % 2 == 1:
            atkCombatBuffs[ATK] += 10
            atkCombatBuffs[SPD] += 10
            atkPenaltiesNeutralized[ATK] = True
            atkPenaltiesNeutralized[SPD] = True
        else:
            atkCombatBuffs[ATK] += 5
            atkCombatBuffs[SPD] += 5

    if "chBoydBoost" in defSkills:
        if turn % 2 == 1:
            defCombatBuffs[ATK] += 10
            defCombatBuffs[SPD] += 10
            defPenaltiesNeutralized[ATK] = True
            defPenaltiesNeutralized[SPD] = True
        else:
            defCombatBuffs[ATK] += 5
            defCombatBuffs[SPD] += 5

    # Mercenary Lance (Base) - Gatrie
    if "gatrieBoost" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        atkPenaltiesNeutralized = [True] * 5
        atkr.TDR_stats.append((DEF, 20))
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "gatrieBoost" in defSkills:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        defPenaltiesNeutralized = [True] * 5
        defr.TDR_stats.append((DEF, 20))
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Mercenary Lance (Refine Eff) - Gatrie
    if "Kill Em All 2020 / I am shield fighter man / 410,757,864,530 DEAD FELIXES" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5 + trunc(0.15 * atkStats[DEF])
        atkCombatBuffs[DEF] -= 5 + trunc(0.15 * atkStats[DEF])
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 10, "self", "one"))

    if "Kill Em All 2020 / I am shield fighter man / 410,757,864,530 DEAD FELIXES" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5 + trunc(0.15 * defStats[DEF])
        defCombatBuffs[DEF] -= 5 + trunc(0.15 * defStats[DEF])
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 10, "self", "one"))
        defr.sp_jump_foe_first += 2

    # Craver's Tome (Base) - Ilyana
    if "ilyanaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "ilyanaBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Craver's Tome (Refine Eff) - Ilyana
    if "that ain't rexbolt" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkPenaltiesNeutralized[RES] = True
        defBonusesNeutralized[RES] = True
        atkr.true_stat_damages.append((RES, 20))
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "that ain't rexbolt" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defPenaltiesNeutralized[RES] = True
        atkBonusesNeutralized[RES] = True
        defr.true_stat_damages.append((RES, 20))
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Windy War Tome (Base) - CH!Ilyana
    if "chIlyanaBoost" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[RES] -= 6
        atkr.stat_scaling_DR.append((RES, 40))

    if "chIlyanaBoost" in defSkills:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[RES] -= 6
        defr.stat_scaling_DR.append((RES, 40))

    # Talregan Axe (Base/Refine Base) - Jill
    if "jillBoost" in atkSkills or "jillRefineBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.self_desperation = True

        if "jillRefineBoost" in atkSkills:
            atkr.spGainOnAtk += 1
            atkr.spGainWhenAtkd += 1

    if ("jillBoost" in defSkills or "jillRefineBoost" in defSkills) and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

        if "jillRefineBoost" in defSkills:
            defr.spGainOnAtk += 1
            defr.spGainWhenAtkd += 1

    # Talregan Axe (Refine Eff) - Jill
    if "jillSomething" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.true_stat_damages.append((SPD, 20))

    if "jillSomething" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.true_stat_damages.append((SPD, 20))

    # Double Bow (Base) - Shinon
    if "shinonBoost" in atkSkills and not atkAdjacentToAlly:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

    if "shinonBoost" in defSkills and not defAdjacentToAlly:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        ignore_range = True

    # Double Bow (Base) - Shinon
    if "shinonRefineBoost" in atkSkills and len(atkAdjacentToAlly) <= 1:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        ignore_range = True
        atkr.offensive_tempo = True
        atkr.all_hits_heal += 7

    if "shinonRefineBoost" in defSkills and len(defAdjacentToAlly) <= 1:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.offensive_tempo = True
        defr.all_hits_heal += 7

    # Double Bow (Refine Eff) - Shinon
    if "shinonDouble" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defCombatBuffs[ATK] -= max(8 - len(atkAdjacentToAlly) * 2, 0)
        defCombatBuffs[SPD] -= max(8 - len(atkAdjacentToAlly) * 2, 0)
        defCombatBuffs[DEF] -= max(8 - len(atkAdjacentToAlly) * 2, 0)
        atkr.retaliatory_reduced += 1

    if "shinonDouble" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkCombatBuffs[ATK] -= max(8 - len(defAdjacentToAlly) * 2, 0)
        atkCombatBuffs[SPD] -= max(8 - len(defAdjacentToAlly) * 2, 0)
        atkCombatBuffs[DEF] -= max(8 - len(defAdjacentToAlly) * 2, 0)
        defr.retaliatory_reduced += 1

    # Flame Lance (Base) - Petrine
    if "petrineBoost" in atkSkills and atkHPGreaterEqual50Percent:
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[RES] -= 5

    if "petrineBoost" in defSkills and defHPGreaterEqual50Percent:
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[RES] -= 5

    # Flame Lance (Refine Base) - Petrine
    if "petrineRefine" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[RES] -= 5
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "petrineRefine" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[RES] -= 5
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # Sanaki
    if "sanakiBoost" in atkSkills and atkFlyAlliesWithin2Spaces:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[RES] += 5

    if "sanakiBoost" in defSkills and defFlyAlliesWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[RES] += 5

    # Nifl Frostflowers/Múspell Fireposy
    if "bridalFlowers" in atkSkills:
        atkCombatBuffs[ATK] += 2 * min(len(atkAllyWithin2Spaces), 3)
        atkCombatBuffs[SPD] += 2 * min(len(atkAllyWithin2Spaces), 3)

    if "bridalFlowers" in defSkills:
        defCombatBuffs[ATK] += 2 * min(len(defAllyWithin2Spaces), 3)
        defCombatBuffs[SPD] += 2 * min(len(defAllyWithin2Spaces), 3)

    # Nifl Frostflowers (Refine Base) - BR!Sanaki
    if "BRSanakiBoost" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 5 + min(2 * len(atkAllyWithin3Spaces), 4)
        atkCombatBuffs[RES] += 5

    if "BRSanakiBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 5 + min(2 * len(defAllyWithin3Spaces), 4)
        defCombatBuffs[RES] += 5

    # Nifl Frostflowers (Refine Eff) - BR!Sanaki
    if "Adam Sandler's Click" in atkSkills and atkHPGreaterEqual50Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[RES] += 5

        highest_atk = 0
        for ally in atkAllyWithin2Spaces:
            ally_panic = Status.Panic in ally.statusNeg and Status.NullPanic not in ally.statusPos
            if ally_panic: continue

            highest_atk = max(ally.buffs[ATK], highest_atk)

        atkCombatBuffs[ATK] += highest_atk

    if "Adam Sandler's Click" in defSkills and defHPGreaterEqual50Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[RES] += 5

        highest_atk = 0
        for ally in defAllyWithin2Spaces:
            ally_panic = Status.Panic in ally.statusNeg and Status.NullPanic not in ally.statusPos
            if ally_panic: continue

            highest_atk = max(ally.buffs[ATK], highest_atk)

        defCombatBuffs[ATK] += highest_atk

    # Spy's Shuriken - NI!Heather
    if "niHeatherBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

    if "niHeatherBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

    # Ragnell·Alondite (Refine Eff) - Altina/WI!Altina
    if "TWO?" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[RES] += 5
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[DEF] = True

    if "TWO?" in defSkills:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[RES] += 5
        defr.spGainWhenAtkd += 1
        defr.spGainOnAtk += 1
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[DEF] = True

    if "chosen" in atkSkills and all([ally.wpnType in DRAGON_WEAPONS + BEAST_WEAPONS for ally in atkAdjacentToAlly]):
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[DEF] += 6

    if "chosen" in defSkills and all([ally.wpnType in DRAGON_WEAPONS + BEAST_WEAPONS for ally in defAdjacentToAlly]):
        defCombatBuffs[ATK] += 6
        defCombatBuffs[DEF] += 6

    if "newChosen" in atkSkills and (all([ally.wpnType in DRAGON_WEAPONS + BEAST_WEAPONS for ally in atkAdjacentToAlly]) or defHPGreaterEqual75Percent):
        atkCombatBuffs[ATK] += 9
        atkCombatBuffs[DEF] += 9
        atkCombatBuffs[RES] += 9
        atkr.stat_scaling_DR.append((RES, 40))

    if "newChosen" in defSkills and (all([ally.wpnType in DRAGON_WEAPONS + BEAST_WEAPONS for ally in defAdjacentToAlly]) or atkHPGreaterEqual75Percent):
        defCombatBuffs[ATK] += 9
        defCombatBuffs[DEF] += 9
        defCombatBuffs[RES] += 9
        defr.stat_scaling_DR.append((RES, 40))

    # Arcadian Axes - DE!Altina
    if "OOF, my goodness, oh" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= trunc(0.20 * atkStats[RES])
        defCombatBuffs[DEF] -= trunc(0.20 * atkStats[RES])
        defCombatBuffs[RES] -= trunc(0.20 * atkStats[RES])

    if "OOF, my goodness, oh" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= trunc(0.20 * defStats[RES])
        atkCombatBuffs[DEF] -= trunc(0.20 * defStats[RES])
        atkCombatBuffs[RES] -= trunc(0.20 * defStats[RES])

    # Queensblade - Lucia
    if "You get NOTHING" in atkSkills:
        atkr.special_disabled = True
        defr.special_disabled = True

        atkr.defensive_terrain = False
        defr.defensive_terrain = False

        atkr.defensive_NFU = True
        atkr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.offensive_NFU = True

        disableCannotCounter = True

        atkr.hardy_bearing = True
        defr.hardy_bearing = True

        if atkHPGreaterEqual25Percent:
            atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
            atkr.true_stat_damages.append((SPD, 20))
            atkr.DR_all_hits_NSP.append(30)

    if "You get NOTHING" in defSkills:
        atkr.special_disabled = True
        defr.special_disabled = True

        atkr.defensive_terrain = False
        defr.defensive_terrain = False

        atkr.defensive_NFU = True
        atkr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.offensive_NFU = True

        disableCannotCounter = True

        atkr.hardy_bearing = True
        defr.hardy_bearing = True

        if defHPGreaterEqual25Percent:
            defCombatBuffs = [x + 5 for x in defCombatBuffs]
            defr.true_stat_damages.append((SPD, 20))
            defr.DR_all_hits_NSP.append(30)

    # Breezy Spear - SF!Lucia
    if "sfLuciaBoost" in atkSkills:
        atkr.special_disabled = True
        defr.special_disabled = True

        atkr.defensive_terrain = False
        defr.defensive_terrain = False

        atkr.defensive_NFU = True
        atkr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.offensive_NFU = True

        disableCannotCounter = True

        atkr.hardy_bearing = True
        defr.hardy_bearing = True

        atkCombatBuffs = [x + 5 + trunc(0.15 * atkStats[SPD]) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "sfLuciaBoost" in defSkills:
        atkr.special_disabled = True
        defr.special_disabled = True

        atkr.defensive_terrain = False
        defr.defensive_terrain = False

        atkr.defensive_NFU = True
        atkr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.offensive_NFU = True

        disableCannotCounter = True

        atkr.hardy_bearing = True
        defr.hardy_bearing = True

        defCombatBuffs = [x + 5 + trunc(0.15 * defStats[SPD]) for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Command Lance (Base) - Sigrun
    if "Maybe it's the way you're dressed" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.DR_first_hit_NSP.append(40)

    if "Maybe it's the way you're dressed" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.DR_first_hit_NSP.append(40)

    # Command Lance (Refine Eff) - Sigrun
    if "y=mx+b" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(len(atkAllyWithin3Spaces) * 2 + 4, 10) for x in atkCombatBuffs]
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "y=mx+b" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(len(defAllyWithin3Spaces) * 2 + 4, 10) for x in defAllyWithin3Spaces]
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Gurgurant (Refine Base) - Ashnard
    if "ashnardField_f" in atkSkills:
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[DEF] = True
        atkr.follow_up_denials -= atkSkills["ashnardField_f"]
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    if "ashnardField_f" in defSkills:
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[DEF] = True
        defr.follow_up_denials -= defSkills["ashnardField_f"]
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    # Gurgurant (Refine Eff) - Ashnard
    if "refinedRein" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= trunc(0.15 * atkStats[DEF]) + 5
        defCombatBuffs[DEF] -= trunc(0.15 * atkStats[DEF]) + 5
        atkr.DR_all_hits_NSP.append(30)

    if "refinedRein" in defSkills:
        atkCombatBuffs[ATK] -= trunc(0.15 * defStats[DEF]) + 5
        atkCombatBuffs[DEF] -= trunc(0.15 * defStats[DEF]) + 5
        defr.DR_all_hits_NSP.append(30)

    # Vision of Daein (Base) - Pelleas
    if "pelleasBoost" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[SPD] = True
        atkr.follow_ups_skill += 1

    if "pelleasBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[SPD] = True
        defr.follow_ups_skill += 1

    # Vision of Daein (Refine Eff) - Pelleas
    if "pelleasMiracle" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((ATK, 15))
        atkr.all_hits_heal += 7
        atkr.pseudo_miracle = True

    if "pelleasMiracle" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages.append((ATK, 15))
        defr.all_hits_heal += 7
        defr.pseudo_miracle = True

    # Damiell Bow (Base) - Astrid
    if "astridRally" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

    if "astridRally" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

    # Fireman's Hook (Base) - Volke
    if "har har harhar har" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.offensive_tempo = True
        atkr.spGainOnAtk += 1

    if "har har harhar har" in defSkills and not defAdjacentToAlly:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.offensive_tempo = True
        defr.spGainOnAtk += 1

    # Solemn Axe (Base) - WI!Black Knight
    if "DK wants BK" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        if atkSpTriggeredByAttack:
            if defHPCur / defStats[HP] >= 0.20:
                atkr.DR_first_hit_NSP.append(40)
            if defHPCur / atkStats[HP] >= 0.40:
                defCombatBuffs[ATK] -= max(0, min(trunc(0.25 * defStats[ATK]) - 8, 10))
                defCombatBuffs[SPD] -= max(0, min(trunc(0.25 * defStats[ATK]) - 8, 10))
            if defHPCur / atkStats[HP] >= 0.60:
                atkr.offensive_NFU = True
                atkr.defensive_NFU = True

    if "DK wants BK" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        if defSpTriggeredByAttack:
            if atkHPCur / defStats[HP] >= 0.20:
                defr.DR_first_hit_NSP.append(40)
            if atkHPCur / defStats[HP] >= 0.40:
                atkCombatBuffs[ATK] -= max(0, min(trunc(0.25 * atkStats[ATK]) - 8, 10))
                atkCombatBuffs[SPD] -= max(0, min(trunc(0.25 * atkStats[ATK]) - 8, 10))
            if atkHPCur / defStats[HP] >= 0.60:
                defr.offensive_NFU = True
                defr.defensive_NFU = True

    # Final Sword - L!Black Knight
    if "WILL YOU SURVIVE?" in atkSkills and atkHPGreaterEqual25Percent:
        X = trunc(atkStats[DEF] * 0.20) + 6
        
        atkCombatBuffs[ATK] += X
        defCombatBuffs[ATK] -= X
        
        Y = 16 if defHPCur / defStats[HP] >= 0.70 else 10
        
        atkr.true_all_hits += Y
        atkr.TDR_all_hits += Y
        atkr.TDR_on_foe_sp += Y
        
        atkr.disable_deep_wounds = True
        atkr.sp_pierce_DR = True

    if "WILL YOU SURVIVE?" in defSkills:
        X = trunc(defStats[DEF] * 0.20) + 6

        defCombatBuffs[ATK] += X
        atkCombatBuffs[ATK] -= X

        Y = 16 if atkHPCur / atkStats[HP] >= 0.70 else 10

        defr.true_all_hits += Y
        defr.TDR_all_hits += Y
        defr.TDR_on_foe_sp += Y

        defr.disable_deep_wounds = True
        defr.sp_pierce_DR = True

    if "pitchDarkLuna" in atkSkills:
        atkr.DR_aether_path_SP = True

    if "pitchDarkLuna" in defSkills:
        disableCannotCounter = True
        defr.DR_aether_path_SP = True

    if Status.Imbue in attacker.statusPos:
        atkr.deep_wounds_allowance.append(50)
        
    if Status.Imbue in defender.statusPos:
        defr.deep_wounds_allowance.append(50)

    if Status.Reflex in attacker.statusPos:
        atkr.TDR_first_strikes += 7
        atkr.retaliatory_reduced += 1

    if Status.Reflex in defender.statusPos:
        defr.TDR_first_strikes += 7
        defr.retaliatory_reduced += 1

    # Scarlet Spear - NI!Zelgius
    if "zelgin up" in atkSkills and atkHPGreaterEqual25Percent:
        X = max(6, min(trunc(0.25 * defStats[ATK]) - 2, 16))
        atkCombatBuffs[ATK] += X
        defCombatBuffs[ATK] -= X
        atkr.DR_all_hits_NSP.append(30)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "zelgin up" in defSkills and defHPGreaterEqual25Percent:
        X = max(6, min(trunc(0.25 * atkStats[ATK]) - 2, 16))
        defCombatBuffs[ATK] += X
        atkCombatBuffs[ATK] -= X
        defr.DR_all_hits_NSP.append(30)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Thani (Base) - Micaiah
    if "micaiahRedu" in atkSkills and (defender.move == 1 or defender.move == 3) and defender.wpnType in RANGED_WEAPONS:
        atkr.DR_first_hit_NSP.append(30)
    if "micaiahRedu" in defSkills and (attacker.move == 1 or attacker.move == 3) and attacker.wpnType in RANGED_WEAPONS:
        defr.DR_first_hit_NSP.append(30)

    # Thani (Refine Base) - Micaiah
    if "refMicaiahRedu" in atkSkills and defender.wpnType in RANGED_WEAPONS: atkr.DR_first_hit_NSP.append(30)
    if "refMicaiahRedu" in defSkills and attacker.wpnType in RANGED_WEAPONS: defr.DR_first_hit_NSP.append(30)

    # Thani (Refine Eff) - Micaiah
    if "micaiahBoost" in atkSkills and atkHPGreaterEqual50Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[RES] += 5
        atkr.follow_ups_skill += 1

    if "micaiahBoost" in defSkills and defHPGreaterEqual50Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[RES] += 5
        defr.follow_ups_skill += 1

    # New Dawn (Base) - L!Micaiah
    if "lMicaiahBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[RES] += 6
        atkr.follow_ups_skill += 1

        if atkHPCur / atkStats[HP] <= 0.50:
            atkr.self_desperation = True

    if "lMicaiahBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[RES] += 6
        defr.follow_ups_skill += 1

    # New Dawn (Refine Base) - L!Micaiah
    if "lMicaiahRefine" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[RES] += 6
        atkCombatBuffs[SPD] += 5
        atkCombatBuffs[DEF] += 5
        atkCombatBuffs = [x + trunc(0.10 * atkStats[RES]) for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkr.self_desperation = True

    if "lMicaiahRefine" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[RES] += 6
        defCombatBuffs[SPD] += 5
        defCombatBuffs[DEF] += 5
        defCombatBuffs = [x + trunc(0.10 * atkStats[RES]) for x in atkCombatBuffs]
        defr.follow_ups_skill += 1

    # New Dawn (Refine Eff) - L!Micaiah
    if "lMicaiahStuff" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((RES, 20))
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[RES] = True
        atkr.damage_reduction_reduction.append(50)

    if "lMicaiahStuff" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages.append((RES, 20))
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[RES] = True
        defr.damage_reduction_reduction.append(50)

    # Moonlight Drop (Base) - SU!Micaiah
    if "suMicaiahBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[RES] += 6

    if "suMicaiahBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[RES] += 6

    # Silver of Dawn - X!Micaiah
    if "silverOfDawn" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 6 + trunc(0.20 * atkStats[RES])
        defCombatBuffs[RES] -= 6 + trunc(0.20 * atkStats[RES])
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[RES] = True
        atkr.true_all_hits += min(len(atkAllyWithin3RowsCols) * 5, 15)

    if "silverOfDawn" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 6 + trunc(0.20 * defStats[RES])
        atkCombatBuffs[RES] -= 6 + trunc(0.20 * defStats[RES])
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[RES] = True
        defr.true_all_hits += min(len(defAllyWithin3RowsCols) * 5, 15)

    # Peshkatz (Base) - Sothe
    if "sotheDagger" in atkSkills:
        val = atkSkills["sotheDagger"]

        atkPostCombatEffs[2].append(("debuff_atk", val, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[2].append(("debuff_spd", val, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[2].append(("debuff_def", val, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[2].append(("debuff_res", val, "foe_and_foes_allies", "within_2_spaces_foe"))

        atkPostCombatEffs[2].append(("buff_atk", val, "self_and_allies", "within_2_spaces_self"))
        atkPostCombatEffs[2].append(("buff_spd", val, "self_and_allies", "within_2_spaces_self"))
        atkPostCombatEffs[2].append(("buff_def", val, "self_and_allies", "within_2_spaces_self"))
        atkPostCombatEffs[2].append(("buff_res", val, "self_and_allies", "within_2_spaces_self"))

    if "sotheDagger" in defSkills:
        val = defSkills["sotheDagger"]

        defPostCombatEffs[2].append(("debuff_atk", val, "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[2].append(("debuff_spd", val, "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[2].append(("debuff_def", val, "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[2].append(("debuff_res", val, "foe_and_foes_allies", "within_2_spaces_foe"))

        defPostCombatEffs[2].append(("buff_atk", val, "self_and_allies", "within_2_spaces_self"))
        defPostCombatEffs[2].append(("buff_spd", val, "self_and_allies", "within_2_spaces_self"))
        defPostCombatEffs[2].append(("buff_def", val, "self_and_allies", "within_2_spaces_self"))
        defPostCombatEffs[2].append(("buff_res", val, "self_and_allies", "within_2_spaces_self"))

    if "sotheBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4

        atkPostCombatEffs[2].append(("sp_charge", 1, "self_and_allies", "within_2_spaces_self"))
        atkPostCombatEffs[2].append(("sp_charge", -1, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "sotheBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[SPD] += 4

        defPostCombatEffs[2].append(("sp_charge", 1, "self_and_allies", "within_2_spaces_self"))
        defPostCombatEffs[2].append(("sp_charge", -1, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Arcane Tempest
    if "arcaneTempest" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + max(5, min(trunc(0.25 * defStats[ATK]) - 4, 14)) for x in atkCombatBuffs]
        atkr.DR_first_strikes_NSP.append(30)
        atkr.speed_NFU = True

    if "arcaneTempest" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + max(5, min(trunc(0.25 * atkStats[ATK]) - 4, 14)) for x in defCombatBuffs]
        defr.DR_first_strikes_NSP.append(30)
        defr.speed_NFU = True

    # Bane - Sothe
    if "sotheBane" in atkSkills:
        atkr.bane_sp = True
        atkr.DR_sp_trigger_by_any_special_SP.append(30)

    if "sotheBane" in defSkills:
        defr.bane_sp = True
        defr.DR_sp_trigger_by_any_special_SP.append(30)

    # Caladbolg - Edward
    if "edwardBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + max(5, min(trunc(0.25 * defStats[ATK]), 14)) for x in atkCombatBuffs]
        atkr.offensive_tempo = True
        atkr.damage_reduction_reduction.append(50)
        atkr.sp_jump_foe_first += 1
        atkr.TDR_all_hits += 8
        atkr.TDR_on_foe_sp += 8
        atkr.retaliatory_reduced += 1

    if "edwardBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + max(5, min(trunc(0.25 * atkStats[ATK]), 14)) for x in defCombatBuffs]
        defr.offensive_tempo = True
        defr.damage_reduction_reduction.append(50)
        defr.sp_jump_foe_first += 1
        defr.TDR_all_hits += 8
        defr.TDR_on_foe_sp += 8
        defr.retaliatory_reduced += 1

    # Tome of Favors (Base) - Oliver
    if "oliverBoost" in atkSkills and defender.wpnType not in BEAST_WEAPONS:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[RES] += 5

        atkPostCombatEffs[0].append(("heal", 7, "self", "one"))

    if "oliverBoost" in defSkills and attacker.wpnType not in BEAST_WEAPONS:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[RES] += 5

        defPostCombatEffs[0].append(("heal", 7, "self", "one"))

    # Tome of Favors (Refine Eff) - Oliver
    if "I cannot blame you for wanting to touch something so alluring as myself." in atkSkills and any([ally.wpnType in BEAST_WEAPONS for ally in atkAllyWithin3Spaces]):
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[RES] += 5

    if "I cannot blame you for wanting to touch something so alluring as myself." in defSkills and any([ally.wpnType in BEAST_WEAPONS for ally in defAllyWithin3Spaces]):
        defCombatBuffs[ATK] += 5
        defCombatBuffs[RES] += 5

    # Hawk King Claw (Base) - Tibarn
    if "tibarnFU" in atkSkills and defHPEqual100Percent:
        atkr.follow_ups_skill += 1

    # Hawk King Claw (Refine Base) - Tibarn
    if "tibarnBoost" in atkSkills and (attacker.transformed or defHPGreaterEqual75Percent):
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        atkr.follow_ups_skill += 1

    if "tibarnBoost" in defSkills and (defender.transformed or atkHPGreaterEqual75Percent):
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        defr.follow_ups_skill += 1

    # Hawk King Claw (Refine Eff) - Tibarn
    if "tibarnThatsIt?" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "tibarnThatsIt?" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Sky-Pirate Claw (Base) - PI!Tibarn
    if "piTibarnBoost" in atkSkills and not atkAdjacentToAlly:
        atkCombatBuffs[ATK] += 5
        defCombatBuffs[ATK] -= 5
        atkr.follow_ups_skill += 1

    if "piTibarnBoost" in defSkills and not defAdjacentToAlly:
        defCombatBuffs[ATK] += 5
        atkCombatBuffs[ATK] -= 5
        defr.follow_ups_skill += 1

    # Sky-Pirate Claw (Refine Base) - PI!Tibarn
    if "piTibarnRefine" in atkSkills and (attacker.transformed or len([ally.wpnType not in DRAGON_WEAPONS + BEAST_WEAPONS for ally in atkAdjacentToAlly]) <= 1):
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        defCombatBuffs[ATK] -= 5
        atkr.follow_ups_skill += 1
        atkr.damage_reduction_reduction.append(50)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "piTibarnRefine" in defSkills and (defender.transformed or len([ally.wpnType not in DRAGON_WEAPONS + BEAST_WEAPONS for ally in defAdjacentToAlly]) <= 1):
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        atkCombatBuffs[ATK] -= 5
        defr.follow_ups_skill += 1
        defr.damage_reduction_reduction.append(50)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Sky-Pirate Claw (Refine Eff) - PI!Tibarn
    if "skyPirate" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((ATK, 15))
        atkr.offensive_tempo = True

    if "skyPirate" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages.append((ATK, 15))
        defr.offensive_tempo = True

    # Wolf Queen Fang (Base) - Nailah
    if "nailahBoost" in atkSkills:
        atkCombatBuffs[ATK] += min(len(atkAllyWithin2Spaces) * 2, 6)
        atkCombatBuffs[SPD] += min(len(atkAllyWithin2Spaces) * 2, 6)

    if "nailahBoost" in defSkills:
        defCombatBuffs[ATK] += min(len(defAllyWithin2Spaces) * 2, 6)
        defCombatBuffs[SPD] += min(len(defAllyWithin2Spaces) * 2, 6)

    if "nailahRefineBoost" in atkSkills and (defHPGreaterEqual75Percent or atkAllyWithin3Spaces):
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

        if defHPGreaterEqual75Percent and atkAllyWithin3Spaces:
            defCombatBuffs[ATK] -= 5
            defCombatBuffs[DEF] -= 5

    if "nailahRefineBoost" in defSkills and (atkHPGreaterEqual75Percent or defAllyWithin3Spaces):
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

        if atkHPGreaterEqual75Percent and defAllyWithin3Spaces:
            atkCombatBuffs[ATK] -= 5
            atkCombatBuffs[DEF] -= 5

    if "nailahCanto" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.all_hits_heal += 7

    if "nailahCanto" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.all_hits_heal += 7

    if "glare" in atkSkills:
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.Gravity, "foe_and_foes_allies", "within_1_spaces_foe"))

    if "glare" in defSkills:
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.Gravity, "foe_and_foes_allies", "within_1_spaces_foe"))

    # Bride's Fang (Base) - BR!Nailah
    if "brNailahBoost" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5

    if "brNailahBoost" in defSkills and atkHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5

    if "brNailahRefine" in atkSkills:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.DR_first_strikes_NSP.append(40)

    # Bride's Fang (Refine Base) - BR!Nailah
    if "brNailahRefine" in defSkills and atkHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.DR_first_strikes_NSP.append(40)

    # Bride's Fang (Refine Eff) - BR!Nailah
    if "limitRocket" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 4
        defCombatBuffs[SPD] -= 4
        defCombatBuffs[DEF] -= 4
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))
        atkr.sp_pierce_DR = True

    if "limitRocket" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 4
        atkCombatBuffs[SPD] -= 4
        atkCombatBuffs[DEF] -= 4
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))
        defr.sp_pierce_DR = True

    # Royal Hatari Fang (Base) - DE!Nailah
    if "deNailahBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "deNailahBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # Raven King Beak (Refine Base) - Naesala
    if "naesalaBoost" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.true_stat_damages.append((SPD, 15))

    if "naesalaBoost" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.true_stat_damages.append((SPD, 15))

    if "naesalaStuff" in atkSkills and (attacker.transformed or defHPGreaterEqual75Percent):
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "naesalaStuff" in defSkills and (defender.transformed or atkHPGreaterEqual75Percent):
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Crossbones Claw (Base) - PI!Naesala
    if "piNaesalaBoost" in atkSkills and not atkAdjacentToAlly:
        defCombatBuffs[SPD] -= 6
        defCombatBuffs[DEF] -= 6
        atkr.offensive_NFU = True

        if attacker.transformed:
            atkr.self_desperation = True

    if "piNaesalaBoost" in defSkills and not defAdjacentToAlly:
        atkCombatBuffs[SPD] -= 6
        atkCombatBuffs[DEF] -= 6
        defr.offensive_NFU = True

    # Ebon-Pirate Claw (Base) - PI!Vika
    if "piVikaBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkCombatBuffs[RES] += 5

    if "piVikaBoost" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defCombatBuffs[RES] += 5

    # Covert Cat Fang (Base) - Ranulf
    if "ranulfField" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[ATK] += 3
        atkCombatBuffs[DEF] += 3

    if "ranulfField" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 3
        defCombatBuffs[DEF] += 3

    # Covert Cat Fang (Refine Base) - Ranulf
    if "ranulfField" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "ranulfField" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Covert Cat Fang (Refine Eff) - Ranulf
    if "ranulfDmg" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.true_all_hits += min(len(atkAllyWithin3Spaces) * 3, 15)

    if "ranulfDmg" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.true_all_hits += min(len(defAllyWithin3Spaces) * 3, 15)

    # Brazen Cat Fang (Refine Base) - Lethe
    if "letheBoost" in atkSkills and not atkAdjacentToAlly:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.offensive_NFU = True
        atkr.true_sp += 10

    if "letheBoost" in defSkills and not defAdjacentToAlly:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.offensive_NFU = True
        defr.true_sp += 10

    # Brazen Cat Fang (Refine Eff) - Lethe
    if "letheSpCharge" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

        if attacker.transformed:
            defr.spLossOnAtk -= 1
            defr.spLossWhenAtkd -= 1

    if "letheSpCharge" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

        if attacker.transformed:
            atkr.spLossOnAtk -= 1
            atkr.spLossWhenAtkd -= 1

    # Guardian Fang (Refine Base) - NY!Lethe
    if "nyLetheBoost" in atkSkills or "nyLetheBoostPlus" in atkSkills:
        atkr.stat_scaling_DR.append((SPD, 40))
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if ("nyLetheBoost" in defSkills or "nyLetheBoostPlus" in defSkills) and not defAdjacentToAlly:
        defr.stat_scaling_DR.append((SPD, 40))
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Guardian Fang (Refine Eff) - NY!Lethe
    if "nyLetheBoostPlus" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "nyLetheBoostPlus" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # Hungry Cat Fang - H!Lethe
    if "hLetheBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(len(atkFoeWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.offensive_tempo = True
        atkr.sp_pierce_DR = True

    if "hLetheBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(len(atkFoeWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.offensive_tempo = True
        defr.sp_pierce_DR = True

    # Sabertooth Fang (Refine Base) - Mordecai
    if "mordecaiRefineLink" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5

    if "mordecaiRefineLink" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5

    # Sabertooth Fang (Refine Eff) - Mordecai
    if "mordecaiSPJump" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5

    if "mordecaiSPJump" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5

    # Fiery Fang (Base) - FF!Mordecai
    if "wooooooaaaaaaaaaa" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[DEF] += 6
        defCombatBuffs[ATK] -= trunc(0.20 * atkStats[DEF])
        defCombatBuffs[DEF] -= trunc(0.20 * atkStats[DEF])
        defr.follow_up_denials -= 1

    if "wooooooaaaaaaaaaa" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[DEF] += 6
        atkCombatBuffs[ATK] -= trunc(0.20 * defStats[DEF])
        atkCombatBuffs[DEF] -= trunc(0.20 * defStats[DEF])
        atkr.follow_up_denials -= 1

    # Lion King Fang (Refine Base) - Caineghis
    if "cainDR" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "cainDR" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.DR_second_strikes_NSP.append(70)

    # Lion King Fang (Refine Eff) - Caineghis
    if "The Lion King 1 1/2" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.follow_ups_skill += 1

        if attacker.transformed:
            atkCombatBuffs[ATK] += max(0, min(trunc(0.25 * defStats[ATK]) - 8, 10))
            atkCombatBuffs[DEF] += max(0, min(trunc(0.25 * defStats[ATK]) - 8, 10))
            atkCombatBuffs[RES] += max(0, min(trunc(0.25 * defStats[ATK]) - 8, 10))

    if "The Lion King 1 1/2" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.follow_ups_skill += 1

        if defender.transformed:
            defCombatBuffs[ATK] += max(0, min(trunc(0.25 * atkStats[ATK]) - 8, 10))
            defCombatBuffs[DEF] += max(0, min(trunc(0.25 * atkStats[ATK]) - 8, 10))
            defCombatBuffs[RES] += max(0, min(trunc(0.25 * atkStats[ATK]) - 8, 10))

    # Polished Fang (Base) - NY!Kyza
    if "nyKyzaBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[DEF] += 6

    if "nyKyzaBoost" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[DEF] += 6

    # Sparkling Fang (Base) - NY!Lyre
    if "nyLyreBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

    if "nyLyreBoost" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

    # Wild Tiger Fang (Base) - FA!Muarim
    if "faMuarimBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

    if "faMuarimBoost" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

    # Tempest's Claw (Refine EfF) - Haar
    if "haarBoost" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        atkr.TDR_stats.append((DEF, 15))
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "haarBoost" in defSkills:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        defr.TDR_stats.append((DEF, 15))
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Daniel-Made Bow (Refine Eff) - Jorge
    if "WE'RE ALL GOING DOWN TO MEMPHIS" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5

    if "WE'RE ALL GOING DOWN TO MEMPHIS" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5

    # AWAKENING

    # Sealed Falchion (Base) - Awakening Falchion users + P!Chrom
    if "sealedFalchion" in atkSkills and not atkHPEqual100Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

    if "sealedFalchion" in defSkills and not atkHPEqual100Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

    # Sealed Falchion (Refine Eff) - Awakening Falchion users + P!Chrom
    if "I CANT STOP THIS THING" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkCombatBuffs[DEF] += 5
        defr.follow_up_denials -= 1

    if "I CANT STOP THIS THING" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defCombatBuffs[DEF] += 5
        atkr.follow_up_denials -= 1

    # Randgríðr (Base) - L!Chrom
    if "LChromBoost" in atkSkills and defHPEqual100Percent:
        atkPenaltiesNeutralized = [True] * 5
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[DEF] -= 6

    if "LChromBoost" in defSkills and atkHPEqual100Percent:
        defPenaltiesNeutralized = [True] * 5
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[DEF] -= 6

    # Randgríðr (Refine Base) - L!Chrom
    if "LChromRefine" in atkSkills and defHPGreaterEqual75Percent:
        atkPenaltiesNeutralized = [True] * 5
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[DEF] -= 6

    if "LChromRefine" in defSkills and atkHPGreaterEqual75Percent:
        defPenaltiesNeutralized = [True] * 5
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[DEF] -= 6

    # Destiny's Bow (Base) - V!Chrom
    if "vChromBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1

    if "vChromBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1

    # Carrot Lance/Axe+ and Blue/Green Egg+ (Refine)
    if "easterHealB" in atkSkills:
        atkPostCombatEffs[2].append(("heal", 4, "self", "one"))
    if "easterHealB" in defSkills:
        defPostCombatEffs[2].append(("heal", 4, "self", "one"))

    if "summerPush" in atkSkills and atkHPEqual100Percent:
        atkCombatBuffs = [x + 2 for x in atkCombatBuffs]
        atkPostCombatEffs[2].append(("damage", 2, "self", "one"))

    if "summerPush" in defSkills and defHPEqual100Percent:
        defCombatBuffs = [x + 2 for x in defCombatBuffs]
        defPostCombatEffs[2].append(("damage", 2, "self", "one"))

    # Expiration (Refine Eff) - M!Grima/F!Grima
    if "evilRobinBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defr.spLossWhenAtkd -= 1
        defr.spLossWhenAtkd -= 1

    if "evilRobinBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkr.spLossWhenAtkd -= 1
        atkr.spLossWhenAtkd -= 1

    # Dragonskin II (F!Grima)
    if "dragonskin" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 6 for x in atkCombatBuffs]
        defBonusesNeutralized = [True] * 5

    if "dragonskin" in defSkills:
        defCombatBuffs = [x + 6 for x in defCombatBuffs]
        atkBonusesNeutralized = [True] * 5

    # Moonless Breath (Base) - H!F!Grima
    if "hfGrimaSurge" in atkSkills and atkAllyWithin2Spaces:
        atkr.surge_heal += trunc(atkStats[HP] * 0.30)

    if "hfGrimaSurge" in defSkills and defAllyWithin2Spaces:
        defr.surge_heal += trunc(defStats[HP] * 0.30)

    # Moonless Breath (Refine Base) - H!F!Grima
    if "hfGrimaRefine" in atkSkills and atkAllyWithin3Spaces:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        defCombatBuffs[RES] -= 5
        atkr.deep_wounds_allowance.append(50)
        atkr.true_sp += 10
        atkr.sp_pierce_DR = True
        atkr.surge_heal += trunc(atkStats[HP] * 0.50)

    if "hfGrimaRefine" in defSkills and defAllyWithin3Spaces:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        atkCombatBuffs[RES] -= 5
        defr.deep_wounds_allowance.append(50)
        defr.true_sp += 10
        defr.sp_pierce_DR = True
        defr.surge_heal += trunc(atkStats[HP] * 0.50)

    # Moonless Breath (Refine Eff) - H!F!Grima
    if "hfGrimaScowl" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5 + trunc(0.10 * atkStats[RES])
        atkCombatBuffs[DEF] -= 5 + trunc(0.10 * atkStats[RES])
        atkCombatBuffs[RES] -= 5 + trunc(0.10 * atkStats[RES])
        atkr.TDR_stats.append((RES, 20))

    if "hfGrimaScowl" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5 + trunc(0.10 * defStats[RES])
        defCombatBuffs[DEF] -= 5 + trunc(0.10 * defStats[RES])
        defCombatBuffs[RES] -= 5 + trunc(0.10 * defStats[RES])
        defr.TDR_stats.append((RES, 20))

    if "hfGrimaScowl_f" in atkSkills and defSpTriggeredByAttack:
        defr.sp_jump_first -= atkSkills["hfGrimaScowl_f"]

    if "hfGrimaScowl_f" in defSkills and atkSpTriggeredByAttack:
        atkr.sp_jump_first -= defSkills["hfGrimaScowl_f"]

    # Dragonscale - H!F!Grima
    if "dragonscale" in atkSkills and defHPEqual100Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[RES] -= 6
        atkr.spGainWhenAtkd += 1

    if "dragonscale" in defSkills:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[RES] -= 6
        defr.spGainWhenAtkd += 1

    # Moonstrike Breath (Base) - H!M!Grima
    if "hmGrimaSurge" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[ATK] += 6
        defCombatBuffs[ATK] -= 6
        atkr.surge_heal += trunc(atkStats[HP] * 0.30)

    if "hmGrimaSurge" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        atkCombatBuffs[ATK] -= 6
        defr.surge_heal += trunc(atkStats[HP] * 0.30)

    # Achimenes Furl (Base) - V!F!Robin
    if "vRobinRein" in atkSkills:
        atkCombatBuffs[ATK] -= atkSkills["vRobinRein"]
        atkCombatBuffs[DEF] -= atkSkills["vRobinRein"]
        atkCombatBuffs[RES] -= atkSkills["vRobinRein"]

    if "vRobinRein" in defSkills:
        defCombatBuffs[ATK] -= defSkills["vRobinRein"]
        defCombatBuffs[DEF] -= defSkills["vRobinRein"]
        defCombatBuffs[RES] -= defSkills["vRobinRein"]

    if "vRobinEffects" in atkSkills:
        ally_move_counts = {0: 0, 1: 0, 2: 0, 3: 0}
        move_types = 0

        for ally in atkAllAllies:
            if ally_move_counts[ally.move] == 0:
                move_types += 1

            ally_move_counts[ally.move] += 1

        if move_types >= 2:
            atkr.DR_first_hit_NSP.append(30)

    if "vRobinEffects" in defSkills:
        ally_move_counts = {0: 0, 1: 0, 2: 0, 3: 0}
        move_types = 0

        for ally in defAllAllies:
            if ally_move_counts[ally.move] == 0:
                move_types += 1

            ally_move_counts[ally.move] += 1

        if move_types >= 2:
            defr.DR_first_hit_NSP.append(30)

    if "vRobinHeal" in atkSkills:
        atkr.all_hits_heal += atkSkills["vRobinHeal"]

    if "vRobinHeal" in defSkills:
        defr.all_hits_heal += atkSkills["vRobinHeal"]

    # Arcane Grima (Base) - R!F!Grima
    if "arcaneGrima" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkr.true_stat_damages.append((ATK, 15))
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "arcaneGrima" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defr.true_stat_damages.append((ATK, 15))
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Dragonhide - R!F!Grima
    if "A bunch things" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs = [x - 8 for x in defCombatBuffs]
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "A bunch things" in defSkills:
        atkCombatBuffs = [x - 8 for x in atkCombatBuffs]
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Master's Tactics (Base) - L!M!Robin
    if "THIS IS THE GREATEST PLAAAAAN" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs = [x - 5 for x in defCombatBuffs]
        defr.follow_up_denials -= 1

    if "THIS IS THE GREATEST PLAAAAAN" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs = [x - 5 for x in atkCombatBuffs]
        atkr.follow_up_denials -= 1

    # Deliverer's Brand (Base) - B!M!Robin
    if "checkmate" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.DR_first_hit_NSP.append(40)
        atkr.offensive_tempo = True
        atkr.defensive_tempo = True

        if attacker.specialMax >= 3 and atkSpTriggeredByAttack:
            atkr.sp_pierce_DR = True

        if attacker.special and attacker.special.name in ["Glowing Ember", "Bonfire", "Ignis"]:
            atkr.special_hexblade = True

    if "checkmate" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.DR_first_hit_NSP.append(40)
        defr.offensive_tempo = True
        defr.defensive_tempo = True

        if defender.specialMax >= 3 and defSpTriggeredByAttack:
            defr.sp_pierce_DR = True

        if defender.special and defender.special.name in ["Glowing Ember", "Bonfire", "Ignis"]:
            defr.special_hexblade = True

    # Tip the Scales! - B!M!Robin
    if "tipTheScales" in atkSkills and atkAllyWithin2Spaces: atkCombatBuffs = [x + 3 for x in atkCombatBuffs]
    if "tipTheScales" in defSkills and defAllyWithin2Spaces: defCombatBuffs = [x + 3 for x in defCombatBuffs]

    if Status.RallySpectrum in attacker.statusPos:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        if atkSpTriggeredByAttack:
            if "slaying" in atkSkills and atkSkills["slaying"] >= 0:
                atkr.sp_jump_first += 1
            else:
                atkr.sp_jump_first += 2

    if Status.RallySpectrum in defender.statusPos:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        if defSpTriggeredByAttack:
            if "slaying" in defSkills and defSkills["slaying"] >= 0:
                defr.sp_jump_first += 1
            else:
                defr.sp_jump_first += 2

    # Fell War Tome - CH!M!Robin
    if "fellWarTome" in atkSkills:
        X = 8 if defender.specialMax != -1 else max(16 - defender.specialMax * 2, 8)
        atkCombatBuffs = [x + X for x in atkCombatBuffs]
        atkr.DR_first_strikes_NSP.append(30)
        atkr.offensive_tempo = True

        if attacker.specialMax >= 3:
            atkr.sp_pierce_DR = True

        atkPostCombatEffs[GIVEN_UNIT_SURVIVED].append(("dv_flame", 1, "foe", "one"))

    if "fellWarTome" in defSkills and defAllyWithin2Spaces:
        X = 8 if attacker.specialMax != -1 else max(16 - attacker.specialMax * 2, 8)
        defCombatBuffs = [x + X for x in defCombatBuffs]
        defr.DR_first_strikes_NSP.append(30)
        defr.offensive_tempo = True

    # Draconic Pacts - CH!F!Robin
    if "chFRobinBoost" in atkSkills:
        X = 8 if defender.specialMax != -1 else max(16 - defender.specialMax * 2, 8)
        atkCombatBuffs = [x + X for x in atkCombatBuffs]
        atkr.DR_first_strikes_NSP.append(30)
        atkr.offensive_tempo = True

    if "chFRobinBoost" in defSkills and defAllyWithin2Spaces:
        X = 8 if attacker.specialMax != -1 else max(16 - attacker.specialMax * 2, 8)
        defCombatBuffs = [x + X for x in defCombatBuffs]
        defr.DR_first_strikes_NSP.append(30)
        defr.offensive_tempo = True

    if Status.HushSpectrum in attacker.statusPos:
        atkCombatBuffs = [x - 5 for x in atkCombatBuffs]

        if atkSpTriggeredByAttack:
            atkr.sp_jump_first -= 1

        if "slaying" in atkSkills and atkSkills["slaying"] >= 0 and defSpTriggeredByAttack:
            defr.sp_jump_foe_first += 1

    if Status.HushSpectrum in defender.statusPos:
        defCombatBuffs = [x - 5 for x in defCombatBuffs]

        if defSpTriggeredByAttack:
            defr.sp_jump_first -= 1

        if "slaying" in defSkills and defSkills["slaying"] >= 0 and atkSpTriggeredByAttack:
            defr.sp_jump_foe_first += 1

    # Fell Wyrmscale - CH!F!Robin
    if "fellWyrmscale" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 8 for x in atkCombatBuffs]
        defBonusesNeutralized = [True] * 5
        atkr.true_stat_damages.append((ATK, 15))
        atkr.sp_pierce_DR = True
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "fellWyrmscale" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 8 for x in defCombatBuffs]
        atkBonusesNeutralized = [True] * 5
        defr.true_stat_damages.append((ATK, 15))
        defr.sp_pierce_DR = True
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Exalt's Tactics - B!F!Robin
    if "exaltsTactics" in atkSkills and atkHPGreaterEqual25Percent:
        X = min(len(atkAllyWithin3RowsCols) * 3 + 5, 14)
        defCombatBuffs[ATK] -= X
        defCombatBuffs[SPD] -= X
        defCombatBuffs[RES] -= X
        atkr.offensive_tempo = True
        atkr.sp_pierce_DR = True

    if "exaltsTactics" in defSkills and defHPGreaterEqual25Percent:
        X = min(len(defAllyWithin3RowsCols) * 3 + 5, 14)
        atkCombatBuffs[ATK] -= X
        atkCombatBuffs[SPD] -= X
        atkCombatBuffs[RES] -= X
        defr.offensive_tempo = True
        defr.sp_pierce_DR = True

    # According to Plan - B!F!Robin
    if "accordingToPlan" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[RES] -= 5

        X = len(attacker.statusPos) + len(defender.statusNeg)
        atkr.true_all_hits += min(X * 5, 25)
        atkr.TDR_first_strikes += min(X * 3, 15)

    if "accordingToPlan" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[RES] -= 5

        X = len(defender.statusPos) + len(attacker.statusNeg)
        defr.true_all_hits += min(X * 5, 25)
        defr.TDR_first_strikes += min(X * 3, 15)

    # Despairing Breath - P!F!Grima
    if "despairingBreath" in atkSkills and atkHPGreaterEqual25Percent:
        X = min(len(atkFoeWithin3RowsCols) * 3 + 5, 14)
        defCombatBuffs[ATK] -= X
        defCombatBuffs[DEF] -= X
        defCombatBuffs[RES] -= X

        atkr.true_stat_damages.append((RES, 20))
        atkr.TDR_stats.append((RES, 20))
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "despairingBreath" in defSkills:
        X = 14 if savior_triggered else min(len(atkFoeWithin3RowsCols) * 3 + 5, 14)
        atkCombatBuffs[ATK] -= X
        atkCombatBuffs[DEF] -= X
        atkCombatBuffs[RES] -= X

        defr.true_stat_damages.append((RES, 20))
        defr.TDR_stats.append((RES, 20))
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Grima's Truth (Base) - M!Morgan
    if "morganCombatDebuff" in atkSkills:
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("debuff_atk", 5, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("debuff_spd", 5, "foe_and_foes_allies", "within_2_spaces_foe"))

        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("buff_atk", 5, "self_and_allies", "within_2_spaces_self"))
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("buff_spd", 5, "self_and_allies", "within_2_spaces_self"))

    if "morganCombatDebuff" in defSkills:
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("debuff_atk", 5, "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("debuff_spd", 5, "foe_and_foes_allies", "within_2_spaces_foe"))

        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("buff_atk", 5, "self_and_allies", "within_2_spaces_self"))
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("buff_spd", 5, "self_and_allies", "within_2_spaces_self"))

    # Father's Tactics (Refine Eff) - F!Morgan
    if "morganJointDrive" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[ATK] += 3
        atkCombatBuffs[SPD] += 3

    if "morganJointDrive" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 3
        defCombatBuffs[SPD] += 3

    # Tome of Despair (Refine Base) - FA!M!Morgan
    if "faMMorganBoost" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[RES] -= 6
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[RES] = True

    if "faMMorganBoost" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[RES] -= 6
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[RES] = True

    # Geirskögul (Base) - B!Lucina
    if "lucinaDrive_f" in atkSkills:
        atkCombatBuffs[ATK] += atkSkills["lucinaDrive_f"]
        atkCombatBuffs[SPD] += atkSkills["lucinaDrive_f"]

    if "lucinaDrive_f" in defSkills:
        defCombatBuffs[ATK] += defSkills["lucinaDrive_f"]
        defCombatBuffs[SPD] += defSkills["lucinaDrive_f"]

    # Geirskögul (Refine Eff) - B!Lucina
    if "refinedLucinaDrive_f" in atkSkills:
        atkCombatBuffs[DEF] += atkSkills["refinedLucinaDrive_f"]
        atkCombatBuffs[RES] += atkSkills["refinedLucinaDrive_f"]
        atkr.spGainWhenAtkd += 1
        atkr.spGainOnAtk += 1

    if "refinedLucinaDrive_f" in defSkills:
        defCombatBuffs[DEF] += defSkills["refinedLucinaDrive_f"]
        defCombatBuffs[RES] += defSkills["refinedLucinaDrive_f"]
        defr.spGainWhenAtkd += 1
        defr.spGainOnAtk += 1

    # Thögn (Base) - L!Lucina
    if "legendLucinaBoost" in atkSkills and defender.wpnType in MELEE_WEAPONS:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "legendLucinaBoost" in defSkills and attacker.wpnType in MELEE_WEAPONS:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Thögn (Refine Base) - L!Lucina
    if "peppaPigAdversary" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "peppaPigAdversary" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Gerbera Axe (Base) - V!Lucina
    if "vLucinaBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.DR_first_hit_NSP.append(40)

    if "vLucinaBoost" in defSkills:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.DR_first_hit_NSP.append(40)

    # Ylisse Ninja Bow - NI!Lucina
    if "niLucinaBoost" in atkSkills:
        atkCombatBuffs = [x + 5 + trunc(atkStats[SPD] * 0.15) for x in atkCombatBuffs]
        atkr.true_all_hits += min((len(attacker.statusPos) + len(defender.statusNeg)) * 5, 25)
        atkr.damage_reduction_reduction.append(50)
        atkr.offensive_tempo = True

        if atkSpTriggeredByAttack:
            atkr.triggered_sp_charge += 1

    if "niLucinaBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 + trunc(defStats[SPD] * 0.15) for x in defCombatBuffs]
        atkr.true_all_hits += min((len(defender.statusPos) + len(attacker.statusNeg)) * 5, 25)
        defr.damage_reduction_reduction.append(50)
        defr.offensive_tempo = True

        if defSpTriggeredByAttack:
            defr.triggered_sp_charge += 1

    if Status.FutureWitness in attacker.statusPos:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.TDR_first_strikes += 7

        if defSpTriggeredByAttack:
            defr.sp_jump_first -= 1

    if Status.FutureWitness in defender.statusPos:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.TDR_first_strikes += 7

        if atkSpTriggeredByAttack:
            atkr.sp_jump_first -= 1

    # Missiletainn (Owain)
    if "BY MISSILETAINN!!!" in atkSkills:
        atkr.spGainWhenAtkd += 1

    if "BY MISSILETAINN!!!" in defSkills:
        defr.spGainWhenAtkd += 1

    if "average_owain" in atkSkills and defHPGreaterEqual50Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "average_owain" in defSkills and atkHPGreaterEqual50Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Owain
    if "Sacred Stones Strike!" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkSkills.update({"spMissiletainn": 0})

    if "Sacred Stones Strike!" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defSkills.update({"spMissiletainn": 0})

    # Apotheosis Spear (Base) - Awakening Anna
    if "On the house" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "On the house" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Apotheosis Spear (Refine Base) - Awakening Anna
    if "One time offer, restrictions may apply" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkCombatBuffs[DEF] += 4
        atkCombatBuffs[RES] += 4
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "One time offer, restrictions may apply" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defCombatBuffs[DEF] += 4
        defCombatBuffs[RES] += 4
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Apotheosis Spear (Refine Eff) - Awakening Anna
    if "NO REFUNDS" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(len(attacker.statusPos) * 2 + 4, 12) for x in atkCombatBuffs]
        atkPenaltiesNeutralized = [True] * 5
        atkr.true_stat_damages.append((SPD, 15))

    if "NO REFUNDS" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(len(defender.statusPos) * 2 + 4, 12) for x in defCombatBuffs]
        defPenaltiesNeutralized = [True] * 5
        defr.true_stat_damages.append((SPD, 15))

    # Heartbroker Bow - BR!Anna
    if "brAnnaBoost" in atkSkills:
        atkCombatBuffs = [x + min(5 + attacker.flowers, 10) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 15))
        atkr.offensive_NFU = True

    if "brAnnaBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + min(5 + defender.flowers, 10) for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 15))
        defr.offensive_NFU = True

    # New War Axe - CH!Lissa
    if "Who does?" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += min(max(5, trunc(0.25 * defStats[ATK])), 14)
        atkCombatBuffs[DEF] += min(max(5, trunc(0.25 * defStats[ATK])), 14)
        atkCombatBuffs[RES] += min(max(5, trunc(0.25 * defStats[ATK])), 14)
        atkr.offensive_tempo = True
        atkr.defensive_tempo = True
        atkr.deep_wounds_allowance.append(50)
        atkr.DR_second_strikes_NSP.append(80)
        atkSkills.update({"newWarAxeSP": attacker.specialMax})

    if "Who does?" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += min(max(5, trunc(0.25 * atkStats[ATK])), 14)
        defCombatBuffs[DEF] += min(max(5, trunc(0.25 * atkStats[ATK])), 14)
        defCombatBuffs[RES] += min(max(5, trunc(0.25 * atkStats[ATK])), 14)
        defr.offensive_tempo = True
        defr.defensive_tempo = True
        defr.deep_wounds_allowance.append(50)
        defr.DR_second_strikes_NSP.append(80)
        defSkills.update({"newWarAxeSP": defender.specialMax})

    # Exalt's War Staff - CH!Emmeryn
    if "chEmmerynBoost" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[RES] += 6
        atkr.follow_ups_skill += 1
        atkr.true_stat_damages.append((RES, 20))

    if "chEmmerynBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[RES] += 6
        defr.follow_ups_skill += 1
        defr.true_stat_damages.append((RES, 20))

    # Heavy War Axe - CH!Frederick
    if "He's gotta get his head in the game." in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkr.true_stat_damages.append((DEF, 20))
        atkr.DR_all_hits_NSP.append(30)

    if "He's gotta get his head in the game." in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defr.true_stat_damages.append((DEF, 20))
        defr.DR_all_hits_NSP.append(30)

    # Cordelia's Lance
    if "cordeliaLance" in atkSkills and atkHPCur / atkStats[HP] >= 0.70:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4

    # Inseverable Spear (Base) - WI!Cordelia
    if "is chrismaaas" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "is chrismaaas" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    if Status.DualStrike in attacker.statusPos and Status.Schism not in attacker.statusNeg:
        count = 0

        for ally in atkAdjacentToAlly:
            if Status.DualStrike in ally.statusPos and Status.Schism not in ally.statusNeg:
                count += 1

        if count >= 1:
            atkr.brave = True

    # Gullinkambi Egg (Base) - SP!Severa
    if "spSeveraBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

        if attacker.unitCombatInitiates > 0 or [ally for ally in atkAllAllies if ally.unitCombatInitiates > 0]:
            atkr.brave = True

    if "spSeveraBoost" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

    # Striving Sword - Severa
    if "severaBlade" in atkSkills and atkAllyWithin3Spaces:
        X = max(5, min(trunc(0.25 * defStats[ATK]) - 4, 14))
        atkCombatBuffs = [x + X for x in atkCombatBuffs]
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

        if atkSpTriggeredByAttack:
            atkr.sp_pierce_DR = True
        elif attacker.getSpecialType() == "Defense":
            atkr.sp_pierce_after_def_sp = True

    if "severaBlade" in defSkills and defAllyWithin3Spaces:
        X = max(5, min(trunc(0.25 * atkStats[ATK]) - 4, 14))
        defCombatBuffs = [x + X for x in defCombatBuffs]
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

        if defSpTriggeredByAttack:
            defr.sp_pierce_DR = True
        elif defender.getSpecialType() == "Defense":
            defr.sp_pierce_after_def_sp = True

    # Flower Lance (Base) - Sumia
    if "sumiaBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "sumiaBoost" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    if "sumiaMovement" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "sumiaMovement" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Lance of Heroics (Base) - Cynthia
    if "weMovingPlenty" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 + min(spaces_moved_by_atkr * 2, 8) for x in atkCombatBuffs]

    if "weMovingPlenty" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 + min(spaces_moved_by_atkr * 2, 8) for x in defCombatBuffs]

    # Blessed Bouquet/First Bite/Cupid Arrow (Refine)
    if "bridalBuffsB" in atkSkills:
        atkPostCombatEffs[2].append(("buff_def", 5, "self_and_allies", "within_2_spaces_self"))
        atkPostCombatEffs[2].append(("buff_res", 5, "self_and_allies", "within_2_spaces_self"))

    if "bridalBuffsB" in defSkills:
        defPostCombatEffs[2].append(("buff_def", 5, "self_and_allies", "within_2_spaces_self"))
        defPostCombatEffs[2].append(("buff_res", 5, "self_and_allies", "within_2_spaces_self"))

    # Hewn Lance - Donnel
    if "donnelBoost" in atkSkills:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[DEF] += 4
        defr.follow_up_denials -= 1

    # Candied Dagger - Gaius
    if "gaius_candy" in atkSkills:
        atkCombatBuffs[SPD] += 4
        atkr.true_stat_damages.append((SPD, 10))

    if "gaius_damage_ref" in atkSkills and defHPEqual100Percent:
        atkr.true_all_hits += 7

    # Corvus Tome (Refine Eff) - Henry
    if "henryLowAtkBoost" in atkSkills and defStats[ATK] + defPhantomStats[ATK] >= atkStats[ATK] + atkPhantomStats[ATK] + 3:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[RES] -= 6
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "henryLowAtkBoost" in defSkills and atkStats[ATK] + atkPhantomStats[ATK] >= defStats[ATK] + defPhantomStats[ATK] + 3:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[RES] -= 6
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Inviolable Axe (Base) - Libra
    if "libraDebuff" in atkSkills:
        defCombatBuffs[ATK] -= 4
        defCombatBuffs[SPD] -= 4
        defCombatBuffs[DEF] -= 4
        atkr.true_all_hits += 7

    if "libraDebuff" in defSkills and defAllyWithin2Spaces:
        atkCombatBuffs[ATK] -= 4
        atkCombatBuffs[SPD] -= 4
        atkCombatBuffs[DEF] -= 4
        defr.true_all_hits += 7

    if "libraHealing" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 4
        defCombatBuffs[SPD] -= 4
        defCombatBuffs[DEF] -= 4
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self_and_allies", "within_2_spaces"))

    if "libraHealing" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 4
        atkCombatBuffs[SPD] -= 4
        atkCombatBuffs[DEF] -= 4
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self_and_allies", "within_2_spaces"))

    # Wyvern Ono (Base) - NI!Cherche
    if "niChercheDmg" in atkSkills:
        atkr.true_stat_damages.append((DEF, 20))
        atkr.TDR_stats.append((DEF, 20))

    if "niChercheDmg" in defSkills:
        defr.true_stat_damages.append((DEF, 20))
        defr.TDR_stats.append((DEF, 20))

    # Purifying Breath - Nowi
    if "nowiBoost" in atkSkills and atkHPGreaterEqual50Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkPenaltiesNeutralized = [True] * 5

    if "nowiBoost" in defSkills and defHPGreaterEqual50Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defPenaltiesNeutralized = [True] * 5

    # Grimoire (Refine) - Nowi
    if "nowiSchmovement" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4

    if "nowiSchmovement" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[SPD] += 4

    # Grimoire (Refine Eff) - H!Nowi
    if "nowiField_f" in atkSkills:
        atkCombatBuffs[ATK] -= atkSkills["nowiField"]
        atkCombatBuffs[SPD] -= atkSkills["nowiField"]
        atkCombatBuffs[RES] -= atkSkills["nowiField"]

    if "nowiField_f" in defSkills:
        defCombatBuffs[ATK] -= defSkills["nowiField"]
        defCombatBuffs[SPD] -= defSkills["nowiField"]
        defCombatBuffs[RES] -= defSkills["nowiField"]

    # Múspell Fireposy (Refine Base) - BR!Tharja
    if "BRTharjaBoost" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 5 + min(2 * len(atkAllyWithin3Spaces), 4)
        atkCombatBuffs[SPD] += 5

    if "BRTharjaBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 5 + min(2 * len(defAllyWithin3Spaces), 4)
        defCombatBuffs[SPD] += 5

    # Múspell Fireposy (Refine Eff) - BR!Tharja
    if "complexRein1_f" in atkSkills:
        atkCombatBuffs[SPD] -= atkSkills["complexRein1_f"]
        atkCombatBuffs[RES] -= atkSkills["complexRein1_f"]

    if "complexRein2_f" in atkSkills:
        atkCombatBuffs[SPD] -= atkSkills["complexRein2_f"]
        atkCombatBuffs[RES] -= atkSkills["complexRein2_f"]

    if "complexRein3_f" in atkSkills:
        atkCombatBuffs[SPD] -= atkSkills["complexRein3_f"]
        atkCombatBuffs[RES] -= atkSkills["complexRein3_f"]

    if "complexRein1_f" in defSkills:
        defCombatBuffs[SPD] -= defSkills["complexRein1_f"]
        defCombatBuffs[RES] -= defSkills["complexRein1_f"]

    if "complexRein2_f" in defSkills:
        defCombatBuffs[SPD] -= defSkills["complexRein2_f"]
        defCombatBuffs[RES] -= defSkills["complexRein2_f"]

    if "complexRein3_f" in defSkills:
        defCombatBuffs[SPD] -= defSkills["complexRein3_f"]
        defCombatBuffs[RES] -= defSkills["complexRein3_f"]

    # Scroll of Curses - NI!Tharja
    if "niTharjaBoost" in atkSkills:
        atkr.self_desperation = True
        atkCombatBuffs[ATK] += 6 + trunc(0.20 * atkStats[SPD])
        atkCombatBuffs[SPD] += 6 + trunc(0.20 * atkStats[SPD])

    if "niTharjaBoost" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 6 + trunc(0.20 * defStats[SPD])
        defCombatBuffs[SPD] += 6 + trunc(0.20 * defStats[SPD])

    # Kindred Tome - X!Tharja
    if "kindredTome" in atkSkills:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[SPD] = True

        X = min(len(attacker.statusPos) + len(defender.statusNeg), 5)
        atkr.true_all_hits += 5 * X
        atkr.TDR_all_hits += 3 * X
        atkr.defensive_NFU = True
        atkr.damage_reduction_reduction.append(50)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "kindredTome" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + min(len(defAllyWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[SPD] = True

        X = min(len(defender.statusPos) + len(attacker.statusNeg), 5)
        defr.true_all_hits += 5 * X
        defr.TDR_all_hits += 3 * X
        defr.defensive_NFU = True
        defr.damage_reduction_reduction.append(50)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "kindredLull" in atkSkills:
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[SPD] = True

    if "kindredLull" in defSkills:
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[SPD] = True

    # Already Dead - X!Tharja
    if "omae wa mou shindeiru" in atkSkills:
        X = 0

        for ally in atkAllAllies:
            if Status.Anathema in ally.statusPos:
                X += 1

        X = min(X, 3)

        atkr.sp_jump_first += X
        atkr.DR_all_hits_NSP.append(20 * X)
        atkr.TDR_all_hits += 3 * X

        if X >= 2:
            defr.special_disabled = True

    if "omae wa mou shindeiru" in defSkills and defAllyWithin3Spaces:
        X = 0

        for ally in defAllAllies:
            if Status.Anathema in ally.statusPos:
                X += 1

        X = min(X, 3)

        defr.sp_jump_first += X
        defr.DR_all_hits_NSP.append(20 * X)
        defr.TDR_all_hits += 3 * X

        if X >= 2:
            atkr.special_disabled = True

    # Arcane Hex Bow
    if "hexbow" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + max(5, min(trunc(0.25 * defStats[ATK]) - 4, 14)) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((ATK, 15))
        atkr.TDR_first_strikes += 7
        atkr.sp_jump_first += 1

    if "hexbow" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + max(5, min(trunc(0.25 * atkStats[ATK]) - 4, 14)) for x in defCombatBuffs]
        defr.true_stat_damages.append((ATK, 15))
        defr.TDR_first_strikes += 7
        defr.sp_jump_first += 1

    # Blood & Thunder - Noire
    if "bloodAndThunder" in atkSkills:
        atkr.DR_all_hits_NSP.append(60)
        atkr.TDR_all_hits += 9
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))
        defr.special_disabled = True

    if "bloodAndThunder" in defSkills and Status.Anathema in defender.statusPos:
        defr.DR_all_hits_NSP.append(60)
        defr.TDR_all_hits += 9
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "exposureField" in atkSkills: defr.true_all_hits += atkSkills["exposureField"]
    if "exposureField" in defSkills: atkr.true_all_hits += defSkills["exposureField"]

    # Masking Axe (Base) - Gerome
    if "geromeBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5

    if "geromeBoost" in defSkills:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5

    # Masking Axe (Refine Eff) - Gerome
    if "geromeBuff" in atkSkills and not atkAdjacentToAlly:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5

    if "geromeBuff" in defSkills and not defAdjacentToAlly:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5

    # Lioness Blade (Base) - Flavia
    if "lioness" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.sp_pierce_DR = True
        if defHPGreaterEqual75Percent:
            atkr.spGainWhenAtkd += 1
            atkr.spGainOnAtk += 1

    if "lioness" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.sp_pierce_DR = True
        if atkHPGreaterEqual75Percent:
            defr.spGainWhenAtkd += 1
            defr.spGainOnAtk += 1

    # Hearbeat Lance (Base) - Kjelle
    if "MR KRABS I WANNA GO TO BED" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        defr.follow_up_denials -= 1

    if "MR KRABS I WANNA GO TO BED" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        atkr.follow_up_denials -= 1

    if "kjelleDeboost" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5

        X = 0

        if atkHPCur > defHPCur: X += 1

        for i in range(1, 5):
            if atkStats[i] + atkPhantomStats[i] > defStats[i] + defPhantomStats[i]:
                X += 1

        defCombatBuffs[ATK] -= trunc((0.05 * X + 0.10) * defStats[ATK])

    if "kjelleDeboost" in defSkills and atkHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5

        X = 0

        if defHPCur > atkHPCur: X += 1

        for i in range(1, 5):
            if defStats[i] + defPhantomStats[i] > atkStats[i] + atkPhantomStats[i]:
                X += 1

        atkCombatBuffs[ATK] -= trunc((0.05 * X + 0.10) * atkStats[ATK])

    if "walhartBoost" in atkSkills and len(atkFoeWithin2Spaces) - 1 <= len(atkAllyWithin2Spaces):
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "walhartBoost" in defSkills and len(defFoeWithin2Spaces) - 1 <= len(defAllyWithin2Spaces):
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    if "walhartBolster" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "walhartBolster" in defSkills and not defAdjacentToAlly:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    if "as I type this I have a 102 fever lol" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5

    if "as I type this I have a 102 fever lol" in defSkills and atkHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5

    # Aversa's Night (Base Refine) - Aversa
    if "aversaSabotage" in atkSkills and atkSkills["aversaSabotage"] == 4:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[RES] -= 5

    if "aversaSabotage" in defSkills and defSkills["aversaSabotage"] == 4:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[RES] -= 5

    # Plegian War Axe (Base) - Mustafa
    if "mustafaBoost" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1

    if "mustafaBoost" in defSkills and defAllyWithin2Spaces:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1

    if "The Fortnite Cube, Kevin" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.true_stat_damages_from_foe.append((ATK, 15))
        atkr.DR_first_strikes_NSP.append(40)

    if "The Fortnite Cube, Kevin" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.true_stat_damages_from_foe.append((ATK, 15))
        defr.DR_first_strikes_NSP.append(40)

    # Taguel Fang (Base) - Panne
    if "panneBoost" in atkSkills or "panneBoost2" in atkSkills:
        cond = True

        for ally in atkAdjacentToAlly:
            if ally.wpnType not in BEAST_WEAPONS:
                cond = False
                break

        if cond and "panneBoost" in atkSkills:
            atkCombatBuffs = [x + 3 for x in atkCombatBuffs]
        elif cond and "panneBoost2" in atkSkills:
            atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
            defr.spGainOnAtk -= 1
            defr.spGainWhenAtkd -= 1

    if "panneBoost" in defSkills or "panneBoost2" in defSkills:
        cond = True

        for ally in defAdjacentToAlly:
            if ally.wpnType not in BEAST_WEAPONS:
                cond = False
                break

        if cond and "panneBoost" in defSkills:
            defCombatBuffs = [x + 3 for x in defCombatBuffs]
        elif cond and "panneBoost2" in defSkills:
            defCombatBuffs = [x + 4 for x in defCombatBuffs]
            atkr.spGainOnAtk -= 1
            atkr.spGainWhenAtkd -= 1

    if "panneStuff" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "panneStuff" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Keen Rabbit Fang (Base) - NY!Panne
    if "nyPanneBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.offensive_NFU = True
        atkr.DR_first_hit_NSP.append(40)

    if "nyPanneBoost" in defSkills and not defAdjacentToAlly:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.offensive_NFU = True
        defr.DR_first_hit_NSP.append(40)

    if "yarneRefinePulse" in atkSkills and (atkHPCur / atkStats[HP] <= 0.90 or not atkAdjacentToAlly):
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "yarneRefinePulse" in defSkills and (defHPCur / defStats[HP] <= 0.90 or not defAdjacentToAlly):
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    if "yarneBoost" in atkSkills and defHPGreaterEqual50Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.true_stat_damages.append((SPD, 10))

        if attacker.transformed:
            atkr.follow_ups_skill += 1

    if "yarneBoost" in defSkills and atkHPGreaterEqual50Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.true_stat_damages.append((SPD, 10))

        if defender.transformed:
            defr.follow_ups_skill += 1

    # Wary Rabbit Fang (Base) - NY!Yarne
    if "nyYarneBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        defCombatBuffs[ATK] -= trunc(0.20 * atkStats[SPD])
        defCombatBuffs[DEF] -= trunc(0.20 * atkStats[SPD])

    if "nyYarneBoost" in defSkills and not defAdjacentToAlly:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        defCombatBuffs[ATK] -= trunc(0.20 * atkStats[SPD])
        defCombatBuffs[DEF] -= trunc(0.20 * atkStats[SPD])

    # Full Rabbit Fang - H!Yarne
    if "hYarneBoost" in atkSkills:
        non_dragon_beast = 0

        for ally in atkAdjacentToAlly:
            if ally.wpnType not in DRAGON_WEAPONS + BEAST_WEAPONS:
                non_dragon_beast += 1

        if attacker.transformed or non_dragon_beast <= 1:
            atkCombatBuffs = [x + min(len(atkFoeWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
            atkr.true_stat_damages.append((SPD, 20))
            atkr.offensive_NFU = True
            atkr.defensive_NFU = True

    if "hYarneBoost" in defSkills:
        non_dragon_beast = 0

        for ally in defAdjacentToAlly:
            if ally.wpnType not in DRAGON_WEAPONS + BEAST_WEAPONS:
                non_dragon_beast += 1

        if defender.transformed or non_dragon_beast <= 1:
            defCombatBuffs = [x + min(len(defFoeWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
            defr.true_stat_damages.append((SPD, 20))
            defr.offensive_NFU = True
            defr.defensive_NFU = True

    # FATES

    # Yato (Refine Eff) - M!Corrin
    if "corrinField_f" in atkSkills: atkCombatBuffs = [x + atkSkills["corrinField_f"] for x in atkCombatBuffs]
    if "corrinField_f" in defSkills: defCombatBuffs = [x + atkSkills["corrinField_f"] for x in defCombatBuffs]

    if "oldDarkBreath" in atkSkills:
        atkPostCombatEffs[0].append(("debuff_atk", 5, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[0].append(("debuff_spd", 5, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "refDarkBreath" in atkSkills:
        atkPostCombatEffs[2].append(("debuff_atk", 7, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[2].append(("debuff_spd", 7, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "refDarkBreath" in defSkills:
        defPostCombatEffs[2].append(("debuff_atk", 7, "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[2].append(("debuff_spd", 7, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Draconic Rage (Base) - AD!Corrins
    if "corrinRage" in atkSkills and len(atkAdjacentToAlly) > len(atkFoeWithin2Spaces) - 1:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "corrinRage" in defSkills and len(defAdjacentToAlly) > len(defFoeWithin2Spaces) - 1:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    if "adriftBoost" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.DR_first_hit_NSP.append(40)

    if "adriftBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.DR_first_hit_NSP.append(40)

    if "adriftBlast" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.spGainWhenAtkd += 1
        atkr.spGainOnAtk += 1

    if "adriftBlast" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.spGainWhenAtkd += 1
        defr.spGainOnAtk += 1

    # Savage Breath (Base) - FA!F!Corrin
    if "corrinSavage" in atkSkills:
        atkCombatBuffs = [x + max(6 - len(atkAllyWithin2Spaces) * 2, 0) for x in atkCombatBuffs]

    if "corrinSavage" in defSkills:
        defCombatBuffs = [x + max(6 - len(defAllyWithin2Spaces) * 2, 0) for x in defCombatBuffs]

    # Savage Breath (Refine Base) - FA!F!Corrin
    if "corrinRefineSavage" in atkSkills:
        atkCombatBuffs = [x + max(7 - len(atkAllyWithin2Spaces) * 2, 0) for x in atkCombatBuffs]

        if len(atkAllyWithin2Spaces) <= 1:
            atkPenaltiesNeutralized = [True] * 5

    if "corrinRefineSavage" in defSkills:
        defCombatBuffs = [x + max(7 - len(defAllyWithin2Spaces) * 2, 0) for x in defCombatBuffs]

        if len(defAllyWithin2Spaces) <= 1:
            defPenaltiesNeutralized = [True] * 5

    # Savage Breath (Refine Eff) - FA!F!Corrin
    if "https://twitter.com/YMWyungbug/status/1887810292484374993" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.DR_first_hit_NSP.append(max(30 - (len(atkAllyWithin2Spaces) * 10), 0))

    if "https://twitter.com/YMWyungbug/status/1887810292484374993" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.DR_first_hit_NSP.append(max(30 - (len(defAllyWithin2Spaces) * 10), 0))

    # Brutal Breath (Base) - FA!M!Corrin
    if "corrinBrutal" in atkSkills:
        atkCombatBuffs = [x + max(5 - len(atkAllyWithin2Spaces) * 2, 0) for x in atkCombatBuffs]

        if len(atkAllyWithin2Spaces) <= 1:
            defr.spLossOnAtk -= 1
            defr.spLossWhenAtkd -= 1

    if "corrinBrutal" in defSkills:
        defCombatBuffs = [x + max(5 - len(defAllyWithin2Spaces) * 2, 0) for x in defCombatBuffs]

        if len(defAllyWithin2Spaces) <= 1:
            atkr.spLossOnAtk -= 1
            atkr.spLossWhenAtkd -= 1

    # Brutal Breath (Refine Base) - FA!M!Corrin
    if "corrinRefineBrutal" in atkSkills:
        atkCombatBuffs = [x + max(11 - len(atkAllyWithin2Spaces) * 2, 4) for x in atkCombatBuffs]

        if len(atkAllyWithin2Spaces) <= 1:
            defr.spLossOnAtk -= 1
            defr.spLossWhenAtkd -= 1

        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "corrinRefineBrutal" in defSkills:
        defCombatBuffs = [x + max(11 - len(defAllyWithin2Spaces) * 2, 4) for x in defCombatBuffs]

        if len(defAllyWithin2Spaces) <= 1:
            atkr.spLossOnAtk -= 1
            atkr.spLossWhenAtkd -= 1

        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Brutal Breath (Refine Eff) - FA!M!Corrin
    if "corrinHike" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))

    if "corrinHike" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))

    # Primordial Breath (Base) - L!F!Corrin
    if "LFCorrinBoost" in atkSkills and defHPEqual100Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.spGainOnAtk += 1

    if "LFCorrinBoost" in defSkills:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.spGainOnAtk += 1

    # Primordial Breath (Refine Base) - L!F!Corrin
    if "LFCorrinRefine" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkr.TDR_first_strikes += 7

    if "LFCorrinRefine" in defSkills:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defr.TDR_first_strikes += 7

    # Primordial Breath (Refine Eff) - L!F!Corrin
    if "primordia" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.offensive_tempo = True
        atkr.DR_all_hits_NSP.append(30)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "primordia" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.offensive_tempo = True
        defr.DR_all_hits_NSP.append(30)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Negating Fang II - L!F!Corrin
    if "corrinDoubleCharge" in atkSkills: atkr.triggered_sp_charge += 2
    if "corrinDoubleCharge" in defSkills: defr.triggered_sp_charge += 2

    # Starlight Stone (Base) - H!M!Corrin
    if "hmCorrinBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 6
        defCombatBuffs[ATK] -= 6
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1
        atkr.all_hits_heal += 7

    if "hmCorrinBoost" in defSkills:
        defCombatBuffs[ATK] += 6
        atkCombatBuffs[ATK] -= 6
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1
        defr.all_hits_heal += 7

    # Moonlight Stone (Base) - H!F!Corrin
    if "hfCorrin" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.spGainOnAtk += 1
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1
        atkr.TDR_on_def_sp += 8

    if "hfCorrin" in defSkills:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.spGainOnAtk += 1
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1
        defr.TDR_on_def_sp += 8

    # Vallastone (Base) - B!F!Corrin
    if "NOT THE DYNAMIC TILES" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs = [x - 5 for x in defCombatBuffs]
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True
        atkr.DR_all_hits_NSP.append(30)

    if "NOT THE DYNAMIC TILES" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs = [x - 5 for x in atkCombatBuffs]
        defr.defensive_NFU = True
        defr.offensive_NFU = True
        defr.DR_all_hits_NSP.append(30)

    # Realms United - B!F!Corrin
    if "realmsUnited" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs = [x - 7 for x in defCombatBuffs]
        atkr.TDR_first_strikes += 7

    if "realmsUnited" in defSkills:
        atkCombatBuffs = [x - 7 for x in atkCombatBuffs]
        defr.TDR_first_strikes += 7

    # Hoshido's Breath - L!M!Corrin
    if "HoshidosBreath" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.TDR_first_strikes += 7

    if "HoshidosBreath" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(len(defAllyWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defr.TDR_first_strikes += 7

    # Dragon Fang Shot - L!M!Corrin
    if "dragonFangShot" in atkSkills:
        atkr.damage_reduction_reduction_finish.append(50)
        atkr.DR_dragon_fang_shot_SP = True

    if "dragonFangShot" in defSkills:
        defr.damage_reduction_reduction_finish.append(50)
        defr.DR_dragon_fang_shot_SP = True

    # Duskstone - CH!M!Corrin
    if "chCorrinBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]

        X = min(len(atkAllyWithin3Spaces) * 5, 15)
        atkr.true_all_hits += X
        atkr.TDR_all_hits += X

    if "chCorrinBoost" in defSkills and defHPGreaterEqual25Percent:
        Y = 14 if savior_triggered else min(len(defAllyWithin3RowsCols) * 3 + 5, 14)

        defCombatBuffs = [x + Y for x in defCombatBuffs]

        X = 15 if savior_triggered else min(len(defAllyWithin3Spaces) * 5, 15)
        defr.true_all_hits += X
        defr.TDR_all_hits += X

    if "dragonFangFire" in atkSkills:
        atkr.damage_reduction_reduction_finish.append(50)
        atkr.DR_dragon_fang_shot_SP = True

    if "dragonFangFire" in defSkills:
        defr.damage_reduction_reduction_finish.append(50)
        defr.DR_dragon_fang_shot_SP = True

    # Dusk Dragonstone (Base) - M!Kana
    if "secondKanaBoost" in atkSkills and defHPGreaterEqual75Percent: atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
    if "secondKanaBoost" in defSkills: defCombatBuffs = [x + 4 for x in defCombatBuffs]

    if "secondKanaHeal" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "secondKanaHeal" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Prayer Wheel (Refine Eff) - L!Azura
    if "azuraTriangle" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    # Dancing Flames (Base) - DE!Azura
    if "deAzuraRefresh" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

    if "deAzuraRefresh" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

    # Tri-Path Splitter - X!Azura
    if "Vince" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

    if "Vince" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

    # Azure Lance (Base) - Shigure
    if "I'm Shigure" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.true_all_hits += 7

    if "I'm Shigure" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.true_all_hits += 7

    # Azure Lance (Refine Eff) - Shigure
    if "shigureLink" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "shigureLink" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Felicia's Plate (Felicia)
    if "feliciaMagicGuard" in atkSkills and defender.wpnType in ["RTome", "BTome", "GTome", "CTome"]:
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "feliciaMagicGuard" in defSkills and attacker.wpnType in ["RTome", "BTome", "GTome", "CTome"]:
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Eldhrímnir (Base) - SP!Felicia
    if "feliciaBoost" in atkSkills:
        diff = max(0, min((atkStats[RES] + atkPhantomStats[RES]) - (defStats[RES] + defPhantomStats[RES]), 16))

        defCombatBuffs[ATK] -= trunc(diff * 0.50)
        defCombatBuffs[SPD] -= trunc(diff * 0.50)

    if "feliciaBoost" in defSkills:
        diff = max(0, min((defStats[RES] + defPhantomStats[RES]) - (atkStats[RES] + atkPhantomStats[RES]), 16))

        atkCombatBuffs[ATK] -= trunc(diff * 0.50)
        atkCombatBuffs[SPD] -= trunc(diff * 0.50)

    # Ice-Tribe Axe - FF!Felicia
    if "iceFeliciaBoost" in atkSkills:
        atkCombatBuffs = [x + 5 + trunc(0.15 * atkStats[SPD]) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))
        atkr.damage_reduction_reduction.append(50)
        atkr.DR_first_strikes_NSP.append(40)

    if "iceFeliciaBoost" in defSkills and any([ally for ally in defAllyWithin3Spaces if Status.NullEffDragons in ally.statusPos]):
        defCombatBuffs = [x + 5 + trunc(0.15 * defStats[SPD]) for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))
        defr.damage_reduction_reduction.append(50)
        defr.DR_first_strikes_NSP.append(40)

    if "iceFelicia_f" in atkSkills:
        atkPenaltiesNeutralized[SPD] = True
        atkPenaltiesNeutralized[RES] = True

    if "iceFelicia_f" in defSkills:
        defPenaltiesNeutralized[SPD] = True
        defPenaltiesNeutralized[RES] = True
        disableCannotCounter = True

    # Sæhrímnir (Refine Base) - SP!Flora
    if "spFloraBoost" in atkSkills:
        diff = max(0, min((atkStats[RES] + atkPhantomStats[RES]) - (defStats[RES] + defPhantomStats[RES]), 16))

        defCombatBuffs[ATK] -= trunc(diff * 0.50)
        defCombatBuffs[DEF] -= trunc(diff * 0.50)

    if "spFloraBoost" in defSkills:
        diff = max(0, min((defStats[RES] + defPhantomStats[RES]) - (atkStats[RES] + atkPhantomStats[RES]), 16))

        atkCombatBuffs[ATK] -= trunc(diff * 0.50)
        atkCombatBuffs[SPD] -= trunc(diff * 0.50)

    # Eldhrímnir (Refine Base) - SP!Felicia / Sæhrímnir (Refine Base) - SP!Flora
    if "icePicnicRefine" in atkSkills:
        diff = max(0, min((atkStats[RES] + atkPhantomStats[RES]) - (defStats[RES] + defPhantomStats[RES]), 16))

        defCombatBuffs[ATK] -= trunc(diff * 0.80)
        defCombatBuffs[SPD] -= trunc(diff * 0.80)
        defCombatBuffs[DEF] -= trunc(diff * 0.80)

        if atkHPGreaterEqual25Percent:
            atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "icePicnicRefine" in defSkills:
        diff = max(0, min((defStats[RES] + defPhantomStats[RES]) - (atkStats[RES] + atkPhantomStats[RES]), 16))

        atkCombatBuffs[ATK] -= trunc(diff * 0.80)
        atkCombatBuffs[SPD] -= trunc(diff * 0.80)
        atkCombatBuffs[DEF] -= trunc(diff * 0.80)

        if defHPGreaterEqual25Percent:
            defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Eldhrímnir (Refine Eff) - SP!Felicia
    if "who let her cook?" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.defensive_NFU = True

    if "who let her cook?" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.defensive_NFU = True

    # Sæhrímnir (Refine Base) - SP!Flora
    if "let her cook!" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "let her cook!" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Hoarfrost Knife (Base) - Flora
    if "floraBoost" in atkSkills and defender.wpnType in MELEE_WEAPONS:
        atkCombatBuffs[DEF] += 20

    if "floraEasyBoost" in atkSkills:
        atkCombatBuffs[DEF] += 20

    if "floraGuard" in atkSkills:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "floraGuard" in defSkills and defAllyWithin2Spaces:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Jakob's Tray (Jakob)
    if "jakobDebuff" in atkSkills:
        defCombatBuffs = [x - 4 for x in defCombatBuffs]

    if "jakobAllyBoost" in atkSkills:
        ally_condition = False
        for ally in atkAllyWithin2Spaces:
            if ally.HPcur < ally.visible_stats[HP]:
                ally_condition = True

        if ally_condition:
            atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "jakobAllyBoost" in defSkills:
        ally_condition = False
        for ally in defAllyWithin2Spaces:
            if ally.HPcur < ally.visible_stats[HP]:
                ally_condition = True

        if ally_condition:
            defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Inveterate Axe (Gunter)
    if "gunterJointDrive" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[DEF] += 4

    if "gunterJointDrive" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[DEF] += 4

    if "gunterJointDrive_f" in atkSkills and (attacker.move == 0 or attacker.move == 1):
        atkCombatBuffs[ATK] += atkSkills["gunterJointDrive_f"]
        atkCombatBuffs[DEF] += atkSkills["gunterJointDrive_f"]

    if "gunterJointDrive_f" in defSkills and (defender.move == 0 or defender.move == 1):
        defCombatBuffs[ATK] += defSkills["gunterJointDrive_f"]
        defCombatBuffs[DEF] += defSkills["gunterJointDrive_f"]

    # Raijinto (Refine Eff) - Ryoma/L!Ryoma
    if "waitTurns" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True

    if "waitTurns" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.defensive_NFU = True
        defr.offensive_NFU = True

    # Bushido II - L!Ryoma
    if "bushidoII" in atkSkills:
        atkr.true_all_hits += 7
        atkr.stat_scaling_DR.append((SPD, 40))

    if "bushidoII" in defSkills:
        defr.true_all_hits += 7
        defr.stat_scaling_DR.append((SPD, 40))

    # Bright Naginata (Base) - Shiro
    if "refineNaginata" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        atkPenaltiesNeutralized = [True] * 5

    if "refineNaginata" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        defPenaltiesNeutralized = [True] * 5

    # Kagero's Dart
    if "kageroBoost" in atkSkills and atkStats[ATK] + atkPhantomStats[ATK] > defStats[ATK] + defPhantomStats[ATK]:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4

    if "kageroBoost" in defSkills and defStats[ATK] + defPhantomStats[ATK] > atkStats[ATK] + atkPhantomStats[ATK]:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[SPD] += 4

    if "kageroRedu" in atkSkills:
        atkr.DR_first_hit_NSP.append(50)

    # Brightwind Fans - FF!Kagero
    if "windKagero" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkCombatBuffs[ATK] += trunc(0.20 * atkStats[SPD])
        atkCombatBuffs[SPD] += trunc(0.20 * atkStats[SPD])
        atkr.offensive_NFU = True
        atkr.DR_first_hit_NSP.append(50)
        atkr.retaliatory_reduced += 1

    if "windKagero" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defCombatBuffs[ATK] += trunc(0.20 * defStats[SPD])
        defCombatBuffs[SPD] += trunc(0.20 * defStats[SPD])
        defr.offensive_NFU = True

    # Kaze's Needle
    if "kazeBoost" in atkSkills:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4
        atkCombatBuffs[RES] += 4

    if "kazeBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[SPD] += 4
        defCombatBuffs[RES] += 4

    if "he kinda sounds like Joker Persona 5" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4
        atkCombatBuffs[RES] += 4

    if "he kinda sounds like Joker Persona 5" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[SPD] += 4
        defCombatBuffs[RES] += 4

    # Skadi (Refine Eff) - FA!Takumi
    if "skadiBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkPostCombatEffs[2].append(("damage", 7, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "skadiBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defPostCombatEffs[2].append(("damage", 7, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Dawnsweet Box (Base) - V!Takumi
    if "vTakumiBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        X = min(3 * len([ally for ally in atkAllyWithin2Spaces if ally.get_visible_stat(ATK) + ally.get_phantom_stat(ATK) >= atkStats[ATK] + atkPhantomStats[ATK] - 4]), 6)

        defCombatBuffs[ATK] -= 4 + X
        defCombatBuffs[SPD] -= 4 + X

    if "vTakumiBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        X = min(3 * len([ally for ally in defAllyWithin2Spaces if ally.get_visible_stat(ATK) + ally.get_phantom_stat(ATK) >= defStats[ATK] + defPhantomStats[ATK] - 4]), 6)

        atkCombatBuffs[ATK] -= 4 + X
        atkCombatBuffs[SPD] -= 4 + X

    # Hinoka's Spear
    if "hinokaBoost" in atkSkills and (atkFlyAlliesWithin2Spaces or atkInfAlliesWithin2Spaces):
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4

    if "hinokaBoost" in defSkills and (defFlyAlliesWithin2Spaces or defInfAlliesWithin2Spaces):
        defCombatBuffs[ATK] += 4
        defCombatBuffs[SPD] += 4

    # Warrior Princes (Refine Base) - P!Hinoka
    if "hinokaJointDrive" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4

    if "hinokaJointDrive" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[SPD] += 4

    if "hinokaJointDrive_f" in atkSkills:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4

    if "hinokaJointDrive_f" in defSkills:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[SPD] += 4

    # Warrior Princes (Refine Eff) - P!Hinoka
    if "hinokaField_f" in atkSkills:
        atkCombatBuffs[ATK] -= atkSkills["hinokaField_f"]
        atkCombatBuffs[SPD] -= atkSkills["hinokaField_f"]
        atkCombatBuffs[DEF] -= atkSkills["hinokaField_f"]

    if "hinokaField_f" in defSkills:
        defCombatBuffs[ATK] -= defSkills["hinokaField_f"]
        defCombatBuffs[SPD] -= defSkills["hinokaField_f"]
        defCombatBuffs[DEF] -= defSkills["hinokaField_f"]

    # Mermaid Bow (Base) - PI!Hinoka
    if "piHinokaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.hexblade = True

    if "piHinokaBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.hexblade = True

    # Fujin-Raijin Yumi (Base) - L!Hinoka
    if "LHinokaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.true_stat_damages.append((SPD, 20))
        atkr.offensive_NFU = True

    if "LHinokaBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.true_stat_damages.append((SPD, 20))
        defr.offensive_NFU = True

    # Setsuna's Yumi
    if "setsunaRangedBoost" in atkSkills and defender.wpnType in RANGED_WEAPONS:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "setsunaRangedBoost" in defSkills and attacker.wpnType in RANGED_WEAPONS:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Subaki
    if "subakiDamage" in atkSkills and atkHPCur / atkStats[HP] >= 0.70:
        atkr.true_all_hits += 7

    if "subakiDamage" in defSkills and defHPCur / defStats[HP] >= 0.70:
        defr.true_all_hits += 7

    # Salvage - L!Sakura
    if "Salvage" in atkSkills:
        atkCombatBuffs[ATK] += 6 + trunc(0.20 * atkStats[SPD])
        atkCombatBuffs[SPD] += 6 + trunc(0.20 * atkStats[SPD])
        atkr.true_stat_damages_from_foe.append((ATK, 15))
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.offensive_tempo = True

    if "Salvage" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6 + trunc(0.20 * defStats[SPD])
        defCombatBuffs[SPD] += 6 + trunc(0.20 * defStats[SPD])
        defr.true_stat_damages_from_foe.append((ATK, 15))
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.offensive_tempo = True

    # Quiet Strength - L!Sakura
    if "quietStrength" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[SPD] = True
        atkr.true_all_hits += 7
        atkr.TDR_first_strikes += 7
        atkr.sp_jump_first += 1
        atkr.damage_reduction_reduction.append(50)

    if "quietStrength" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[SPD] = True
        defr.true_all_hits += 7
        defr.TDR_first_strikes += 7
        defr.sp_jump_first += 1
        defr.damage_reduction_reduction.append(50)

    if "sakuraField_f" in atkSkills:
        atkr.true_all_hits += 7 * atkSkills["sakuraField_f"]
        atkr.TDR_first_strikes += 7 * atkSkills["sakuraField_f"]
        atkr.sp_jump_first += atkSkills["sakuraField_f"]

    if "sakuraField_f" in defSkills:
        defr.true_all_hits += 7 * defSkills["sakuraField_f"]
        defr.TDR_first_strikes += 7 * defSkills["sakuraField_f"]
        defr.sp_jump_first += defSkills["sakuraField_f"]

    # Siegfried (Refine Eff) - Xander
    if "xanderific" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[1] -= 5
        defCombatBuffs[3] -= 5
        defr.follow_up_denials -= 1

    if "xanderific" in defSkills and atkHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        atkr.follow_up_denials -= 1

    # Ebon Bölverk (Base) - L!Xander
    if "LXanderBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "LXanderBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Ebon Bölverk (Refine Base) - L!Xander
    if "LXanderRefine" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))
        atkr.true_all_hits += min(len(attacker.statusPos) * 5, 25)

    if "LXanderRefine" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))
        defr.true_all_hits += min(len(defender.statusPos) * 5, 25)

    # Ebon Bölverk (Refine Eff) - L!Xander
    if "He isn't washed anymore????" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 2 + 5, 11) for x in atkCombatBuffs]
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[SPD] = True
        atkr.TDR_first_strikes += 7
        atkr.damage_reduction_reduction.append(50)

    if "He isn't washed anymore????" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(len(defAllyWithin3RowsCols) * 2 + 5, 11) for x in defCombatBuffs]
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[SPD] = True
        defr.TDR_first_strikes += 7
        defr.damage_reduction_reduction.append(50)

    # Chivalry - L!Xander
    if "chivalry" in atkSkills and defHPGreaterEqual50Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.DR_all_hits_NSP.append(trunc(0.5 * defHPCur))

    if "chivalry" in defSkills and atkHPGreaterEqual50Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.DR_all_hits_NSP.append(trunc(0.5 * defHPCur))

    # Chivalry II - L!Xander
    if "chivalryII" in atkSkills:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.DR_all_hits_NSP.append(50)

        if defHPGreaterEqual50Percent:
            atkr.TDR_stats.append((ATK, 25))
        else:
            atkr.TDR_stats.append((ATK, 15))

        if defHPGreaterEqual75Percent:
            atkr.sp_jump_first += 3
        else:
            atkr.sp_jump_first += min(spaces_moved_by_atkr, 3)

    if "chivalryII" in defSkills:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.DR_all_hits_NSP.append(50)

        if atkHPGreaterEqual50Percent:
            defr.TDR_stats.append((ATK, 25))
        else:
            defr.TDR_stats.append((ATK, 15))

        if atkHPGreaterEqual75Percent:
            defr.sp_jump_first += 3
        else:
            defr.sp_jump_first += min(spaces_moved_by_atkr, 3)

    # Sword of Dusk - CH!Xander
    if "chXanderBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(len(atkFoeWithin3RowsCols) * 3, 9) for x in atkCombatBuffs]

        if defHPGreaterEqual50Percent:
            atkr.true_stat_damages.append((DEF, 25))
            atkr.TDR_stats.append((DEF, 25))
        else:
            defr.true_stat_damages.append((DEF, 15))
            defr.TDR_stats.append((DEF, 15))

    # Dark Greatsword (Refine) - Siegbert
    if "Toaster" in atkSkills and not atkAdjacentToAlly:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        defBonusesNeutralized = [True] * 5

    if "Toaster" in defSkills and not defAdjacentToAlly:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        atkBonusesNeutralized = [True] * 5

    # Peri's Spear (Peri)
    if "periBoost" in atkSkills and not atkHPEqual100Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "periBoost" in defSkills and not defHPEqual100Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Laslow's Blade (Laslow)
    if "laslowBrave" in atkSkills:
        bonus_total_reached = 0

        for ally in atkAllyWithin3Spaces:
            panic_factor = 1
            if Status.Panic in ally.statusNeg: panic_factor = -1
            if Status.NullPanic in ally.statusPos: panic_factor = 1
            if sum(ally.buffs) * panic_factor >= 10:
                bonus_total_reached += 1

        if bonus_total_reached >= 2:
            atkCombatBuffs[ATK] += 3
            atkCombatBuffs[DEF] += 3
            atkr.brave = True

    if "laslowBrave" in defSkills:
        bonus_total_reached = 0

        for ally in defAllyWithin3Spaces:
            panic_factor = 1
            if Status.Panic in ally.statusNeg: panic_factor = -1
            if Status.NullPanic in ally.statusPos: panic_factor = 1
            if sum(ally.buffs) * panic_factor >= 10:
                bonus_total_reached += 1

        if bonus_total_reached >= 2:
            defCombatBuffs[ATK] += 3
            defCombatBuffs[DEF] += 3
            defr.brave = True

    # Brynhildr (Leo)
    if "leoGravity" in atkSkills:
        atkPostCombatEffs[0].append(("status", Status.Gravity, "foe", "one"))

    if "leoWhateverTheHellThisIs" in atkSkills and defender.wpnType in TOME_WEAPONS:
        atkr.DR_first_hit_NSP.append(30)

    if "leoWhateverTheHellThisIs" in defSkills and attacker.wpnType in TOME_WEAPONS:
        defr.DR_first_hit_NSP.append(30)

    # Duskbloom Bow (Base) - V!Leo
    if "vLeoBoost" in atkSkills: atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
    if "vLeoBoost" in defSkills and defAllyWithin2Spaces: defCombatBuffs = [x + 5 for x in defCombatBuffs]

    # Tome of Dusk - CH!Leo
    if "chLeoBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(len(atkFoeWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((RES, 20))
        atkr.damage_reduction_reduction.append(50)

    if "chLeoBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(len(defFoeWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defr.true_stat_damages.append((RES, 20))
        defr.damage_reduction_reduction.append(50)

    # Spy-Song Bow (Refine Eff) - Nina
    if "YAOI" in atkSkills and len(atkAllyWithin3Spaces) >= 2:
        condition = False

        n = len(atkAllyWithin3Spaces)
        for i in range(n):
            for j in range(i + 1, n):
                if atkAllyWithin3Spaces[i].isSupportOf(atkAllyWithin3Spaces[j]):
                    condition = True
                    break

        if disableSupportEffects:
            condition = False

        if condition:
            atkCombatBuffs = [x + 6 for x in atkCombatBuffs]
            atkr.all_hits_heal += 5

    if "YAOI" in defSkills and len(defAllyWithin3Spaces) >= 2:
        condition = False

        n = len(defAllyWithin3Spaces)
        for i in range(n):
            for j in range(i + 1, n):
                if defAllyWithin3Spaces[i].isSupportOf(defAllyWithin3Spaces[j]):
                    condition = True
                    break

        if disableSupportEffects:
            condition = False

        if condition:
            defCombatBuffs = [x + 6 for x in defCombatBuffs]
            defr.all_hits_heal += 5

    # Camilla
    if "camillaBoost" in atkSkills and (atkCavAlliesWithin2Spaces or atkFlyAlliesWithin2Spaces):
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4

    if "camillaBoost" in defSkills and (defCavAlliesWithin2Spaces or defFlyAlliesWithin2Spaces):
        defCombatBuffs[ATK] += 4
        defCombatBuffs[SPD] += 4

    if "camillaField_f" in atkSkills and (attacker.move == 1 or attacker.move == 2):
        atkCombatBuffs[ATK] += 3
        atkCombatBuffs[SPD] += 3

    if "camillaField_f" in defSkills and (defender.move == 1 or defender.move == 2):
        defCombatBuffs[ATK] += 3
        defCombatBuffs[SPD] += 3

    # Book of Dreams (Base) - Adrift Camilla
    if "camillaBond" in atkSkills and atkAdjacentToAlly:
        defCombatBuffs = [x - 4 for x in defCombatBuffs]

    if "camillaBond" in defSkills and defAdjacentToAlly:
        atkCombatBuffs = [x - 4 for x in atkCombatBuffs]

    if "camillaDebuff" in atkSkills:
        defCombatBuffs = [x - 4 for x in defCombatBuffs]

    if "camillaDebuff" in defSkills and defAllyWithin2Spaces:
        atkCombatBuffs = [x - 4 for x in atkCombatBuffs]

    if "I should be studying for my finals lol" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.true_stat_damages.append((ATK, 15))

    if "I should be studying for my finals lol" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.true_stat_damages.append((ATK, 15))

    # Flowery Scroll (Base) - NI!Camilla
    if "niCamillaBoost" in atkSkills: atkr.brave = True
    if "niCamillaBoost" in defSkills: defr.brave = True

    # Bewitching Tome - L!Camilla
    if "LCamillaBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkCombatBuffs[ATK] += trunc(0.20 * atkStats[SPD])
        atkCombatBuffs[SPD] += trunc(0.20 * atkStats[SPD])
        atkr.DR_first_hit_NSP.append(30)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "LCamillaBoost" in defSkills and defender.wpnType in RANGED_WEAPONS:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defCombatBuffs[ATK] += trunc(0.20 * defStats[SPD])
        defCombatBuffs[SPD] += trunc(0.20 * defStats[SPD])
        defr.DR_first_hit_NSP.append(30)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Spoil Rotten - L!Camilla
    if "spoilRotten" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[RES] -= 5
        atkr.offensive_NFU = True
        atkr.offensive_tempo = True

    if "spoilRotten" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[RES] -= 5
        defr.offensive_NFU = True
        defr.offensive_tempo = True

    # Axe of Dusk - CH!Camilla
    if "chCamillaBoost" in atkSkills:
        atkCombatBuffs = [x + min(len(atkFoeWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]

        Y = len(defender.statusPos) + len(defender.statusNeg)

        for ally in defAllAllies:
            Y += len(ally.statusPos) + len(ally.statusNeg)

        atkr.true_all_hits += Y * 3
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "chCamillaBoost" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs = [x + min(len(defFoeWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]

        Y = len(attacker.statusPos) + len(attacker.statusNeg)

        for ally in atkAllAllies:
            Y += len(ally.statusPos) + len(ally.statusNeg)

        defr.true_all_hits += Y * 3
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Tut-tut! - CH!Camilla
    if "tut-tut" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.true_stat_damages.append((SPD, 20))
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "tut-tut" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.true_stat_damages.append((SPD, 20))
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # Beruka
    if "berukaAxe" in atkSkills and atkHPGreaterEqual50Percent:
        defCombatBuffs[ATK] -= 4
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "berukaAxe" in defSkills and defHPGreaterEqual50Percent:
        defCombatBuffs[ATK] -= 4
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Selena (Fates)
    if "lowAtkBoost" in atkSkills and defStats[ATK] + defPhantomStats[ATK] >= atkStats[ATK] + atkPhantomStats[ATK] + 3:
        atkCombatBuffs = [x + 3 for x in atkCombatBuffs]

    if "lowAtkBoost" in defSkills and atkStats[ATK] + atkPhantomStats[ATK] >= defStats[ATK] + defPhantomStats[ATK] + 3:
        defCombatBuffs = [x + 3 for x in defCombatBuffs]

    if "eliseField_f" in defSkills:
        defCombatBuffs = [x - defSkills["eliseField_f"] for x in defCombatBuffs]

    # Dusk-Dawn Staff (Base) - V!Elise
    if "vEliseBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.offensive_NFU = True
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.Flash, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "vEliseBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.offensive_NFU = True
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.Flash, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Baton of Dusk - CH!Elise
    if "chEliseBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(len(atkFoeWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "chEliseBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(len(defFoeWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # Effie's Lance (Base) - Effie
    if "effieAtk" in atkSkills and atkHPGreaterEqual50Percent: atkCombatBuffs[ATK] += 6
    if "effieAtk" in defSkills and defHPGreaterEqual50Percent: defCombatBuffs[ATK] += 6

    if "effieFirstCombat" in atkSkills and attacker.unitCombatInitiates == 0:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[DEF] = True

    if "effieFirstCombat" in defSkills and defender.unitCombatInitiates == 0:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[DEF] = True

    # Soleil
    if "ladies, whats good" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.spGainOnAtk += 1

    if "rhajatEffects" in atkSkills:
        atkPostCombatEffs[2].append(("damage", 7, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[2].append(("status", Status.Flash, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "rhajatEffects" in defSkills:
        defPostCombatEffs[2].append(("damage", 7, "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[2].append(("status", Status.Flash, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Sworn Lance (Base) - Silas
    if "a bit of stats" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5

    if "a bit of stats" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5

    if "a fair bit more stats" in atkSkills:
        condition = False
        for ally in atkAllyWithin3Spaces:
            if ally.isSupportOf(attacker) and not disableSupportEffects:
                condition = True

        for ally in atkAllAllies:
            if ally.isSupportOf(attacker) and ally.HPcur / ally.visible_stats[HP] <= 0.8 and not disableSupportEffects:
                condition = True

        if condition:
            atkCombatBuffs[ATK] += 7
            atkCombatBuffs[DEF] += 7
            defr.follow_up_denials -= 1

    if "a fair bit more stats" in defSkills:
        condition = False
        for ally in defAllyWithin3Spaces:
            if ally.isSupportOf(defender) and not disableSupportEffects:
                condition = True

        for ally in defAllAllies:
            if ally.isSupportOf(defender) and ally.HPcur / ally.visible_stats[HP] <= 0.8 and not disableSupportEffects:
                condition = True

        if condition:
            defCombatBuffs[ATK] += 7
            defCombatBuffs[DEF] += 7
            atkr.follow_up_denials -= 1

    if "garonDevour" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        defCombatBuffs[ATK] -= 5

    if "garonDevour" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        atkCombatBuffs[ATK] -= 5

    if "(groans of increasing discomfort)" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5
        defCombatBuffs[ATK] -= 5
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "(groans of increasing discomfort)" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 5
        atkCombatBuffs[ATK] -= 5
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Iago's Tome (Refine Base) - Iago
    if "iagoRefine" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "iagoRefine" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    if "iagoWHEEEEEEE" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "iagoWHEEEEEEE" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Kitsune Fang (Refine Base) - Kaden
    if "kadenField2" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "kadenField2" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Kitsune Fang (Refine Eff) - Kaden (yes it's the same thing)
    if "kadenSupport" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "kadenSupport" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    if "kadenSupport_f" in atkSkills:
        atkCombatBuffs[DEF] += 2
        atkCombatBuffs[RES] += 2
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "kadenSupport_f" in defSkills:
        defCombatBuffs[DEF] += 2
        defCombatBuffs[RES] += 2
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Refreshed Fang (Base) - NY!Kaden
    if "nyKadenBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[SPD] += 5
        defCombatBuffs[SPD] -= 5

    if "nyKadenBoost" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[SPD] += 5
        atkCombatBuffs[SPD] -= 5

    # Refreshed Fang (Refine Base) - NY!Kaden
    if "nyKadenRefine" in atkSkills and (attacker.transformed or defHPGreaterEqual75Percent):
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[SPD] -= 5
        atkr.true_stat_damages.append((SPD, 20))
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[SPD] = True

    if "nyKadenRefine" in defSkills and (defender.transformed or atkHPGreaterEqual75Percent):
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[SPD] -= 5
        defr.true_stat_damages.append((SPD, 20))
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[SPD] = True

    # Refreshed Fang (Refine Eff) - NY!Kaden
    if "whistlestopSummit" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.TDR_first_stats.append((SPD, 20))
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "whistlestopSummit" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defr.TDR_first_stats.append((SPD, 20))
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Foxkit Fang (Base) - Selkie
    if "selkieBoost" in atkSkills and atkStats[RES] + atkPhantomStats[RES] > defStats[RES] + defPhantomStats[RES] and defender.wpnType in MELEE_WEAPONS:
        difference = (atkStats[RES] + atkPhantomStats[RES]) - (defStats[RES] + defPhantomStats[RES])

        atkCombatBuffs = [x + min(trunc(0.5 * difference), 8) for x in atkCombatBuffs]

    if "selkieBoost" in defSkills and defStats[RES] + defPhantomStats[RES] > atkStats[RES] + atkPhantomStats[RES] and attacker.wpnType in MELEE_WEAPONS:
        difference = (defStats[RES] + defPhantomStats[RES]) - (atkStats[RES] + atkPhantomStats[RES])

        defCombatBuffs = [x + min(trunc(0.5 * difference), 8) for x in defCombatBuffs]

    # Foxkit Fang (Refine Base) - Selkie
    if "selkieBoost2" in atkSkills and atkStats[RES] + atkPhantomStats[RES] > defStats[RES] + defPhantomStats[RES]:
        difference = (atkStats[RES] + atkPhantomStats[RES]) - (defStats[RES] + defPhantomStats[RES])

        atkCombatBuffs = [x + 4 + min(trunc(0.8 * difference), 8) for x in atkCombatBuffs]

    if "selkieBoost2" in defSkills and defStats[RES] + defPhantomStats[RES] > atkStats[RES] + atkPhantomStats[RES]:
        difference = (defStats[RES] + defPhantomStats[RES]) - (atkStats[RES] + atkPhantomStats[RES])

        defCombatBuffs = [x + 4 + min(trunc(0.8 * difference), 8) for x in defCombatBuffs]

    # Foxkit Fang (Refine Eff) - Selkie
    if "selkieOutres" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "selkieOutres" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # New Foxkit Fang (Base) - NY!Selkie
    if "nySelkieBoost" in atkSkills or "nySelkieRefine" in atkSkills:
        atkr.stat_scaling_DR.append((RES, 40))

    if "nySelkieBoost" in defSkills or "nySelkieRefine" in defSkills:
        defr.stat_scaling_DR.append((RES, 40))

    # New Foxkit Fang (Refine Base) - NY!Selkie
    if "nySelkieRefine" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "nySelkieRefine" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # New Foxkit Fang (Refine Eff) - NY!Selkie
    if "somethiiii" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

        if attacker.transformed:
            defCombatBuffs = [x - 4 for x in defCombatBuffs]

    if "somethiiii" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.defensive_NFU = True

        if defender.transformed:
            atkCombatBuffs = [x - 4 for x in atkCombatBuffs]

    if "keatonBoost" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[DEF] = True
        atkr.spGainOnAtk += 1

    if "keatonBoost" in defSkills:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[DEF] = True
        defr.spGainOnAtk += 1

    # Resolved Fang (Base) - NY!Keaton
    if "nyKeatonBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[DEF] += 5
        defCombatBuffs[DEF] -= 5

    if "nyKeatonBoost" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[DEF] += 5
        atkCombatBuffs[DEF] -= 5

    # Resolved Fang (Refine Base) - NY!Keaton
    if "nyKeatonRefine" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[SPD] += 5
        atkCombatBuffs[DEF] += 5
        atkCombatBuffs[RES] += 5
        defCombatBuffs[DEF] -= 5
        atkr.true_stat_damages.append((DEF, 20))
        atkr.follow_ups_skill += 1
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[DEF] = True

    if "nyKeatonRefine" in defSkills:
        defCombatBuffs[SPD] += 5
        defCombatBuffs[DEF] += 5
        defCombatBuffs[RES] += 5
        atkCombatBuffs[DEF] -= 5
        defr.true_stat_damages.append((DEF, 20))
        defr.follow_ups_skill += 1
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[DEF] = True

    # Resolved Fang (Refine Eff) - NY!Keaton
    if "keatonBreathOfLife" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[SPD] += 5
        atkCombatBuffs[DEF] += 5
        atkCombatBuffs[RES] += 5
        defCombatBuffs[DEF] -= 5
        atkr.TDR_stats.append((DEF, 15))
        atkr.deep_wounds_allowance.append(50)

    if "keatonBreathOfLife" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[SPD] += 5
        defCombatBuffs[DEF] += 5
        defCombatBuffs[RES] += 5
        atkCombatBuffs[DEF] -= 5
        defr.TDR_stats.append((DEF, 15))
        defr.deep_wounds_allowance.append(50)

    if "velouriaPulse2" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "velouriaPulse2" in defSkills:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    if "velouriaBoost" in atkSkills and (attacker.transformed or defHPGreaterEqual75Percent):
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "velouriaBoost" in defSkills and (defender.transformed or atkHPGreaterEqual75Percent):
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Renewed Fang (Base) - NY!Velouria
    if "nyVelouriaBoost" in atkSkills and atkWithin2SpaceOfSupportPartner:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[SPD] -= 6
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    # Renewed Fang (Base) - NY!Velouria
    if "nyVelouriaBoost" in defSkills and defWithin2SpaceOfSupportPartner:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[SPD] -= 6
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Renewed Fang (Refine Base) - NY!Velouria
    if "nyVelRefine" in atkSkills and atkAllyWithin3Spaces:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[SPD] -= 6
        defCombatBuffs[DEF] -= 5
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkr.sp_jump_foe_first += 2
        atkr.sp_pierce_DR = True

    if "nyVelRefine" in defSkills and defAllyWithin3Spaces:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[SPD] -= 6
        atkCombatBuffs[DEF] -= 5
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defr.sp_jump_foe_first += 2
        defr.sp_pierce_DR = True

    if "nyVelTarget" in atkSkills:
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkr.sp_jump_foe_first += 2 * atkSkills["nyVelTarget"]
        atkr.sp_pierce_DR = True

    if "nyVelTarget" in defSkills:
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defr.sp_jump_foe_first += 2 * defSkills["nyVelTarget"]
        defr.sp_pierce_DR = True

    # Renewed Fang (Refine Eff) - NY!Velouria
    if "my switch 2 is coming tomorrow yippee" in atkSkills and atkHPGreaterEqual25Percent:
        X = min(len(atkFoeWithin3RowsCols) * 2 + 5, 11)
        defCombatBuffs[ATK] -= X
        defCombatBuffs[SPD] -= X
        defCombatBuffs[DEF] -= X

        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[SPD] = True
        atkr.true_stat_damages.append((SPD, 20))
        atkr.TDR_first_stats.append((SPD, 20))

    if "my switch 2 is coming tomorrow yippee" in defSkills and defHPGreaterEqual25Percent:
        X = min(len(defFoeWithin3RowsCols) * 2 + 5, 11)
        atkCombatBuffs[ATK] -= X
        atkCombatBuffs[SPD] -= X
        atkCombatBuffs[DEF] -= X

        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[SPD] = True
        defr.true_stat_damages.append((SPD, 20))
        defr.TDR_first_stats.append((SPD, 20))

    # Astral Breath (Base) - Lilith
    if "lilithWarp" in atkSkills and any(ally.isSupportOf(attacker) for ally in atkAllyWithin3Spaces) and not disableSupportEffects:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

    if "lilithWarp" in defSkills and any(ally.isSupportOf(defender) for ally in defAllyWithin3Spaces) and not disableSupportEffects:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

    # Astral Breath (Refine Base) - Lilith
    if "lilithRefineWarp" in atkSkills and any(ally.isSupportOf(attacker) for ally in atkAllyWithin3Spaces) and not disableSupportEffects:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "lilithRefineWarp" in defSkills and any(ally.isSupportOf(defender) for ally in defAllyWithin3Spaces) and not disableSupportEffects:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Silent Power (Base) - FA!Lilith
    if "faLilithBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

    if "faLilithBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

    # Tome of Grief (Base) - Arete
    if "areteDebuff" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[RES] = True
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "areteDebuff" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[RES] = True
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Tome of Grief (Refine Eff) - Arete
    if "something to go here I guess" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[RES] = True
        atkr.true_stat_damages.append((RES, 20))
        atkr.follow_ups_skill += 1

    if "something to go here I guess" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[RES] = True
        defr.true_stat_damages.append((RES, 20))
        defr.follow_ups_skill += 1

    # Lucky Bow (Base) - Midori
    if "midoriBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkCombatBuffs[ATK] += 7
        defCombatBuffs[ATK] -= 7
        atkr.true_stat_damages.append((ATK, 15))
        atkPostCombatEffs.append(("sp_charge", -2, "self", "one"))

    if "midoriBoost" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defCombatBuffs[ATK] += 7
        atkCombatBuffs[ATK] -= 7
        defr.true_stat_damages.append((ATK, 15))
        defPostCombatEffs.append(("sp_charge", -2, "self", "one"))

    # Lucky Bow (Refine Eff) - Midori
    if "Medicine!" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        defr.follow_up_denials -= 1

    if "Medicine!" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        atkr.follow_up_denials -= 1

    # Rinkah's Club (Base) - Rinkah
    if "rinkahBoost" in atkSkills and not atkHPEqual100Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        atkr.spGainWhenAtkd += 1

    if "rinkahBoost" in defSkills:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        defr.spGainWhenAtkd += 1

    # Rinkah's Club (Refine Base) - Rinkah
    if "rinkahRefineBoost" in atkSkills and (not atkHPEqual100Percent or defHPGreaterEqual75Percent):
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        atkCombatBuffs[SPD] += 4
        atkCombatBuffs[RES] += 4
        atkr.spGainWhenAtkd += 1
        atkr.spGainOnAtk += 1

    if "rinkahRefineBoost" in defSkills:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        defCombatBuffs[SPD] += 5
        defCombatBuffs[RES] += 5
        defr.spGainWhenAtkd += 1
        defr.spGainOnAtk += 1

    # Rinkah's Club (Refine Eff) - Rinkah
    if "asdfghjkl" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.all_hits_heal += 7
        atkr.DR_first_strikes_NSP.append(40)
        atkr.retaliatory_reduced += 1

    if "asdfghjkl" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.all_hits_heal += 7
        defr.DR_first_strikes_NSP.append(40)
        defr.retaliatory_reduced += 1

    # Fair-Fury Axe (Base) - Charlotte
    if "charlotteBoost" in atkSkills:
        atkr.true_stat_damages.append((ATK, 15))
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

    if "charlotteBoost" in defSkills and defAllyWithin2Spaces:
        defr.true_stat_damages.append((ATK, 15))
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

    # Ginnungagap (Base) - Nyx
    if "nyxBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.DR_first_hit_NSP.append(40)
        atkr.retaliatory_reduced += 1

    if "nyxBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

        if attacker.wpnType in TOME_WEAPONS or attacker.wpnType == "Staff":
            defr.DR_first_hit_NSP.append(40)
            defr.retaliatory_reduced += 1

    # Tiger Spirit (Base) - Orochi
    if "orochiBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[RES] += 6
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.Panic, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "orochiBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[RES] += 6
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.Panic, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Prodigy Polearm (Base) - Caeldori
    if "minon, did I get it?" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

        X = 10

        if atkStats[HP] - 5 <= defStats[HP]:
            X += 5
        for i in range(1, 5):
            if atkStats[i] + atkPhantomStats[i] - 5 <= defStats[i] + defPhantomStats[i]:
                X += 5

        defCombatBuffs[ATK] -= trunc((X / 100) * atkStats[SPD])
        defCombatBuffs[DEF] -= trunc((X / 100) * atkStats[SPD])

    if "minon, did I get it?" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.defensive_NFU = True

        X = 10

        if defStats[HP] - 5 <= atkStats[HP]:
            X += 5
        for i in range(1, 5):
            if defStats[i] + defPhantomStats[i] - 5 <= atkStats[i] + atkPhantomStats[i]:
                X += 5

        atkCombatBuffs[ATK] -= trunc((X / 100) * defStats[SPD])
        atkCombatBuffs[DEF] -= trunc((X / 100) * defStats[SPD])

    # Arcane Eclipse
    if "arcaneEclipse" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkPenaltiesNeutralized[ATK] = True

    if "arcaneEclipse" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defPenaltiesNeutralized[ATK] = True

    # Aurgelmir (Base) - Hans
    if "hansBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.follow_ups_skill += 1
        atkr.DR_first_hit_NSP.append(40)
        atkr.retaliatory_reduced += 1

    if "hansBoost" in defSkills and not defAdjacentToAlly:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.follow_ups_skill += 1
        defr.DR_first_hit_NSP.append(40)
        defr.retaliatory_reduced += 1

    # Forager Naginata - Mozu
    if "mozuBoost" in atkSkills and atkHPGreaterEqual25Percent:
        X = 10 if any([tile for tile in atkr.tile.tilesWithinNSpaces(2) if (atkr.tile.has_divine_vein() or atkr.tile.is_difficult_terrain())]) else min(len(atkAllyWithin3Spaces) * 3 + 1, 10)

        atkCombatBuffs = [x + 5 + X for x in atkCombatBuffs]
        atkr.TDR_first_strikes += X
        atkr.all_hits_heal += X

    if "mozuBoost" in defSkills and defHPGreaterEqual25Percent:
        X = 10 if any([tile for tile in defr.tile.tilesWithinNSpaces(2) if (defr.tile.has_divine_vein() or defr.tile.is_difficult_terrain())]) else min(len(defAllyWithin3Spaces) * 3 + 1, 10)

        defCombatBuffs = [x + 5 + X for x in defCombatBuffs]
        defr.TDR_first_strikes += X
        defr.all_hits_heal += X

    # Perspicacious
    if "yukimuraBoost" in atkSkills and atkHPGreaterEqual25Percent:
        ally_count = 0

        tiles_within_7_row = atkr.tile.tilesWithinNRows(7)
        tiles_within_7_col = atkr.tile.tilesWithinNCols(7)
        tiles_within_7_row_and_column = list(set(tiles_within_7_row) & set(tiles_within_7_col))

        for tile in tiles_within_7_row_and_column:
            if tile.hero_on and tile.hero_on.isAllyOf(attacker):
                ally_count += 1

        defCombatBuffs[ATK] -= min(6 + ally_count * 3, 15)
        defCombatBuffs[DEF] -= min(6 + ally_count * 3, 15)
        atkr.damage_reduction_reduction.append(50)
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "yukimuraBoost" in defSkills and defHPGreaterEqual25Percent:
        ally_count = 0

        tiles_within_7_row = defr.tile.tilesWithinNRows(7)
        tiles_within_7_col = defr.tile.tilesWithinNCols(7)
        tiles_within_7_row_and_column = list(set(tiles_within_7_row) & set(tiles_within_7_col))

        for tile in tiles_within_7_row_and_column:
            if tile.hero_on and tile.hero_on.isAllyOf(defender):
                ally_count += 1

        atkCombatBuffs[ATK] -= min(6 + ally_count * 3, 15)
        atkCombatBuffs[DEF] -= min(6 + ally_count * 3, 15)
        defr.damage_reduction_reduction.append(50)
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    if "drPierce30_f" in atkSkills:
        for i in range(0, atkSkills["drPierce30_f"]):
            atkr.damage_reduction_reduction.append(30)

    if "drPierce30_f" in defSkills:
        for i in range(0, defSkills["drPierce30_f"]):
            defr.damage_reduction_reduction.append(30)

    # THREE HOUSES/THREE HOPES

    # Sword of the Creator (Base/Refine Base) - Byleth
    if "up b side b" in atkSkills or "down throw bair" in defSkills:
        atkr.defensive_tempo = True
        atkr.offensive_tempo = True
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True

        if "down throw bair" in atkSkills:
            atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "up b side b" in defSkills or "down throw bair" in defSkills:
        defr.defensive_tempo = True
        defr.offensive_tempo = True
        defr.defensive_NFU = True
        defr.offensive_NFU = True

        if "down throw bair" in defSkills and defAllyWithin2Spaces:
            defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Sword of the Creator (Refine Eff) - Byleth
    if "HERE IS SOMETHING TO BELIEVE IN" in atkSkills:
        atkr.sp_pierce_DR = True
        if atkHPGreaterEqual25Percent:
            atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
            atkr.DR_first_hit_NSP.append(30)

    if "HERE IS SOMETHING TO BELIEVE IN" in defSkills:
        defr.sp_pierce_DR = True
        if defHPGreaterEqual25Percent:
            defCombatBuffs = [x + 4 for x in defCombatBuffs]
            defr.DR_first_hit_NSP.append(30)

    # Professorial Text (Base) - L!M!Byleth
    if "LMBylethBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

    if "LMBylethBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

    # Professorial Text (Refine Base) - L!M!Byleth
    if "LMBylethRefine" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_all_hits += 7

    if "LMBylethRefine" in defSkills and defAllyWithin3RowsCols:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_all_hits += 7

    # Professorial Text (Refine Eff) - L!M!Byleth
    if "YOU CANNOT STOP THE FLOW OF TIME" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 + len(atkAllyWithin3RowsCols) for x in atkCombatBuffs]
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[SPD] = True
        atkr.offensive_tempo = True
        atkr.defensive_tempo = True
        atkr.DR_first_strikes_NSP.append(30)

    if "YOU CANNOT STOP THE FLOW OF TIME" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 + len(defAllyWithin3RowsCols) for x in defCombatBuffs]
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[SPD] = True
        defr.offensive_tempo = True
        defr.defensive_tempo = True
        defr.DR_first_strikes_NSP.append(30)

    if "LBylethPenaltyNull" in atkSkills:
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[SPD] = True

    if "LBylethPenaltyNull" in atkSkills:
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[SPD] = True

    # Sun's Percussors (Base) - SU!F!Byleth
    if "suFBylethBoost" in atkSkills and (atkStats[SPD] + atkPhantomStats[SPD] > defStats[SPD] + defPhantomStats[SPD] or defHPEqual100Percent):
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "suFBylethBoost" in defSkills and (defStats[SPD] + defPhantomStats[SPD] > atkStats[SPD] + atkPhantomStats[SPD] or atkHPEqual100Percent):
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # Sun's Percussors (Refine Base) - SU!F!Byleth
    if "suFBylethRefine" in atkSkills and (atkStats[SPD] + atkPhantomStats[SPD] > defStats[SPD] + defPhantomStats[SPD] - 5 or defHPGreaterEqual75Percent):
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkCombatBuffs[DEF] += 4
        atkCombatBuffs[RES] += 4
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.offensive_tempo = True
        atkr.damage_reduction_reduction.append(50)

    if "suFBylethRefine" in defSkills and (defStats[SPD] + defPhantomStats[SPD] > atkStats[SPD] + atkPhantomStats[SPD] - 5 or atkHPGreaterEqual75Percent):
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defCombatBuffs[DEF] += 4
        defCombatBuffs[RES] += 4
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.offensive_tempo = True
        defr.damage_reduction_reduction.append(50)

    if "driveHalfDR_f" in atkSkills:
        for i in range(0, atkSkills["driveHalfDR_f"]):
            atkr.damage_reduction_reduction.append(50)

    if "driveHalfDR_f" in defSkills:
        for i in range(0, defSkills["driveHalfDR_f"]):
            defr.damage_reduction_reduction.append(50)

    # Sun's Percussors (Refine Eff) - SU!F!Byleth
    if "Nintendo Now:" in atkSkills:
        atkCombatBuffs = [x + min(4 + len(atkAllyWithin3Spaces) * 2, 10) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 15))

        atkr.DR_first_strikes_NSP.append(50)
        if defSpTriggeredByAttack:
            defr.sp_jump_first -= 1

    if "Nintendo Now:" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + min(4 + len(defAllyWithin3Spaces) * 2, 10) for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 15))

    # Professorial Guide (Base) - L!F!Byleth
    if "LFBylethBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.offensive_tempo = True
        atkr.defensive_tempo = True

    if "LFBylethBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.offensive_tempo = True
        defr.defensive_tempo = True

    # Professorial Guide (Refine Base) - L!F!Byleth
    if "LFBylethRefine" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.DR_first_strikes_NSP.append(30)
        atkr.offensive_tempo = True
        atkr.defensive_tempo = True

    if "LFBylethRefine" in defSkills and defAllyWithin3RowsCols:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.DR_first_strikes_NSP.append(30)
        defr.offensive_tempo = True
        defr.defensive_tempo = True

    # Professorial Guide (Refine Eff) - L!F!Byleth
    if "FOR A NEW TOMORROW" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 2 + 5, 11) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))
        atkr.sp_pierce_DR = True

    if "FOR A NEW TOMORROW" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(len(defAllyWithin3RowsCols) * 2 + 5, 11) for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))
        defr.sp_pierce_DR = True

    # Goddess Bearer II - L!F!Byleth
    if "goddessBearerII" in atkSkills and atkAllyWithin3RowsCols:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.sp_jump_first += 1

        if defSpTriggeredByAttack:
            defr.sp_jump_first -= 1

    if "goddessBearerII" in defSkills and defAllyWithin3RowsCols:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.sp_jump_first += 1

        if atkSpTriggeredByAttack:
            atkr.sp_jump_first -= 1

    # Inner Wellspring (Base) - B!F!Byleth
    if "bfBylethBoost" in atkSkills or "bfBylethRefine" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

    if ("bfBylethBoost" in defSkills or "bfBylethRefine" in defSkills) and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

    # Inner Wellspring (Refine Base) - B!F!Byleth
    if "bfBylethExtraStuff" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 + trunc(0.10 * atkStats[SPD]) for x in atkCombatBuffs]
        atkr.true_all_hits += 7
        atkr.offensive_tempo = True
        atkr.sp_pierce_DR = True

    if "bfBylethExtraStuff" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 + trunc(0.10 * defStats[SPD]) for x in defCombatBuffs]
        defr.true_all_hits += 7
        defr.offensive_tempo = True
        defr.sp_pierce_DR = True

    # Guide's Hourglass (Base) - DE!M!Byleth
    if "deBylethBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.offensive_tempo = True
        atkr.defensive_tempo = True

    if "deBylethBoost" in defSkills:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.offensive_tempo = True
        defr.defensive_tempo = True

    # Captain's Sword - FA!F!Byleth
    if "Hardy Bearing or Die Swearing" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defBonusesNeutralized = [True] * 5
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "Hardy Bearing or Die Swearing" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkBonusesNeutralized = [True] * 5
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Holy Yule Blade - WI!M!Byleth
    if "festivities" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5 + trunc(0.20 * atkStats[RES])
        atkCombatBuffs[DEF] += 5 + trunc(0.20 * atkStats[RES])
        atkCombatBuffs[RES] += 5 + trunc(0.20 * atkStats[RES])
        atkr.offensive_tempo = True

        if defSpTriggeredByAttack:
            X = 3 if savior_triggered else min(spaces_moved_by_atkr, 3)
            defr.sp_jump_first -= X

    if "festivities" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5 + trunc(0.20 * defStats[RES])
        defCombatBuffs[DEF] += 5 + trunc(0.20 * defStats[RES])
        defCombatBuffs[RES] += 5 + trunc(0.20 * atkStats[RES])
        defr.offensive_tempo = True

        if atkSpTriggeredByAttack:
            X = 3 if savior_triggered else min(spaces_moved_by_atkr, 3)
            atkr.sp_jump_first -= X

        if attacker.wpnType in RANGED_WEAPONS:
            disableCannotCounter = True

    # Supreme Heaven - WI!M!Byleth
    if "supremeHeaven" in atkSkills and defender.wpnType in RANGED_WEAPONS: atkr.DR_sp_trigger_by_any_special_SP.append(30)
    if "supremeHeaven" in defSkills and attacker.wpnType in RANGED_WEAPONS: defr.DR_sp_trigger_by_any_special_SP.append(30)

    # Breaker Lance (Base) - Jeralt
    if "he lives" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[DEF] -= 6
        defr.follow_up_denials -= 1

    if "he lives" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[DEF] -= 6
        atkr.follow_up_denials -= 1

    # Victorious Axe (Base) - Edelgard
    if "edelgardFU" in atkSkills and len(atkFoeWithin2Spaces) - 1 >= len(atkAllyWithin2Spaces):
        atkr.follow_ups_skill += 1

    if "edelgardFU" in defSkills and len(defFoeWithin2Spaces) - 1 >= len(defAllyWithin2Spaces):
        defr.follow_ups_skill += 1

    # Victorious Axe (Refine Base) - Edelgard
    if "edelgardRefineFU" in atkSkills and (atkHPGreaterEqual25Percent or len(atkFoeWithin2Spaces) - 1 >= len(atkAllyWithin2Spaces)):
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1

    if "edelgardRefineFU" in defSkills and (defHPGreaterEqual25Percent or len(defFoeWithin2Spaces) - 1 >= len(defAllyWithin2Spaces)):
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.follow_ups_skill += 1

    # Victorious Axe (Refine Eff) - Edelgard
    if "another 3 years" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((ATK, 10))

    if "another 3 years" in defSkills and not defAdjacentToAlly:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.true_stat_damages.append((ATK, 10))

    # Aymr (Base) - L!Edelgard
    if "THIS DOWN SPECIAL SUCKS!!!!" in atkSkills and not atkAdjacentToAlly:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[DEF] -= 6
        defr.follow_up_denials -= 1

    if "THIS DOWN SPECIAL SUCKS!!!!" in defSkills and not defAdjacentToAlly:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[DEF] -= 6
        atkr.follow_up_denials -= 1

    # Aymr (Base) - L!Edelgard
    if "aymrBoost" in atkSkills and not atkAdjacentToAlly:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[DEF] -= 6
        defr.follow_up_denials -= 1
        atkr.DR_first_hit_NSP.append(30)

    if "aymrBoost" in defSkills:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[DEF] -= 6
        atkr.follow_up_denials -= 1
        defr.DR_first_hit_NSP.append(30)

    # Aymr (Base) - L!Edelgard
    if "AIIIIMURRRRR" in atkSkills and (defHPGreaterEqual75Percent or not atkAdjacentToAlly):
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.true_stat_damages.append((ATK, 15))
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "AIIIIMURRRRR" in defSkills and (atkHPGreaterEqual75Percent or not defAdjacentToAlly):
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.true_stat_damages.append((ATK, 15))
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Raging Storm - L!Edelgard
    if "ragingStorm" in atkSkills and defender.wpnType in DRAGON_WEAPONS + BEAST_WEAPONS and not atkAdjacentToAlly:
        atkr.follow_ups_skill += 1

    if "ragingStorm" in defSkills and attacker.wpnType in DRAGON_WEAPONS + BEAST_WEAPONS and not defAdjacentToAlly:
        defr.follow_ups_skill += 1

    # Raging Storm II - L!Edelgard
    if "ragingStormII" in atkSkills and (atkHPGreaterEqual25Percent or not atkAdjacentToAlly):
        atkr.follow_ups_skill += 1
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5

        if defender.wpnType in DRAGON_WEAPONS + BEAST_WEAPONS:
            atkr.offensive_NFU = True

    if "ragingStormII" in defSkills and (defHPGreaterEqual25Percent or not defAdjacentToAlly):
        defr.follow_ups_skill += 1
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5

        if attacker.wpnType in DRAGON_WEAPONS + BEAST_WEAPONS:
            defr.offensive_NFU = True

    # Flower Hauteclere (Base) - B!Edelgard
    if "flowerEdelgard" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[DEF] -= 6

    if "flowerEdelgard" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[DEF] -= 6

    # Flower Hauteclere (Refine Eff) - B!Edelgard
    if "bravelgard" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += min(spaces_moved_by_atkr, 3) * 2 + 3
        atkCombatBuffs[DEF] += min(spaces_moved_by_atkr, 3) * 2 + 3
        atkCombatBuffs[RES] += min(spaces_moved_by_atkr, 3) * 2 + 3
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[DEF] -= 6
        atkr.all_hits_heal += 7

        if spaces_moved_by_atkr >= 1:
            defr.spLossOnAtk -= 1
            defr.spLossWhenAtkd -= 1

    if "bravelgard" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += min(spaces_moved_by_atkr, 3) * 2 + 3
        defCombatBuffs[DEF] += min(spaces_moved_by_atkr, 3) * 2 + 3
        defCombatBuffs[RES] += min(spaces_moved_by_atkr, 3) * 2 + 3
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[DEF] -= 6
        defr.all_hits_heal += 7

        if spaces_moved_by_atkr >= 1:
            atkr.spLossOnAtk -= 1
            atkr.spLossWhenAtkd -= 1

    # Black Eagle Rule - B!Edelgard
    if "blackEagles" in atkSkills and atkHPGreaterEqual25Percent:
        atkr.follow_ups_skill += 1

    if "blackEagles" in defSkills and defHPGreaterEqual25Percent:
        defr.follow_ups_skill += 1
        defr.DR_second_strikes_NSP.append(80)

    # Twin-Crest Power (Base) - FA!Edelgard
    if "IT'S ME" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[DEF] -= 6
        atkr.follow_up_denials -= 1
        defr.follow_up_denials -= 1

    if "IT'S ME" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[DEF] -= 6
        defr.follow_up_denials -= 1
        atkr.follow_up_denials -= 1

    # Twin-Crest Power (Refine Base) - FA!Edelgard
    if "My sins with pride" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[DEF] -= 6
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[DEF] = True
        atkr.true_stat_damages.append((DEF, 20))
        atkr.follow_up_denials -= 1
        defr.follow_up_denials -= 1

    if "My sins with pride" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[DEF] -= 6
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[DEF] = True
        defr.true_stat_damages.append((DEF, 20))
        defr.follow_up_denials -= 1
        atkr.follow_up_denials -= 1

    # Twin-Crest Power (Refine Eff) - FA!Edelgard
    if "MORE DISCOURSE" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= min(len(atkFoeWithin3RowsCols) * 2 + 6, 12)
        defCombatBuffs[DEF] -= min(len(atkFoeWithin3RowsCols) * 2 + 6, 12)
        atkr.TDR_stats.append((DEF, 20))

    if "MORE DISCOURSE" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= min(len(defFoeWithin3RowsCols) * 2 + 6, 12)
        atkCombatBuffs[DEF] -= min(len(defFoeWithin3RowsCols) * 2 + 6, 12)
        defr.TDR_stats.append((DEF, 20))

    # Armored Wall - FA!Edelgard
    if "armoredWall" in atkSkills and atkHPGreaterEqual25Percent:
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

        if attacker.transformed and attacker.unitCombatInitiates == 0:
            atkr.DR_first_hit_NSP.append(40)

    if "armoredWall" in defSkills and defHPGreaterEqual25Percent:
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

        if defender.transformed and defender.unitCombatInitiates == 0:
            defr.DR_first_hit_NSP.append(40)

    # Regal Sunshade (Base) - SU!Edelgard
    if "regalSunshade" in atkSkills and atkHPGreaterEqual25Percent:
        numFoesLeft = len(defAllAllies) + 1

        tiles_within_3_col = attacker.attacking_tile.tilesWithinNCols(3)
        tiles_within_3_row = attacker.attacking_tile.tilesWithinNRows(3)
        tiles_within_3_row_or_column = list(set(tiles_within_3_col) | set(tiles_within_3_row))

        numFoesWithin3Columns3Rows = 0

        for tile in tiles_within_3_row_or_column:
            if attacker.isEnemyOf(tile.hero_on):
                numFoesWithin3Columns3Rows += 1

        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[DEF] += 6
        atkr.DR_first_hit_NSP.append(40)

        X = 1 if numFoesLeft <= 2 else (2 if 3 <= numFoesLeft <= 5 else 3)
        if X <= numFoesWithin3Columns3Rows:
            atkr.brave = True

    if "regalSunshade" in defSkills and defHPGreaterEqual25Percent:
        numFoesLeft = len(atkAllAllies) + 1

        tiles_within_3_col = defender.tile.tilesWithinNCols(3)
        tiles_within_3_row = defender.tile.tilesWithinNRows(3)
        tiles_within_3_row_or_column = list(set(tiles_within_3_col) | set(tiles_within_3_row))

        numFoesWithin3Columns3Rows = 0

        for tile in tiles_within_3_row_or_column:
            if defender.isEnemyOf(tile.hero_on):
                numFoesWithin3Columns3Rows += 1

        defCombatBuffs[ATK] += 6
        defCombatBuffs[DEF] += 6
        defr.DR_first_hit_NSP.append(40)

        X = 1 if numFoesLeft <= 2 else (2 if 3 <= numFoesLeft <= 5 else 3)
        if X <= numFoesWithin3Columns3Rows:
            defr.brave = True

    # Black Yule Lance - WI!Edelgard
    if "wiEdelgardBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkPostCombatEffs[GIVEN_UNIT_SURVIVED].append(("dv_flame", 2, "foe", "one"))

        defCombatBuffs[ATK] -= max(15 - (len(atkAdjacentToAlly) * 2), 6)
        defCombatBuffs[DEF] -= max(15 - (len(atkAdjacentToAlly) * 2), 6)

        Y = 3 if defender.tile.divine_vein == DV_FLAME and defender.tile.divine_vein_turn >= 1 and defender.tile.divine_vein_side != defender.side else min(spaces_moved_by_atkr, 3)
        atkr.sp_jump_first += Y

        atkr.damage_reduction_reduction.append(max(100 - 30 * len(atkAdjacentToAlly), 0))

    if "wiEdelgardBoost" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= max(15 - (len(defAdjacentToAlly) * 2), 6)
        atkCombatBuffs[DEF] -= max(15 - (len(defAdjacentToAlly) * 2), 6)

        Y = 3 if attacker.attacking_tile.divine_vein == DV_FLAME and attacker.attacking_tile.divine_vein_turn >= 1 and attacker.attacking_tile.divine_vein_side != attacker.side else min(spaces_moved_by_atkr, 3)
        defr.sp_jump_first += Y

        defr.damage_reduction_reduction.append(max(100 - 30 * len(atkAdjacentToAlly), 0))

    # Raging Tempest - WI!Edelgard
    if "ragingTempest" in atkSkills and len(atkAdjacentToAlly) <= 1:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        atkr.true_stat_damages.append((ATK, 15))

    if "ragingTempest" in defSkills and len(defAdjacentToAlly) <= 1:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        defr.true_stat_damages.append((ATK, 15))

    # Eagle's Heart - V!Edelgard
    if "vEdelgardBoost" in atkSkills:
        defCombatBuffs[ATK] -= 6 + trunc(0.20 * atkStats[DEF])
        defCombatBuffs[DEF] -= 6 + trunc(0.20 * atkStats[DEF])

        X = len(attacker.statusPos + defender.statusNeg)
        atkr.true_all_hits += min(X * 5, 25)
        atkr.TDR_first_strikes += min(X * 3, 15)
        atkr.TDR_on_foe_sp += min(X * 3, 15)
        atkr.sp_jump_first += 1

        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "vEdelgardBoost" in defSkills and len(defAdjacentToAlly) <= 1:
        atkCombatBuffs[ATK] -= 6 + trunc(0.20 * defStats[DEF])
        atkCombatBuffs[DEF] -= 6 + trunc(0.20 * defStats[DEF])

        X = len(defender.statusPos + attacker.statusNeg)
        defr.true_all_hits += min(X * 5, 25)
        defr.TDR_first_strikes += min(X * 3, 15)
        defr.TDR_on_foe_sp += min(X * 3, 15)
        defr.sp_jump_first += 1

        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Pure Storm - V!Edelgard
    if "pureStorm" in atkSkills:
        if defender.unitCombatInitiates > 0:
            defr.special_disabled = True

        defCombatbuffs[ATK] -= 5
        defCombatbuffs[DEF] -= 5
        atkr.true_stat_damages.append((DEF, 20))
        atkr.damage_reduction_reduction.append(50)

    if "pureStorm" in defSkills and len(defAdjacentToAlly) <= 1:
        atkCombatbuffs[ATK] -= 5
        atkCombatbuffs[DEF] -= 5
        defr.true_stat_damages.append((DEF, 20))
        defr.damage_reduction_reduction.append(50)

    # Flame Battleaxe (Base) - Flame Emperor
    if "flameEmpBoost" in atkSkills and atkHPGreaterEqual25Percent:
        if defender.special:
            X = max(15 - (defender.specialMax * 2), 7)
        else:
            X = 7

        defCombatBuffs[ATK] -= X
        defCombatBuffs[DEF] -= X
        defr.spLossWhenAtkd -= 1
        defr.spLossOnAtk -= 1

    if "flameEmpBoost" in defSkills and defHPGreaterEqual25Percent:
        if attacker.special:
            X = max(15 - (attacker.specialMax * 2), 7)
        else:
            X = 7

        atkCombatBuffs[ATK] -= X
        atkCombatBuffs[DEF] -= X
        atkr.spLossWhenAtkd -= 1
        atkr.spLossOnAtk -= 1

    if "Some kind of twisted joke?" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.follow_ups_skill += 1

    if "Some kind of twisted joke?" in defSkills:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.follow_ups_skill += 1

    # Hrist (Base) - WI!Bernadetta
    if "wiBernieBoost" in atkSkills and not atkHPEqual100Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.DR_first_hit_NSP.append(30)

    if "wiBernieBoost" in defSkills and not defHPEqual100Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.DR_first_hit_NSP.append(30)

    # Bow of Repose (Base) - SP!Bernadetta
    if "spBernieBoost" in atkSkills and not atkHPEqual100Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defCombatBuffs[SPD] -= min(spaces_moved_by_atkr * 2 + 3, 11)
        defCombatBuffs[DEF] -= min(spaces_moved_by_atkr * 2 + 3, 11)

        if spaces_moved_by_atkr >= 1:
            atkr.DR_first_hit_NSP.append(30)
        if spaces_moved_by_atkr >= 2:
            atkr.offensive_NFU = True
            atkr.offensive_tempo = True

    if "spBernieBoost" in defSkills and not defHPEqual100Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkCombatBuffs[SPD] -= min(spaces_moved_by_atkr * 2 + 3, 11)
        atkCombatBuffs[DEF] -= min(spaces_moved_by_atkr * 2 + 3, 11)

        if spaces_moved_by_atkr >= 1:
            defr.DR_first_hit_NSP.append(30)
        if spaces_moved_by_atkr >= 2:
            defr.offensive_NFU = True
            defr.offensive_tempo = True

    # Hunting Blade (Base) - Petra
    if "petraEff" in atkSkills and atkAllyWithin2Spaces:
        for i in range(1, 5):
            if atkStats[i] + atkPhantomStats[i] < min([ally.get_visible_stat(i) + ally.get_phantom_stat_boost(i) for ally in atkAllyWithin2Spaces]):
                atkCombatBuffs[i] += 5

    if "petraEff" in defSkills and defAllyWithin2Spaces:
        for i in range(1, 5):
            if defStats[i] + defPhantomStats[i] < min([ally.get_visible_stat(i) + ally.get_phantom_stat_boost(i) for ally in defAllyWithin2Spaces]):
                atkCombatBuffs[i] += 5

    # Hunting Blade (Refine Base) - Petra
    if "petraEffRefine" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

        for i in range(1, 5):
            if atkStats[i] + atkPhantomStats[i] - 4 < min([ally.get_visible_stat(i) + ally.get_phantom_stat_boost(i) for ally in atkAllyWithin3Spaces]):
                atkCombatBuffs[i] += 6

    if "petraEffRefine" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

        for i in range(1, 5):
            if defStats[i] + defPhantomStats[i] - 4 < min([ally.get_visible_stat(i) + ally.get_phantom_stat_boost(i) for ally in defAllyWithin3Spaces]):
                defCombatBuffs[i] += 6

    # Hunting Blade (Refine Eff) - Petra
    if "petraBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.offensive_NFU = True

        if defHPEqual100Percent:
            atkr.offensive_tempo = True
            atkr.DR_first_hit_NSP.append(60)

    if "petraBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.offensive_NFU = True

    # Breaker Bow (SU!Petra)
    if "summerPetraBoost" in atkSkills and atkHPGreaterEqual25Percent:
        defPenaltiesNeutralized[SPD] = True
        defPenaltiesNeutralized[DEF] = True

        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        num_ally_high_atk = 0
        num_ally_high_spd = 0

        for ally in atkAllyWithin3RowsCols:
            if ally.get_visible_stat(ATK) >= 55:
                num_ally_high_atk += 1

            if ally.get_visible_stat(SPD) >= 40:
                num_ally_high_spd += 1

        # X is capped for stats, but not cooldown gain. Currently bugged?
        # https://twitter.com/i/status/1809296394047701142
        X = num_ally_high_atk + num_ally_high_spd

        atkCombatBuffs[ATK] += 6 * min(X, 3)
        atkCombatBuffs[SPD] += 6 * min(X, 3)

        if atkSpTriggeredByAttack:
            A = X + 1
            B = max(X + 1 - atkr.start_of_combat_special, 0)

            atkr.sp_jump_first += A
            atkr.sp_jump_followup += B

    if "summerPetraBoost" in defSkills and defHPGreaterEqual25Percent:
        atkPenaltiesNeutralized[SPD] = True
        atkPenaltiesNeutralized[DEF] = True

        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        num_ally_high_atk = 0
        num_ally_high_spd = 0

        for ally in defAllyWithin3RowsCols:
            if ally.get_visible_stat(ATK) >= 55:
                num_ally_high_atk += 1

            if ally.get_visible_stat(SPD) >= 40:
                num_ally_high_spd += 1

        X = num_ally_high_atk + num_ally_high_spd

        defCombatBuffs[ATK] += 6 * min(X, 3)
        defCombatBuffs[SPD] += 6 * min(X, 3)

        if defSpTriggeredByAttack:
            A = X + 1
            B = max(X + 1 - defr.start_of_combat_special, 0)

            defr.sp_jump_first += A
            defr.sp_jump_followup += B

    # Noble Lance (Base) - Dimitri
    if "with this lance I protect the lesbians" in atkSkills and (atkHPEqual100Percent == defHPEqual100Percent):
        atkr.follow_ups_skill += 1

    if "with this lance I protect the lesbians" in defSkills and (atkHPEqual100Percent == defHPEqual100Percent):
        defr.follow_ups_skill += 1

    # Noble Lance (Refine Base) - Dimitri
    if "with this lance I protect trans lesbians" in atkSkills and (not atkHPEqual100Percent or defHPGreaterEqual75Percent):
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1

    if "with this lance I protect trans lesbians" in defSkills and (not defHPEqual100Percent or atkHPGreaterEqual75Percent):
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.follow_ups_skill += 1

    # Noble Lance (Refine Eff) - Dimitri
    if "of fire emblem" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((ATK, 10))
        atkr.TDR_stats.append((ATK, 10))
        atkr.damage_reduction_reduction.append(50)

    if "of fire emblem" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.true_stat_damages.append((ATK, 10))
        defr.TDR_stats.append((ATK, 10))
        defr.damage_reduction_reduction.append(50)

    # Moon Gradivus (Base) - B!Dimitri
    if "specialCharg" in atkSkills:
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "specialCharg" in defSkills:
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Moon Gradivus (Refine Eff) - B!Dimitri
    if "azuMoon" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[SPD] += 5
        atkCombatBuffs[DEF] += 5
        atkCombatBuffs[RES] += 5
        atkr.true_stat_damages.append((DEF, 20))
        atkr.TDR_stats.append((DEF, 20))
        defCombatBuffs[DEF] -= 5
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[DEF] = True

    if "azuMoon" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[SPD] += 5
        defCombatBuffs[DEF] += 5
        defCombatBuffs[RES] += 5
        defr.true_stat_damages.append((DEF, 20))
        defr.TDR_stats.append((DEF, 20))
        atkCombatBuffs[DEF] -= 5
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[DEF] = True

    # Blue Lion Rule - B!Dimitri
    if "blueLions" in atkSkills:
        atkr.stat_scaling_DR.append((DEF, 40))

    if "blueLions" in defSkills:
        defr.stat_scaling_DR.append((DEF, 40))
        defr.follow_ups_skill += 1

    # Areadbhar (Base/Refine Base) - L!Dimitri
    if ("he can beat the guy from berserk" in atkSkills or "LDimitriBoost" in atkSkills) and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.stat_scaling_DR.append((SPD, 40))

        if "LDimitriBoost" in atkSkills:
            atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if ("he can beat the guy from berserk" in defSkills or "LDimitriBoost" in defSkills) and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.stat_scaling_DR.append((SPD, 40))

        if "LDimitriBoost" in defSkills:
            defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Areadbhar (Refine Eff) - L!Dimitri
    if "not just kills. but murders." in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.offensive_tempo = True
        atkr.defensive_tempo = True
        atkr.damage_reduction_reduction.append(50)

    if "not just kills. but murders." in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.offensive_tempo = True
        defr.defensive_tempo = True
        defr.damage_reduction_reduction.append(50)

    # Atrocity
    if "atrocity" in atkSkills and defHPGreaterEqual50Percent:
        atkr.true_stat_damages.append((SPD, 25))

    if "atrocity" in defSkills and atkHPGreaterEqual50Percent:
        defr.true_stat_damages.append((SPD, 25))

    # Atrocity II
    if "atrocityII" in atkSkills and defHPCur / defStats[HP] >= 0.40:
        defCombatBuffs[ATK] -= 4
        defCombatBuffs[SPD] -= 4
        defCombatBuffs[DEF] -= 4
        atkr.true_stat_damages.append((SPD, 25))
        atkr.DR_first_hit.append(40)

    if "atrocityII" in defSkills and atkHPCur / atkStats[HP] >= 0.40:
        atkCombatBuffs[ATK] -= 4
        atkCombatBuffs[SPD] -= 4
        atkCombatBuffs[DEF] -= 4
        defr.true_stat_damages.append((SPD, 25))
        defr.DR_first_hit.append(40)

    # Vengeful Lance (Base) - FA!Dimitri
    if "big guy" in atkSkills and not atkAdjacentToAlly:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

    if "big guy" in defSkills and not defAdjacentToAlly:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

    # Vengeful Lance (Refine Base) - FA!Dimitri
    if "dimithree houses" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[SPD] = True

    if "dimithree houses" in defSkills and not defAdjacentToAlly:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[SPD] = True

    # Vengeful Lance (Refine Eff) - FA!Dimitri
    if "TEIOOOOO" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6 + trunc(0.10 * atkStats[SPD])
        atkCombatBuffs[SPD] += 6 + trunc(0.10 * atkStats[SPD])
        atkr.sp_pierce_DR = True

    if "TEIOOOOO" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6 + trunc(0.10 * defStats[SPD])
        defCombatBuffs[SPD] += 6 + trunc(0.10 * defStats[SPD])
        defr.sp_pierce_DR = True

    # Murderous Lion - FA!Dimitri
    if "very evil dimitri" in atkSkills and not atkAdjacentToAlly:
        defCombatBuffs[SPD] -= 3
        defCombatBuffs[DEF] -= 3
        cannot_counter = True

    if "very evil dimitri" in defSkills and not defAdjacentToAlly:
        atkCombatBuffs[SPD] -= 3
        atkCombatBuffs[DEF] -= 3

    # Unyielding Oar (Base) - SU!Dimitri
    if "suDimitriBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

    if "suDimitriBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

    # Blue Yule Axe - WI!Dimitri
    if "Are you gonna release the demon wra-" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 + trunc(0.15 * atkStats[SPD]) for x in atkCombatBuffs]

        Y = 3 if len(attacker.statusPos) >= 4 else min(spaces_moved_by_atkr, 3)
        atkr.sp_jump_first += Y

        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "Are you gonna release the demon wra-" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 + trunc(0.15 * defStats[SPD]) for x in defCombatBuffs]

        Y = 3 if len(defender.statusPos) >= 4 else min(spaces_moved_by_atkr, 3)
        defr.sp_jump_first += Y

        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Barbarity - WI!Dimitri
    if "barbarity" in atkSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 4
        defCombatBuffs[SPD] -= 4
        defCombatBuffs[DEF] -= 4
        atkr.true_stat_damages.append((ATK, 25))
        atkr.DR_first_strikes_NSP.append(40)

        atkPostCombatEffs[UNCONDITIONAL].append(("status", Status.Vantage, "self", "one"))
        atkPostCombatEffs[UNCONDITIONAL].append(("status", Status.Dodge, "self", "one"))
        atkPostCombatEffs[GIVEN_UNIT_SURVIVED].append(("debuff_omni", 6, "foe_and_foes_allies", "within_3_spaces_foe"))

    if "barbarity" in defSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 4
        atkCombatBuffs[SPD] -= 4
        atkCombatBuffs[DEF] -= 4
        defr.true_stat_damages.append((ATK, 25))
        defr.DR_first_strikes_NSP.append(40)

        defPostCombatEffs[UNCONDITIONAL].append(("status", Status.Vantage, "self", "one"))
        defPostCombatEffs[UNCONDITIONAL].append(("status", Status.Dodge, "self", "one"))
        defPostCombatEffs[GIVEN_UNIT_SURVIVED].append(("debuff_omni", 6, "foe_and_foes_allies", "within_3_spaces_foe"))

    # Lion's Heart - V!Dimitri
    if "vDimitriBoost" in atkSkills:
        atkCombatBuffs = [x + 5 + trunc(0.15 * atkStats[SPD]) for x in atkCombatBuffs]

        X = len(attacker.statusPos + defender.statusNeg)
        atkr.true_all_hits += min(X * 5, 25)
        atkr.TDR_first_strikes += min(X * 3, 15)
        atkr.TDR_on_foe_sp += min(X * 3, 15)

        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "vDimitriBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 + trunc(0.15 * defStats[SPD]) for x in defCombatBuffs]

        X = len(defender.statusPos + attacker.statusNeg)
        defr.true_all_hits += min(X * 5, 25)
        defr.TDR_first_strikes += min(X * 3, 15)
        defr.TDR_on_foe_sp += min(X * 3, 15)

        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Pure Atrocity - V!Dimitri
    if "pureAtrocity" in atkSkills:
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.true_stat_damages.append((ATK, 25))
        atkr.sp_jump_first += 1
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.damage_reduction_reduction.append(50)

        atkPostCombatEffs[GIVEN_UNIT_SURVIVED].append(("dv_haze", 2, "foe", "one"))
        atkPostCombatEffs[GIVEN_UNIT_SURVIVED].append(("remove_bonuses", 2, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "pureAtrocity" in defSkills:
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.true_stat_damages.append((ATK, 25))
        defr.sp_jump_first += 1
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.damage_reduction_reduction.append(50)

    # Taciturn Axe (Base) - Dedue
    if "dedueBoost" in atkSkills and atkAllyWithin3Spaces:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[DEF] -= 6
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

        support_partners = []
        highest_atk_allies = []

        for ally in atkAllAllies:
            if ally.isSupportOf(attacker):
                support_partners.append(ally)

            if not highest_atk_allies or ally.get_visible_stat(ATK) == highest_atk_allies[0].get_visible_stat(ATK):
                highest_atk_allies.append(ally)
            elif ally.get_visible_stat(ATK) > highest_atk_allies[0].get_visible_stat(ATK):
                highest_atk_allies = [ally]

        if disableSupportEffects:
            support_partners = []

        if support_partners:
            target_allies = support_partners
        else:
            target_allies = highest_atk_allies

        if any([ally in target_allies for ally in atkAllyWithin3Spaces]):
            atkr.true_stat_damages.append((DEF, 30))
        else:
            atkr.true_stat_damages.append((DEF, 20))

    if "dedueBoost" in defSkills and defAllyWithin3Spaces:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[DEF] -= 6
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

        support_partners = []
        highest_atk_allies = []

        for ally in defAllAllies:
            if ally.isSupportOf(defender):
                support_partners.append(ally)

            if not highest_atk_allies or ally.get_visible_stat(ATK) == highest_atk_allies[0].get_visible_stat(ATK):
                highest_atk_allies.append(ally)
            elif ally.get_visible_stat(ATK) > highest_atk_allies[0].get_visible_stat(ATK):
                highest_atk_allies = [ally]

        if disableSupportEffects:
            support_partners = []

        if support_partners:
            target_allies = support_partners
        else:
            target_allies = highest_atk_allies

        if any([ally in target_allies for ally in defAllyWithin3Spaces]):
            defr.true_stat_damages.append((DEF, 30))
        else:
            defr.true_stat_damages.append((DEF, 20))

    # Taciturn Axe (Refine Eff) - Dedue
    if "taciturnAxe" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 6 + trunc(0.10 * atkStats[DEF])
        defCombatBuffs[DEF] -= 6 + trunc(0.10 * atkStats[DEF])
        atkPenaltiesNeutralized = [True] * 5

    if "taciturnAxe" in defSkills:
        atkCombatBuffs[ATK] -= 6 + trunc(0.10 * defStats[DEF])
        atkCombatBuffs[DEF] -= 6 + trunc(0.10 * defStats[DEF])
        defPenaltiesNeutralized = [True] * 5

    # Arcane Crest
    if "arcaneCrest" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + max(5, min(trunc(0.25 * defStats[ATK]) - 4, 14)) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((ATK, 15))
        atkr.TDR_stats.append((ATK, 15))
        atkr.sp_jump_first -= 1

    if "arcaneCrest" in defSkills:
        defCombatBuffs = [x + max(5, min(trunc(0.25 * atkStats[ATK]) - 4, 14)) for x in defCombatBuffs]
        defr.true_stat_damages.append((ATK, 15))
        defr.TDR_stats.append((ATK, 15))
        defr.sp_jump_first -= 1

    # For the True King - FA!Dedue
    if "forTheTrueKing" in atkSkills and attacker.transformed:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        atkCombatBuffs[RES] += 5
        atkr.true_all_hits += 7
        atkr.TDR_all_hits += 7
        atkr.sp_jump_first += 1
        atkr.DR_sp_trigger_twin = True

    if "forTheTrueKing" in defSkills:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        defCombatBuffs[RES] += 5
        defr.true_all_hits += 7
        defr.TDR_all_hits += 7
        defr.sp_jump_first += 1
        defr.DR_sp_trigger_twin = True

    # Crusher (Refine Base) - Annette
    if "annetteBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.DR_first_strikes_NSP.append(40)

    if "annetteBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.DR_first_strikes_NSP.append(40)

    # Crusher (Refine Eff) - Annette
    if "CRUSHER" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

        defCombatBuffs[SPD] -= max(6 + defender.get_total_debuff(SPD), 0)
        defCombatBuffs[DEF] -= max(6 + defender.get_total_debuff(DEF), 0)
        defCombatBuffs[RES] -= max(6 + defender.get_total_debuff(RES), 0)
        atkr.follow_ups_skill += 1
        atkr.true_stat_damages.append((ATK, 15))

        # Unsure if it still applies after death
        atkPostCombatEffs[UNCONDITIONAL].append(("seal_spd", 6, "foe", "one"))
        atkPostCombatEffs[UNCONDITIONAL].append(("seal_def", 6, "foe", "one"))
        atkPostCombatEffs[UNCONDITIONAL].append(("seal_res", 6, "foe", "one"))

    if "CRUSHER" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

        atkCombatBuffs[SPD] -= max(6 + attacker.get_total_debuff(SPD), 0)
        atkCombatBuffs[DEF] -= max(6 + attacker.get_total_debuff(DEF), 0)
        atkCombatBuffs[RES] -= max(6 + attacker.get_total_debuff(RES), 0)
        defr.follow_ups_skill += 1
        defr.true_stat_damages.append((ATK, 15))

        defPostCombatEffs[UNCONDITIONAL].append(("seal_spd", 6, "foe", "one"))
        defPostCombatEffs[UNCONDITIONAL].append(("seal_def", 6, "foe", "one"))
        defPostCombatEffs[UNCONDITIONAL].append(("seal_res", 6, "foe", "one"))

    # Starpoint Lance (Base) - SU!Ingrid
    if "dibs" in atkSkills and attacker.unitCombatInitiates == 0:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 10, "self", "one"))

    if "dibs" in defSkills and defender.unitCombatInitiates == 0:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 10, "self", "one"))

    # Starpoint Lance (Refine Base) - SU!Ingrid
    if "dibsdibs" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 10, "self", "one"))
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

        if attacker.unitCombatInitiates == 0:
            atkr.damage_reduction_reduction.append(80)
        else:
            atkr.damage_reduction_reduction.append(40)

    if "dibsdibs" in defSkills:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 10, "self", "one"))
        defr.offensive_NFU = True
        defr.defensive_NFU = True

        if defender.unitCombatInitiates == 0:
            defr.damage_reduction_reduction.append(80)
        else:
            defr.damage_reduction_reduction.append(40)

    # Starpoint Lance (Refine Eff) - SU!Ingrid
    if "suIngidStuff" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))

    if "suIngidStuff" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))

    # Lúin (Base) - Ingrid
    if "I'm running out of tags to give these things" in atkSkills:
        atkCombatBuffs[SPD] += 6
        atkr.true_stat_damages.append((SPD, 20))

    if "I'm running out of tags to give these things" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[SPD] += 6
        defr.true_stat_damages.append((SPD, 20))

    # Lúin (Refine Base) - Ingrid
    if "ingridBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.true_stat_damages.append((SPD, 20))

    if "ingridBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.true_stat_damages.append((SPD, 20))

    # Lúin (Refine Eff) - Ingrid
    if "shadow the hedgehog" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.offensive_tempo = True
        atkr.sp_jump_first += 1

    if "shadow the hedgehog" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.offensive_tempo = True
        defr.sp_jump_first += 1

    if "nullSelfBonuses" in atkSkills: atkBonusesNeutralized = [True] * 5
    if "nullSelfBonuses" in defSkills: defBonusesNeutralized = [True] * 5

    # Arcane Lúin
    if "when the weapon that slowly kills you if you lack a crest can be given to everyone bottom text" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))
        defBonusesNeutralized[SPD] = True
        defBonusesNeutralized[DEF] = True

    if "when the weapon that slowly kills you if you lack a crest can be given to everyone bottom text" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))
        atkBonusesNeutralized[SPD] = True
        atkBonusesNeutralized[DEF] = True

    # Knightly Devotion - R!Ingrid
    if "knightlyDevotion" in atkSkills:
        atkCombatBuffs = [x + 8 for x in atkCombatBuffs]
        atkPenaltiesNeutralized = [True] * 5
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "knightlyDevotion" in defSkills:
        defCombatBuffs = [x + 8 for x in defCombatBuffs]
        defPenaltiesNeutralized = [True] * 5
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Lone-Wolf Blade (Base) - Felix
    if ">:(" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.DR_all_hits_NSP.append(30)

        if not atkAdjacentToAlly:
            defCombatBuffs[ATK] -= 5
            defCombatBuffs[SPD] -= 5
            defCombatBuffs[DEF] -= 5

    if ">:(" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.DR_all_hits_NSP.append(30)

        if not defAdjacentToAlly:
            atkCombatBuffs[ATK] -= 5
            atkCombatBuffs[SPD] -= 5
            atkCombatBuffs[DEF] -= 5

    # New Levin Sword - B!Felix
    if "bFelixBoost" in atkSkills and (len(atkAdjacentToAlly) <= 1 or defHPGreaterEqual75Percent):
        atkCombatBuffs = [x + 5 + trunc(0.15 * atkStats[SPD]) for x in atkCombatBuffs]
        atkr.offensive_tempo = True
        atkr.damage_reduction_reduction.append(50)

    if "bFelixBoost" in defSkills and (len(defAdjacentToAlly) <= 1 or atkHPGreaterEqual75Percent):
        defCombatBuffs = [x + 5 + trunc(0.15 * defStats[SPD]) for x in defCombatBuffs]
        defr.offensive_tempo = True
        defr.damage_reduction_reduction.append(50)

    # Lone Wolf - B!Felix
    if "lone_wolf" in atkSkills and (atkHPGreaterEqual25Percent or len(atkAdjacentToAlly) <= 1):
        defCombatBuffs = [x - 5 for x in defCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))
        atkr.TDR_stats.append((SPD, 20))

    if "lone_wolf" in defSkills and (defHPGreaterEqual25Percent or len(defAdjacentToAlly) <= 1):
        atkCombatBuffs = [x - 5 for x in atkCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))
        defr.TDR_stats.append((SPD, 20))

    # Flingster Spear (SP!Sylvain)
    if "sling a thing" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.DR_first_strikes_NSP.append(40)
        if Status.SpecialCharge in attacker.statusPos:
            atkr.offensive_tempo = True

    if "sling a thing" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.DR_first_strikes_NSP.append(40)
        if Status.SpecialCharge in defender.statusPos:
            defr.offensive_tempo = True

    # Failnaught (Base) - L!Claude
    if "LClaudeBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "LClaudeBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # Failnaught (Refine Eff) - L!Claude
    if "the nair landing hitbox has won me many a game" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.offensive_tempo = True
        atkr.damage_reduction_reduction.append(50)

    if "the nair landing hitbox has won me many a game" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.offensive_tempo = True
        defr.damage_reduction_reduction.append(50)

    # Fallen Star - L!Claude
    if "fallenStar" in atkSkills:
        atkr.DR_first_hit_NSP.append(80)
        atkPostCombatEffs[GIVEN_UNIT_SURVIVED].append(("status", Status.FallenStar, "self", "one"))
        atkPostCombatEffs[GIVEN_UNIT_SURVIVED].append(("status", Status.Gravity, "foe_and_foes_allies", "within_1_spaces_foe"))

    if Status.FallenStar in attacker.statusPos and attacker.unitCombatInitiates == 0:
        atkr.DR_first_hit_NSP.append(80)

    if Status.FallenStar in defender.statusPos and defender.unitCombatInitiates == 0:
        defr.DR_first_hit_NSP.append(80)

    # Fallen Star II - L!Claude
    if "fallenStarII" in atkSkills:
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5

        X = len(attacker.statusPos) + len(defender.statusNeg)

        atkr.true_all_hits += min(5 * X, 25)
        atkr.TDR_first_strikes += min(3 * X, 15)

        atkr.DR_first_strikes_NSP.append(80)
        atkPostCombatEffs[GIVEN_UNIT_SURVIVED].append(("status", Status.FallenStar, "self", "one"))
        atkPostCombatEffs[GIVEN_UNIT_SURVIVED].append(("status", Status.Gravity, "foe_and_foes_allies", "within_1_spaces_foe"))

    if "fallenStarII" in defSkills and Status.DeepStar in defender.statusPos:
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5

        X = len(defender.statusPos) + len(attacker.statusNeg)

        defr.true_all_hits += min(5 * X, 25)
        defr.TDR_first_strikes += min(3 * X, 15)

    if Status.DeepStar in defender.statusPos and defender.unitCombatInitiates == 0:
        defr.DR_first_strikes_NSP.append(80)

    # Playful Pinwheel - FF!Claude
    if "windClaude" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkCombatBuffs[ATK] += 2 * (len(attacker.statusPos) + len(defender.statusNeg))
        atkCombatBuffs[SPD] += 2 * (len(attacker.statusPos) + len(defender.statusNeg))

        X = min(len(attacker.statusPos), atkSpCountCur)
        Y = max(len(attacker.statusPos) - atkSpCountCur, 0)

        if atkSpTriggeredByAttack:
            atkr.sp_jump_first += X
            atkr.sp_jump_followup += Y

    if "windClaude" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defCombatBuffs[ATK] += 2 * (len(defender.statusPos) + len(attacker.statusNeg))
        defCombatBuffs[SPD] += 2 * (len(defender.statusPos) + len(attacker.statusNeg))

        X = min(len(defender.statusPos), defSpCountCur)
        Y = max(len(defender.statusPos) - defSpCountCur, 0)

        if defSpTriggeredByAttack:
            defr.sp_jump_first += X
            defr.sp_jump_followup += Y

    # Deep Star - FF!Claude
    if "deepStar" in atkSkills:
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.DR_first_strikes_NSP.append(80)
        atkPostCombatEffs[GIVEN_UNIT_SURVIVED].append(("status", Status.FallenStar, "self", "one"))
        atkPostCombatEffs[GIVEN_UNIT_SURVIVED].append(("status", Status.Gravity, "foe_and_foes_allies", "within_1_spaces_foe"))

    if "deepStar" in defSkills and defAllyWithin2Spaces:
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.DR_first_strikes_NSP.append(30)

    # Deer's Heart - V!Claude
    if "vClaudeBoost" in atkSkills:
        atkCombatBuffs = [x + 5 + trunc(0.15 * atkStats[SPD]) for x in atkCombatBuffs]
        defBonusesNeutralized[SPD] = True
        defBonusesNeutralized[DEF] = True

        X = len(attacker.statusPos + defender.statusNeg)
        atkr.true_all_hits += min(X * 5, 25)
        atkr.offensive_tempo = True
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "vClaudeBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 + trunc(0.15 * defStats[SPD]) for x in defCombatBuffs]
        atkBonusesNeutralized[SPD] = True
        atkBonusesNeutralized[DEF] = True

        X = len(defender.statusPos + attacker.statusNeg)
        defr.true_all_hits += min(X * 5, 25)
        defr.offensive_tempo = True
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Pure Starfall - V!Claude
    if "pureStarfall" in atkSkills:
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.true_stat_damages.append((SPD, 20))
        atkr.TDR_first_stats.append((SPD, 20))
        atkr.damage_reduction_reduction.append(50)
        if defSpTriggeredByAttack:
            defr.sp_jump_first -= 1

        atkr.DR_first_strikes_NSP.append(80)
        atkPostCombatEffs[GIVEN_UNIT_SURVIVED].append(("status", Status.FallenStar, "self", "one"))
        atkPostCombatEffs[GIVEN_UNIT_SURVIVED].append(("status", Status.Vantage, "self", "one"))
        atkPostCombatEffs[GIVEN_UNIT_SURVIVED].append(("status", Status.Gravity, "foe_and_foes_allies", "within_1_spaces_foe"))

    if "pureStarfall" in defSkills and Status.DeepStar in defender.statusPos:
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.true_stat_damages.append((SPD, 20))
        defr.TDR_first_stats.append((SPD, 20))
        defr.damage_reduction_reduction.append(50)
        if atkSpTriggeredByAttack:
            atkr.sp_jump_first -= 1

    # Freikugel (Base) - 3H!Hilda
    if "hildaField" in atkSkills and not any([ally.get_visible_stat(DEF) + ally.get_phantom_stat(DEF) > atkStats[DEF] + atkPhantomStats[DEF] for ally in atkAllyWithin2Spaces]):
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

    if "hildaField" in defSkills and not any([ally.get_visible_stat(DEF) + ally.get_phantom_stat(DEF) > defStats[DEF] + defPhantomStats[DEF] for ally in defAllyWithin2Spaces]):
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

    # Freikugel (Refine Base) - 3H!Hilda
    if "allyFoeDenial_f" in atkSkills:
        defr.follow_up_denials -= atkSkills["allyFoeDenial_f"]

    if "allyFoeDenial_f" in defSkills:
        atkr.follow_up_denials -= defSkills["allyFoeDenial_f"]

    if "hildaRefineField" in atkSkills and (not any([ally.get_visible_stat(DEF) > attacker.get_visible_stat(DEF) for ally in atkAllyWithin2Spaces]) or not atkAdjacentToAlly):
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.true_stat_damages.append((SPD, 10))

    if "hildaRefineField" in defSkills and (not any([ally.get_visible_stat(DEF) > defender.get_visible_stat(DEF) for ally in defAllyWithin2Spaces]) or not defAdjacentToAlly):
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.true_stat_damages.append((SPD, 10))

    # Freikugel (Refine Eff) - 3H!Hilda
    if "HILDA! HILDA!" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.DR_first_hit_NSP.append(40)

    if "HILDA! HILDA!" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.DR_first_hit_NSP.append(40)

    # Sunshade Staff (Base) - SU!3H!Hilda
    if "suHildaBoost" in atkSkills and not atkAdjacentToAlly:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

    if "suHildaBoost" in defSkills and not defAdjacentToAlly:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

    # Fuming Freikugel (Base) - A!3H!Hilda
    if "aHildaBoost" in atkSkills and (not any([ally.get_visible_stat(DEF) > attacker.get_visible_stat(DEF) for ally in atkAllyWithin2Spaces]) or not atkAdjacentToAlly):
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.DR_first_hit_NSP.append(40)

    if "aHildaBoost" in defSkills and (not any([ally.get_visible_stat(DEF) > defender.get_visible_stat(DEF) for ally in defAllyWithin2Spaces]) or not defAdjacentToAlly):
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.DR_first_hit_NSP.append(40)

    if "aHildaDR_f" in atkSkills:
        for i in range(0, atkSkills["aHildaDR_f"]):
            atkr.DR_first_hit_NSP.append(20)

    if "aHildaDR_f" in defSkills:
        for i in range(0, defSkills["aHildaDR_f"]):
            defr.DR_first_hit_NSP.append(20)

    # Hades Ω (Base) - Lysithea
    if "lysitheaBoost" in atkSkills:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4

        if attacker.special and atkSpCountCur == attacker.specialMax:
            atkCombatBuffs[ATK] += 6

    # Hades Ω (Refine Base) - Lysithea
    if "lysiRefineBoost" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[SPD] = True

        if attacker.special and atkSpCountCur <= 2:
            atkCombatBuffs[ATK] += 7
            atkCombatBuffs[SPD] += 7

    if "lysiRefineBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[SPD] = True

        if defender.special and defSpCountCur <= 2:
            defCombatBuffs[ATK] += 7
            defCombatBuffs[SPD] += 7

    # Hades Ω (Refine Eff) - Lysithea
    if "You're irrelevant" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.true_stat_damages.append((SPD, 20))
        defBonusesNeutralized[SPD] = True
        defBonusesNeutralized[RES] = True
        atkr.sp_jump_first += 1

    if "You're irrelevant" in defSkills and attacker.wpnType in RANGED_WEAPONS:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.true_stat_damages.append((SPD, 20))
        atkBonusesNeutralized[SPD] = True
        atkBonusesNeutralized[RES] = True
        defr.sp_jump_first += 1

    # Dark Spikes T (Base) - B!Lysithea
    if "the magic baby in question:" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

        if not atkHPEqual100Percent:
            atkr.self_desperation = True

    if "the magic baby in question:" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

    # Dark Spikes T (Refine Eff) - B!Lysithea
    if "lysitheaSchmovement" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.spGainOnAtk += 1

    if "lysitheaSchmovement" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.spGainOnAtk += 1

    # Sweet Yule Log (Base) - WI!Lysithea
    if "wiLysitheaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

    if "wiLysitheaBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

    # Baked Treats - T!Lysithea
    if "tLysitheaBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.offensive_NFU = True
        defBonusesNeutralized[SPD] = True
        defBonusesNeutralized[RES] = True

    if "tLysitheaBoost" in defSkills:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.offensive_NFU = True
        atkBonusesNeutralized[SPD] = True
        atkBonusesNeutralized[RES] = True

    # Icy Fimbulvetr (Base) - Marianne
    if "marianneBoost" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[RES] -= 6

        if any([ally for ally in atkAllyWithin3Spaces if ally.move == 1 or ally.move == 2]):
            atkr.follow_ups_skill += 1
            atkr.all_hits_heal += 5

    if "marianneBoost" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[RES] -= 6

        if any([ally for ally in defAllyWithin3Spaces if ally.move == 1 or ally.move == 2]):
            defr.follow_ups_skill += 1
            defr.all_hits_heal += 5

    # Icy Fimbulvetr (Refine Base) - Marianne
    if "marianneCanto" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[RES] -= 6
        defCombatBuffs[SPD] -= 5
        atkr.follow_ups_skill += 1
        atkr.all_hits_heal += 7

    if "marianneCanto" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[RES] -= 6
        atkCombatBuffs[SPD] -= 5
        defr.follow_ups_skill += 1
        defr.all_hits_heal += 7

    # Icy Fimbulvetr (Refine Eff) - Marianne
    if "marianneDance" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= trunc(0.10 * atkStats[RES]) + 5
        defCombatBuffs[SPD] -= trunc(0.10 * atkStats[RES]) + 5
        defCombatBuffs[RES] -= trunc(0.10 * atkStats[RES]) + 5
        atkr.true_stat_damages.append((RES, 20))

    if "marianneDance" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= trunc(0.10 * defStats[RES]) + 5
        atkCombatBuffs[SPD] -= trunc(0.10 * defStats[RES]) + 5
        atkCombatBuffs[RES] -= trunc(0.10 * defStats[RES]) + 5
        defr.true_stat_damages.append((RES, 20))

    # Phantasm Tome (Base) - B!Marianne
    if "bMarianneBoost" in atkSkills and defHPGreaterEqual50Percent:
        defCombatBuffs[SPD] -= 6
        defCombatBuffs[RES] -= 6
        defBonusesNeutralized[SPD] = True
        defBonusesNeutralized[RES] = True
        atkr.DR_first_hit_NSP.append(70)

    if "bMarianneBoost" in defSkills and atkHPGreaterEqual50Percent:
        atkCombatBuffs[SPD] -= 6
        atkCombatBuffs[RES] -= 6
        atkBonusesNeutralized[SPD] = True
        atkBonusesNeutralized[RES] = True

    # Phantasm Tome (Refine Base) - B!Marianne
    if "bMarianneRefine" in atkSkills:
        defCombatBuffs[SPD] -= 6
        defCombatBuffs[RES] -= 6
        defBonusesNeutralized[SPD] = True
        defBonusesNeutralized[RES] = True
        atkr.DR_first_hit_NSP.append(80)

    if "bMarianneRefine" in defSkills and atkHPGreaterEqual50Percent:
        atkCombatBuffs[SPD] -= 6
        atkCombatBuffs[RES] -= 6
        atkBonusesNeutralized[SPD] = True
        atkBonusesNeutralized[RES] = True
        defr.DR_first_hit_NSP.append(30)

    # Phantasm Tome (Refine Eff) - B!Marianne
    if "Goddess, forgive me…" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))
        atkr.damage_reduction_reduction.append(50)
        atkr.offensive_tempo = True

    if "Goddess, forgive me…" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))
        defr.damage_reduction_reduction.append(50)
        defr.offensive_tempo = True

    # Arcane Blutgang
    if "arcaneBlutgang" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + max(5, min(trunc(0.25 * defStats[ATK]) - 4, 14)) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((ATK, 15))
        atkr.TDR_first_strikes += 7
        atkr.offensive_tempo = True
        atkr.sp_jump_first += 1

    if "arcaneBlutgang" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + max(5, min(trunc(0.25 * atkStats[ATK]) - 4, 14)) for x in defCombatBuffs]
        defr.true_stat_damages.append((ATK, 15))
        defr.TDR_first_strikes += 7
        defr.offensive_tempo = True
        defr.sp_jump_first += 1

    # Requiem Prayer - R!Marianne
    if "requiemPrayer" in atkSkills:
        atkr.DR_dragon_fang_shot_SP = True

    if "requiemPrayer" in defSkills:
        defr.DR_dragon_fang_shot_SP = True

    # Honorable Blade (Base) - Yuri
    if "yuriBoost" in atkSkills and defHPGreaterEqual50Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

    if "yuriBoost" in defSkills and atkHPGreaterEqual50Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

    # Abyssal Blade (Base) - L!Yuri
    if "LYuriBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.true_stat_damages.append((SPD, 20))
        atkr.DR_first_hit_NSP.append(30)

    if "LYuriBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.true_stat_damages.append((SPD, 20))
        defr.DR_first_hit_NSP.append(30)

    # Tangy Sundae - SU!Yuri
    if "suYuriBoost" in atkSkills:
        atkCombatBuffs = [x + min(len(atkFoeWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]

        X = len(attacker.statusPos) + len(defender.statusNeg)
        atkr.true_all_hits += min(5 * X, 25)
        atkr.TDR_first_strikes += min(3 * X, 15)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

        if defSpTriggeredByAttack:
            defr.sp_jump_first -= 1

    if "suYuriBoost" in defSkills and defHPGreaterEqual75Percent:
        defCombatBuffs = [x + min(len(defFoeWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]

        X = len(defender.statusPos) + len(attacker.statusNeg)
        defr.true_all_hits += min(5 * X, 25)
        defr.TDR_first_strikes += min(3 * X, 15)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # The True Dromi - SU!Yuri
    if "theTrueDromi" in atkSkills and atkHPGreaterEqual25Percent:
        atkr.true_all_hits += 7
        atkr.TDR_first_strikes += 7

    if "theTrueDromi" in defSkills and defHPGreaterEqual25Percent:
        defr.true_all_hits += 7
        defr.TDR_first_strikes += 7

    # Agnea's Arrow (Base) - Constance
    if "constanceBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.offensive_NFU = True
        if turn % 2 == 1:
            defBonusesNeutralized[SPD] = True
            defBonusesNeutralized[RES] = True
        else:
            atkPenaltiesNeutralized[ATK] = True
            atkPenaltiesNeutralized[SPD] = True

    if "constanceBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.offensive_NFU = True
        if turn % 2 == 1:
            atkBonusesNeutralized[SPD] = True
            atkBonusesNeutralized[RES] = True
        else:
            defPenaltiesNeutralized[ATK] = True
            defPenaltiesNeutralized[SPD] = True

    # Demonic Tome (Base) - Hapi
    if "hapiBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

    if "hapiBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

    # Summer Chilling - SU!Hapi
    if "suHapiBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6 + trunc(0.20 * atkStats[SPD])
        atkCombatBuffs[SPD] += 6 + trunc(0.20 * atkStats[SPD])
        atkr.true_stat_damages.append((SPD, 20))

        atkr.follow_ups_skill += 1

    if "suHapiBoost" in defSkills:
        defCombatBuffs[ATK] += 6 + trunc(0.20 * defStats[SPD])
        defCombatBuffs[SPD] += 6 + trunc(0.20 * defStats[SPD])
        defr.true_stat_damages.append((SPD, 20))

    # Cardinal's Tome (Base) - Aelfric
    if "aelfricBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkr.follow_ups_skill += 1
        atkr.TDR_first_strikes += 7

    if "aelfricBoost" in defSkills and defHPGreaterEqual25Percent:
        defr.follow_ups_skill += 1
        defr.TDR_first_strikes += 7

    # Cardinal's Tome (Refine Eff) - Aelfric
    if "aelFRICK" in atkSkills and atkAllyWithin3Spaces:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[RES] -= 6
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 10, "self", "one"))

    if "aelFRICK" in defSkills and defAllyWithin3Spaces:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[RES] -= 6
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 10, "self", "one"))

    # Thunderbrand (Base) - Catherine
    if "thundabrand" in atkSkills and defHPGreaterEqual50Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.offensive_NFU = True
        atkr.self_desperation = True

    if "thundabrand" in defSkills and atkHPGreaterEqual50Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.offensive_NFU = True

    # Thunderbrand (Refine Base) - Catherine
    if "catherineRefine" in atkSkills and defHPGreaterEqual50Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.self_desperation = True

    if "catherineRefine" in defSkills and atkHPGreaterEqual50Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    if "burger attack!" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[SPD] = True
        atkr.true_stat_damages.append((SPD, 20))

    if "burger attack!" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[SPD] = True
        defr.true_stat_damages.append((SPD, 20))

    # Survivalist Bow (Base) - Shamir
    if "shamirSweep" in atkSkills and not atkAdjacentToAlly:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

        if defender.HPcur / defStats[HP] >= 0.80:
            cannotCounter = True

    if "shamirSweep" in defSkills and not defAdjacentToAlly:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

    # Survivalist Bow (Refine Base) - Shamir
    if "shamirRefine" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.sp_jump_first += 1

        if defHPGreaterEqual50Percent:
            cannotCounter = True

    if "shamirRefine" in defSkills and len(defAdjacentToAlly) >= 1:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.sp_jump_first += 1

    # Survivalist Bow (Refine Eff) - Shamir
    if "survivialist" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[SPD] = True
        atkr.true_stat_damages.append((SPD, 20))

    if "survivialist" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[SPD] = True
        defr.true_stat_damages.append((SPD, 20))

    # Caduceus Staff (Base) - Flayn
    if "flaynField_f" in atkSkills:
        for i in range(0, atkSkills["flaynField_f"]):
            atkr.DR_all_hits_NSP.append(30)

    if "flaynField_f" in defSkills:
        for i in range(0, defSkills["flaynField_f"]):
            defr.DR_all_hits_NSP.append(30)

    # Caduceus Staff (Refine Base) - Flayn
    if "flaynRefineField" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.DR_all_hits_NSP.append(30)
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "flaynRefineField" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.DR_all_hits_NSP.append(30)
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Caduceus Staff (Refine Eff) - Flayn
    if "The girl who like the fish" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1

    if "The girl who like the fish" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1

    # Kitty-Cat Parasol
    if "hFlaynBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[RES] += 6
        atkr.follow_ups_skill += 1

    if "hFlaynBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[RES] += 6
        defr.follow_ups_skill += 1

    # Spear of Assal (Base) - Seteth
    if "I have something to ask of you" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[SPD] = True

    if "I have something to ask of you" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[SPD] += 4
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[SPD] = True

    # Spear of Assal (Refine Base) - Seteth
    if "Flayn's got us trapped in the McDonald's playplace" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defBonusesNeutralized = [True] * 5

    if "Flayn's got us trapped in the McDonald's playplace" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkBonusesNeutralized = [True] * 5

    # Spear of Assal (Refine Eff) - Seteth
    if "Please get us out. We haven't eaten our order yet." in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.true_all_hits += 7
        atkr.TDR_first_strikes += 7
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "Please get us out. We haven't eaten our order yet." in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.true_all_hits += 7
        defr.TDR_first_strikes += 7
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "setethField_f" in atkSkills:
        atkr.true_all_hits += 7
        atkr.TDR_first_strikes += 7

    if "setethField_f" in defSkills:
        defr.true_all_hits += 7
        defr.TDR_first_strikes += 7

    # Aptitude Arrows (Base) - Cyril
    if "cyrilBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(trunc(0.25 * attacker.level), 10) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))
        atkPenaltiesNeutralized = [True] * 5

    if "cyrilBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(trunc(0.25 * defender.level), 10) for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))
        defPenaltiesNeutralized = [True] * 5

    # Revealing Breath (Base) - Rhea
    if "rheaBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "rheaBoost" in defSkills:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Witch Breath (Base) - H!Rhea
    if "hRheaBoost" in atkSkills:
        if defHPGreaterEqual50Percent:
            atkCombatBuffs[ATK] += 6
            atkr.follow_ups_skill += 1
        if atkHPGreaterEqual50Percent:
            defCombatBuffs[ATK] -= 6
            defr.follow_up_denials -= 1

    if "hRheaBoost" in defSkills:
        if atkHPGreaterEqual50Percent:
            defCombatBuffs[ATK] += 6
            defr.follow_ups_skill += 1
        if defHPGreaterEqual50Percent:
            atkCombatBuffs[ATK] -= 6
            atkr.follow_up_denials -= 1

    # Ruinous Frost (Base) - FA!Rhea
    if "faRheaBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 6
        defCombatBuffs[ATK] -= 6
        atkr.follow_up_denials -= 1
        defr.follow_up_denials -= 1

    if "faRheaBoost" in defSkills:
        defCombatBuffs[ATK] += 6
        atkCombatBuffs[ATK] -= 6
        atkr.follow_up_denials -= 1
        defr.follow_up_denials -= 1

    # True Dragon Wall
    if "trueDragonWall" in atkSkills:
        if attacker.unitCombatInitiates == 0:
            atkr.stat_scaling_DR.append((RES, 60))
        else:
            atkr.stat_scaling_DR.append((RES, 40))

        if any([ally.wpnType in DRAGON_WEAPONS for ally in atkAllAllies]):
            atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "trueDragonWall" in defSkills:
        if defender.unitCombatInitiates == 0:
            defr.stat_scaling_DR.append((RES, 60))
        else:
            defr.stat_scaling_DR.append((RES, 40))

        if any([ally.wpnType in DRAGON_WEAPONS for ally in defAllAllies]):
            defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Devoted Breath - V!Rhea
    if "vRheaBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 5 + trunc(0.20 * atkStats[RES])
        atkCombatBuffs[DEF] += 5 + trunc(0.20 * atkStats[RES])
        atkCombatBuffs[RES] += 5 + trunc(0.20 * atkStats[RES])

        X = min(len(atkAllyWithin3Spaces) * 5, 15)

        atkr.true_all_hits += X
        atkr.TDR_all_hits += X
        atkr.follow_ups_skill += 1
        atkr.damage_reduction_reduction.append(50)
        atkr.pseudo_miracle = True

    if "vRheaBoost" in defSkills:
        defCombatBuffs[ATK] += 5 + trunc(0.20 * defStats[RES])
        defCombatBuffs[DEF] += 5 + trunc(0.20 * defStats[RES])
        defCombatBuffs[RES] += 5 + trunc(0.20 * defStats[RES])

        X = 15 if savior_triggered else min(len(defAllyWithin3Spaces) * 5, 15)

        defr.true_all_hits += X
        defr.TDR_all_hits += X
        defr.follow_ups_skill += 1
        defr.damage_reduction_reduction.append(50)
        defr.pseudo_miracle = True

    if "vRheaDR_f" in atkSkills: atkr.TDR_first_strikes += atkSkills["vRheaDR_f"]
    if "vRheaDR_f" in defSkills: defr.TDR_first_strikes += defSkills["vRheaDR_f"]

    if "vRheaMiracle_f" in defSkills: defr.pseudo_miracle = True

    # Pure Dragon Wall - V!Rhea
    if "pureDragonWall" in atkSkills:
        if attacker.unitCombatInitiates == 0:
            atkr.stat_scaling_DR.append((RES, 60))
            atkr.true_stat_damages.append((RES, 30))
            atkr.TDR_stats.append((RES, 30))
        else:
            atkr.stat_scaling_DR.append((RES, 40))
            atkr.true_stat_damages.append((RES, 20))
            atkr.TDR_stats.append((RES, 20))

        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        defCombatBuffs[RES] -= 5
        atkr.offensive_tempo = True

        dragon_beast_cond = False

        for ally in atkAllAllies:
            if ally.wpnType in DRAGON_WEAPONS + BEAST_WEAPONS:
                dragon_beast_cond = True
                break

        if atkAllyWithin2Spaces or dragon_beast_cond:
            atkPostCombatEffs[UNCONDITIONAL].append(("heal", 10, "self", "one"))

    if "pureDragonWall" in defSkills:
        if defender.unitCombatInitiates == 0:
            defr.stat_scaling_DR.append((RES, 60))
            defr.true_stat_damages.append((RES, 30))
            defr.TDR_stats.append((RES, 30))
        else:
            defr.stat_scaling_DR.append((RES, 40))
            defr.true_stat_damages.append((RES, 20))
            defr.TDR_stats.append((RES, 20))

        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        atkCombatBuffs[RES] -= 5
        defr.offensive_tempo = True

        dragon_beast_cond = False

        for ally in defAllAllies:
            if ally.wpnType in DRAGON_WEAPONS + BEAST_WEAPONS:
                dragon_beast_cond = True
                break

        if defAllyWithin2Spaces or dragon_beast_cond:
            defPostCombatEffs[UNCONDITIONAL].append(("heal", 10, "self", "one"))

    # Aurora Breath (Base) - Seiros
    if "seirosBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkr.follow_ups_skill += 1

    if "seirosBoost" in defSkills:
        defCombatBuffs[DEF] += 6
        defCombatBuffs[RES] += 6
        atkr.follow_up_denials -= 1

    # Aurora Breath (Refine Base) - Seiros
    if "seirosRefineBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[DEF] += 6
        atkCombatBuffs[RES] += 6
        atkr.follow_ups_skill += 1
        defr.follow_up_denials -= 1
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "seirosRefineBoost" in defSkills:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[DEF] += 6
        defCombatBuffs[RES] += 6
        defr.follow_ups_skill += 1
        atkr.follow_up_denials -= 1
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Aurora Breath (Refine Eff) - Seiros
    if "seirosDragonWall" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[DEF] += 4
        atkCombatBuffs[RES] += 4
        atkr.true_stat_damages_from_foe.append((RES, 15))
        atkr.stat_scaling_DR.append((RES, 40))
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "seirosDragonWall" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[DEF] += 4
        defCombatBuffs[RES] += 4
        defr.true_stat_damages_from_foe.append((RES, 15))
        defr.stat_scaling_DR.append((RES, 40))
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Wings of Light - Seiros
    if "wingsOfLight_f" in atkSkills and turn <= 5:
        mythic_count = 0

        if attacker.blessing and attacker.blessing.element >= 4 and attacker.blessing.boostType != 0:
            mythic_count += 1

        for ally in atkAllAllies:
            if ally.blessing and ally.blessing.element >= 4 and ally.blessing.boostType != 0:
                mythic_count += 1

        if mythic_count <= 3:
            atkCombatBuffs = [x + (2 + turn) * atkSkills["wingsOfLight_f"] for x in atkCombatBuffs]

    if "wingsOfLight_f" in defSkills and turn <= 5:
        mythic_count = 0

        if defender.blessing and defender.blessing.element >= 4 and defender.blessing.boostType != 0:
            mythic_count += 1

        for ally in defAllAllies:
            if ally.blessing and ally.blessing.element >= 4 and ally.blessing.boostType != 0:
                mythic_count += 1

        if mythic_count <= 3:
            defCombatBuffs = [x + (2 + turn) * defSkills["wingsOfLight_f"] for x in defCombatBuffs]

    # Wings of Light+ - Seiros
    if "wingsOfLightPlus" in atkSkills and (atkAllyWithin3RowsCols or [ally for ally in atkAllAllies if ally.blessing and ally.blessing.element >= 4 and ally.blessing.boostType != 0]):
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.DR_all_hits_NSP.append(30)
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "wingsOfLightPlus" in defSkills and (defAllyWithin3RowsCols or [ally for ally in defAllAllies if ally.blessing and ally.blessing.element >= 4 and ally.blessing.boostType != 0]):
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.DR_all_hits_NSP.append(30)
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    if "wingsOfLightPlus_f" in atkSkills:
        mythic_count = 0

        if attacker.blessing and attacker.blessing.element >= 4 and attacker.blessing.boostType != 0:
            mythic_count += 1

        for ally in atkAllAllies:
            if ally.blessing and ally.blessing.element >= 4 and ally.blessing.boostType != 0:
                mythic_count += 1

        if mythic_count <= 3:
            atkCombatBuffs = [x + min(3 + turn, 8) * atkSkills["wingsOfLight_f"] for x in atkCombatBuffs]
            atkr.DR_all_hits_NSP.append(30)

    if "wingsOfLightPlus_f" in defSkills:
        mythic_count = 0

        if defender.blessing and defender.blessing.element >= 4 and defender.blessing.boostType != 0:
            mythic_count += 1

        for ally in defAllAllies:
            if ally.blessing and ally.blessing.element >= 4 and ally.blessing.boostType != 0:
                mythic_count += 1

        if mythic_count <= 3:
            defCombatBuffs = [x + min(3 + turn, 8) * defSkills["wingsOfLight_f"] for x in defCombatBuffs]
            defr.DR_all_hits_NSP.append(30)

    # Charging Horn (Base) - Gatekeeper
    if "gatekeeperBoost" in atkSkills:
        destroyable_struct_near = False

        for tile in attacker.attacking_tile.tilesWithinNSpaces(2):
            if tile.structure_on and self.map.tiles[n].structure_on.struct_type != attacker.side + 1 and \
                    self.map.tiles[n].structure_on.health > 0 and "Trap" not in self.map.tiles[n].structure_on.name:
                destroyable_struct_near = True
                break

        num_allies = len(atkAllyWithin3RowsCols) if not destroyable_struct_near else 3

        if num_allies >= 1:
            defCombatBuffs[ATK] -= max(num_allies * 2, 6)
            defCombatBuffs[RES] -= max(num_allies * 2, 6)
        if num_allies >= 3:
            defr.follow_up_denials -= 1

    if "gatekeeperBoost" in defSkills:
        destroyable_struct_near = False

        for tile in defender.tile.tilesWithinNSpaces(2):
            if tile.structure_on and self.map.tiles[n].structure_on.struct_type != defender.side + 1 and \
                    self.map.tiles[n].structure_on.health > 0 and "Trap" not in self.map.tiles[n].structure_on.name:
                destroyable_struct_near = True
                break

        num_allies = len(defAllyWithin3RowsCols) if not destroyable_struct_near else 3

        if num_allies >= 1:
            atkCombatBuffs[ATK] -= max(num_allies * 2, 6)
            atkCombatBuffs[RES] -= max(num_allies * 2, 6)
        if num_allies >= 3:
            atkr.follow_up_denials -= 1

    # Charging Horn (Refine Base) - Gatekeeper
    if "gatekeeperRefine" in atkSkills:
        destroyable_struct_near = False

        for tile in attacker.attacking_tile.tilesWithinNSpaces(2):
            if tile.structure_on and self.map.tiles[n].structure_on.struct_type != attacker.side + 1 and \
                    self.map.tiles[n].structure_on.health > 0 and "Trap" not in self.map.tiles[n].structure_on.name:
                destroyable_struct_near = True
                break

        num_allies = len(atkAllyWithin3RowsCols) if not destroyable_struct_near else 3

        if num_allies >= 1:
            defCombatBuffs[ATK] -= max(num_allies * 3, 9)
            defCombatBuffs[RES] -= max(num_allies * 3, 9)
        if num_allies >= 2:
            defr.spLossOnAtk -= 1
            defr.spLossWhenAtkd -= 1
        if num_allies >= 3:
            defr.follow_up_denials -= 1

    if "gatekeeperRefine" in defSkills:
        destroyable_struct_near = False

        for tile in defender.tile.tilesWithinNSpaces(2):
            if tile.structure_on and self.map.tiles[n].structure_on.struct_type != defender.side + 1 and \
                    self.map.tiles[n].structure_on.health > 0 and "Trap" not in self.map.tiles[n].structure_on.name:
                destroyable_struct_near = True
                break

        num_allies = len(defAllyWithin3RowsCols) if not destroyable_struct_near else 3

        if num_allies >= 1:
            atkCombatBuffs[ATK] -= max(num_allies * 3, 9)
            atkCombatBuffs[RES] -= max(num_allies * 3, 9)
        if num_allies >= 2:
            atkr.spLossOnAtk -= 1
            atkr.spLossWhenAtkd -= 1
        if num_allies >= 3:
            atkr.follow_up_denials -= 1

    # Charging Horn (Refine Eff) - Gatekeeper
    if "Greetings!" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[RES] -= 6
        atkr.TDR_stats.append((DEF, 20))
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "Greetings!" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[RES] -= 6
        defr.TDR_stats.append((DEF, 20))
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Athame (Base) - Kronya
    if "kronyaVantage" in atkSkills and not defHPEqual100Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "kronyaVantage" in defSkills and not atkHPEqual100Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.vantage = True

    # Athame (Refine Base) - Kronya
    if "kronyaRefineVantage" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "kronyaRefineVantage" in defSkills and not atkHPEqual100Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.vantage = True

    # Athame (Refine Eff) - Kronya
    if "kronyaExposure" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "kronyaExposure" in defSkills and not defAdjacentToAlly:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Banshee Θ (Refine Base) - Solon
    if "solonRefine" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 6 + len(defender.statusNeg)
        defCombatBuffs[RES] -= 6 + len(defender.statusNeg)
        atkr.true_stat_damages.append((RES, 20))

    if "solonRefine" in defSkills:
        atkCombatBuffs[ATK] -= 6 + len(attacker.statusNeg)
        atkCombatBuffs[RES] -= 6 + len(attacker.statusNeg)
        defr.true_stat_damages.append((RES, 20))

    # Banshee Θ (Refine Eff) - Solon
    if "So joining Smash consumes even the darkness itself?" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[RES] -= 6
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[SPD] = True
        atkr.follow_ups_skill += 1

    if "So joining Smash consumes even the darkness itself?" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[RES] -= 6
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[SPD] = True
        defr.follow_ups_skill += 1

    # Sublime Surge (Refine Eff) - Sothis
    if "finalsmash.png" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.DR_first_hit_NSP.append(40)

    if "finalsmash.png" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.DR_first_hit_NSP.append(40)

    # Sirius+ - Sothis
    if "sothisTempo" in atkSkills: atkr.offensive_tempo = True
    if "sothisTempo" in defSkills: defr.offensive_tempo = True

    # Snow's Grace (Base) - WI!Sothis
    if 'snowthisBoost' in atkSkills and atkHPGreaterEqual50Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

    if 'snowthisBoost' in defSkills and defHPGreaterEqual50Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

    # Snow's Grace (Refine Base) - WI!Sothis
    if 'snowthisRefineBoost' in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkPenaltiesNeutralized = [True] * 5

    if 'snowthisRefineBoost' in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defPenaltiesNeutralized = [True] * 5

    # Snow's Grace (Refine Eff) - WI!Sothis
    if "merry.png" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.defensive_NFU = True
        atkr.DR_first_hit_NSP.append(30)

    if "merry.png" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.defensive_NFU = True
        defr.DR_first_hit_NSP.append(30)

    # Eerie Scripture (Base) - H!Sothis
    if "hSothisBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

    if "hSothisBoost" in defSkills:
        ignore_range = True
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

    # Dark Creator Sword (Base) - Nemesis
    if "DCSIYKYK" in atkSkills:
        ally_count = 0

        for ally in atkAllAllies:
            if ally.HPcur / ally.get_visible_stat(HP) >= 0.90:
                ally_count += 1

        atkCombatBuffs[ATK] += min(2 * ally_count, 6)
        atkCombatBuffs[DEF] += min(2 * ally_count, 6)

        if attacker.unitCombatInitiates == 0:
            atkr.DR_all_hits_NSP.append(min(15 * ally_count, 45))

    if "DCSIYKYK" in defSkills:
        ally_count = 0

        for ally in defAllAllies:
            if ally.HPcur / ally.get_visible_stat(HP) >= 0.90:
                ally_count += 1

        defCombatBuffs[ATK] += min(2 * ally_count, 6)
        defCombatBuffs[DEF] += min(2 * ally_count, 6)

        if defender.unitCombatInitiates == 0:
            defr.DR_all_hits_NSP.append(min(15 * ally_count, 45))

    # Dark Creator Sword (Refine Base) - Nemesis
    if "nemesisBoost" in atkSkills:
        ally_count = 0

        for ally in atkAllAllies:
            if ally.HPcur / ally.get_visible_stat(HP) >= 0.75:
                ally_count += 1

        atkCombatBuffs = [x + min(4 + 3 * ally_count, 13) for x in atkCombatBuffs]

        if attacker.unitCombatInitiates == 0:
            atkr.DR_all_hits_NSP.append(min(25 * ally_count, 75))
        else:
            atkr.DR_all_hits_NSP.append(min(15 * ally_count, 45))

    if "nemesisBoost" in defSkills:
        ally_count = 0

        for ally in defAllAllies:
            if ally.HPcur / ally.get_visible_stat(HP) >= 0.75:
                ally_count += 1

        defCombatBuffs = [x + min(4 + 3 * ally_count, 13) for x in defCombatBuffs]

        if defender.unitCombatInitiates == 0:
            defr.DR_all_hits_NSP.append(min(25 * ally_count, 75))
        else:
            defr.DR_all_hits_NSP.append(min(15 * ally_count, 45))

    # Dark Creator Sword (Refine Eff) - Nemesis
    if "clark" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "clark" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Crimson Blades (Base) - M!Shez
    # Grants Spd+5. Inflicts Def/Res-5. Unit attacks twice.
    # At start of combat, grants the following based on unit's HP:
    #  - if ≥ 20%, grants Special cooldown charge +1 to unit per attack
    #  - if ≥ 40%, reduces damage from first attack during combat by 40%
    if "shez!" in atkSkills:
        if atkHPCur / atkStats[HP] >= 0.20:
            atkr.spGainOnAtk += 1
            atkr.spGainWhenAtkd += 1
        if atkHPCur / atkStats[HP] >= 0.40:
            atkr.DR_first_hit_NSP.append(40)

    if "shez!" in defSkills:
        if defHPCur / defStats[HP] >= 0.20:
            defr.spGainOnAtk += 1
            defr.spGainWhenAtkd += 1
        if defHPCur / defStats[HP] >= 0.40:
            defr.DR_first_hit_NSP.append(40)

    # Crimson War-Axe (Base) - F!Shez
    if "fShez!" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

        if atkHPCur / atkStats[HP] >= 0.20:
            atkr.spGainOnAtk += 1
            atkr.spGainWhenAtkd += 1
        if atkHPCur / atkStats[HP] >= 0.40:
            atkr.DR_first_hit_NSP.append(40)

    if "fShez!" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

        if defHPCur / defStats[HP] >= 0.20:
            defr.spGainOnAtk += 1
            defr.spGainWhenAtkd += 1
        if defHPCur / defStats[HP] >= 0.40:
            defr.DR_first_hit_NSP.append(40)

    # Surfer's Spire/Surfer's Spade - SU!F!Shez, SU!M!Shez
    if "summerSHEZ!" in atkSkills: atkr.true_stat_damages.append((SPD, 20))
    if "summerSHEZ!" in defSkills: defr.true_stat_damages.append((SPD, 20))

    # Dual Sword - L!M!Shez
    if "SHEZ! ultimate" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.DR_first_strikes_NSP.append(30)
        atkr.offensive_tempo = True
        atkr.defensive_tempo = True

    if "SHEZ! ultimate" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(len(defAllyWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defr.DR_first_strikes_NSP.append(30)
        defr.offensive_tempo = True
        defr.defensive_tempo = True

    if "dualSword_f" in atkSkills:
        combat_count = attacker.unitCombatInitiates + sum([ally.unitCombatInitiates for ally in atkAllAllies])
        defCombatBuffs = [x - min(4 + (4 * combat_count), 12) for x in defCombatBuffs]

    if "dualSword_f" in defSkills:
        combat_count = defender.unitCombatInitiates + sum([ally.unitCombatInitiates for ally in defAllAllies])
        atkCombatBuffs = [x - min(4 + (4 * combat_count), 12) for x in atkCombatBuffs]

    # Shadow Slide - L!M!Shez
    if "shadowSlide" in atkSkills and atkAllyWithin3Spaces:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.true_stat_damages.append((SPD, 20))
        atkr.damage_reduction_reduction.append(50)
        atkr.TDR_first_strikes += 7

    if "shadowSlide" in defSkills and defAllyWithin3Spaces:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.true_stat_damages.append((SPD, 20))
        defr.damage_reduction_reduction.append(50)
        defr.TDR_first_strikes += 7

    # Red-Fist Blades - WI!F!Shez
    if "merryShez!mas" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(len(atkFoeWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))
        atkr.TDR_first_strikes += 7

    if "merryShez!mas" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(len(defFoeWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))
        defr.TDR_first_strikes += 7

    # Swift Ice - WI!F!Shez
    if "swiftIce" in atkSkills:
        atkCombatBuffs = [x + 8 for x in atkCombatBuffs]
        atkr.DR_first_strikes_NSP.append(30)
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.damage_reduction_reduction.append(50)

    if "swiftIce" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 8 for x in defCombatBuffs]
        defr.DR_first_strikes_NSP.append(30)
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.damage_reduction_reduction.append(50)

    # Rite of Souls (Base) - Arval
    if "arvalBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((RES, 20))
        defr.follow_up_denials -= 1

    if "arvalBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages.append((RES, 20))
        atkrr.follow_up_denials -= 1

    # Duality - Arval
    if "Single but not alone" in atkSkills and atkHPGreaterEqual25Percent: atkr.follow_ups_skill += 1
    if "Single but not alone" in defSkills and defHPGreaterEqual25Percent: defr.follow_ups_skill += 1

    # Swift Slace - L!F!Shez
    if "effShez" in atkSkills:
        atkCombatBuffs = [x + 8 for x in atkCombatBuffs]

    if "effShez" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 8 for x in defCombatBuffs]

    # Wind Genesis (Base) - Monica
    if "monicaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

        foe_special_count = 4 if not defender.special else defender.specialMax

        defCombatBuffs[SPD] -= max(11 - foe_special_count * 2, 3)
        defCombatBuffs[RES] -= max(11 - foe_special_count * 2, 3)

    if "monicaBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

        foe_special_count = 4 if not attacker.special else attacker.specialMax

        atkCombatBuffs[SPD] -= max(11 - foe_special_count * 2, 3)
        atkCombatBuffs[RES] -= max(11 - foe_special_count * 2, 3)

    num_left_to_act = len([ally for ally in atkAllAllies if ally in units_left_to_act])
    num_already_acted = len([ally for ally in atkAllAllies if ally not in units_left_to_act])

    # TOKYO MIRAGE SESSIONS

    # Mirage Falchion (Base) - Itsuki
    if "TMSFalchion" in atkSkills:
        atkCombatBuffs[ATK] += min(3 + 2 * num_already_acted, 7)
        atkCombatBuffs[DEF] += min(3 + 2 * num_already_acted, 7)

    if "TMSFalchion" in defSkills:
        atkCombatBuffs[ATK] += max(3, 7 - num_already_acted * 2)
        atkCombatBuffs[DEF] += max(3, 7 - num_already_acted * 2)

    # Mirage Falchion (Refine Base) - Itsuki
    if "Garfield You Fat Cat" in atkSkills:
        atkCombatBuffs = [x + min(4 + 3 * num_already_acted, 10) for x in atkCombatBuffs]
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "Garfield You Fat Cat" in defSkills:
        defCombatBuffs = [x + max(4, 10 - num_already_acted * 3) for x in defCombatBuffs]
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Mirage Falchion (Refine Eff) - Itsuki
    # If unit initiates combat or is within 2 spaces of an ally:
    #  - grants Atk/Spd/Def/Res+4 to unit
    #  - unit makes a guaranteed follow-up attack
    #  - reduces damage from first attack during combat by 30%
    if "Nintendo has forgotten about Mario…" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkr.DR_first_hit_NSP.append(30)

    if "Nintendo has forgotten about Mario…" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defr.DR_first_hit_NSP.append(30)

    # Mirage Feather (Base) - Tsubasa
    if "meow" in atkSkills and len(units_left_to_act) <= len(atkAllAllies):
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.self_desperation = True

    # Mirage Feather (Refine Base) - Tsubasa
    if "miao" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.offensive_NFU = True
        if len(units_left_to_act) <= len(atkAllAllies):
            atkr.self_desperation = True

    if "miao" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.offensive_NFU = True

    if "KOWASHITAI" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[SPD] = True

        if len(units_left_to_act) <= len(atkAllAllies):
            atkCombatBuffs[ATK] += 5
            atkCombatBuffs[SPD] += 5

    if "KOWASHITAI" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[SPD] = True

    # Mirage Longbow (Refine Base) - Eleonora
    if "ellySweep&Boost" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.true_stat_damages.append((SPD, 15))
        cannotCounter = True

    if "ellySweep&Boost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.true_stat_damages.append((SPD, 15))

    # Mirage Longbow (Refine Eff) - Eleonora
    if "ellyRefine" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        defBonusesNeutralized[SPD] = True
        defBonusesNeutralized[DEF] = True

    if "ellyRefine" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        atkBonusesNeutralized[SPD] = True
        atkBonusesNeutralized[DEF] = True

    # Mirage Rod (Refine Base) - Kiria
    if "kiriaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkr.follow_ups_skill += 1
        atkr.DR_second_strikes_NSP.append(75)

    if "kiriaBoost" in defSkills and defHPGreaterEqual25Percent:
        defr.follow_ups_skill += 1
        defr.DR_second_strikes_NSP.append(75)

    # Mirage Rod (Refine Eff) - Kiria
    if "kiriaSabotage" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[RES] -= 5
        atkr.true_stat_damages.append((ATK, 15))
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "kiriaSabotage" in defSkills:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[RES] -= 5
        defr.true_stat_damages.append((ATK, 15))
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Mirage Axe (Base) - Mamori
    if "midoriBoost" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[DEF] += 6
        atkCombatBuffs[RES] += 6
        defr.follow_up_denials -= 1

    if "midoriBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[DEF] += 6
        defCombatBuffs[RES] += 6
        atkr.follow_up_denials -= 1

    # Mirage Axe (Refine Base) - Mamori
    if "midoriRefineBoost" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4
        atkCombatBuffs[DEF] += 6
        atkCombatBuffs[RES] += 6
        defr.follow_up_denials -= 1

    if "midoriRefineBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[SPD] += 4
        defCombatBuffs[DEF] += 6
        defCombatBuffs[RES] += 6
        atkr.follow_up_denials -= 1

        atkCombatBuffs[ATK] -= max(6, min(num_left_to_act * 3, 12))
        atkCombatBuffs[DEF] -= max(6, min(num_left_to_act * 3, 12))

    # Mirage Axe (Refine Eff) - Mamori
    if "mamoriromam" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.DR_all_hits_NSP.append(30)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "mamoriromam" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.DR_all_hits_NSP.append(30)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "mamoriromam_f" in atkSkills:
        atkCombatBuffs[DEF] += 4 * atkSkills["mamoriromam_f"]
        atkCombatBuffs[RES] += 4 * atkSkills["mamoriromam_f"]
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7 * atkSkills["mamoriromam_f"], "self", "one"))

    if "mamoriromam_f" in defSkills:
        defCombatBuffs[DEF] += 4 * defSkills["mamoriromam_f"]
        defCombatBuffs[RES] += 4 * defSkills["mamoriromam_f"]
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7 * defSkills["mamoriromam_f"], "self", "one"))

    # ENGAGE

    # Libération (Base) - F!Alear/M!Alear
    if "BONDS OF FIIIIRE, CONNECT US" in atkSkills and atkHPGreaterEqual25Percent:
        titlesAmongAllies = []

        for ally in atkAllyWithin3Spaces:
            titlesAmongAllies.append(ally.primary_game)

            if ally.secondary_game != -1:
                titlesAmongAllies.append(ally.secondary_game)

        titlesAmongAllies = len(set(titlesAmongAllies))

        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defCombatBuffs[SPD] -= min(4 + titlesAmongAllies * 4, 12)
        defCombatBuffs[DEF] -= min(4 + titlesAmongAllies * 4, 12)
        atkr.stat_scaling_DR.append((SPD, 40))

    if "BONDS OF FIIIIRE, CONNECT US" in defSkills and defHPGreaterEqual25Percent:
        titlesAmongAllies = []

        for ally in defAllyWithin3Spaces:
            titlesAmongAllies.append(ally.primary_game)

            if ally.secondary_game != -1:
                titlesAmongAllies.append(ally.secondary_game)

        titlesAmongAllies = len(set(titlesAmongAllies))

        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkCombatBuffs[SPD] -= min(4 + titlesAmongAllies * 4, 12)
        atkCombatBuffs[DEF] -= min(4 + titlesAmongAllies * 4, 12)
        defr.stat_scaling_DR.append((SPD, 40))

    # Dragon's Fist (Base) - L!F!Alear
    if "ENGAGE!!!" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        titlesAmongAllies = []

        for ally in atkAllyWithin3Spaces:
            titlesAmongAllies.append(ally.primary_game)
            if ally.secondary_game != -1: titlesAmongAllies.append(ally.secondary_game)

        titlesAmongAllies = len(set(titlesAmongAllies))

        defCombatBuffs = [x - min(4 + titlesAmongAllies * 3, 10) for x in defCombatBuffs]
        atkr.DR_first_strikes_NSP.append(40)

    if "ENGAGE!!!" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        titlesAmongAllies = []

        for ally in defAllyWithin3Spaces:
            titlesAmongAllies.append(ally.primary_game)
            if ally.secondary_game != -1: titlesAmongAllies.append(ally.secondary_game)

        titlesAmongAllies = len(set(titlesAmongAllies))

        atkCombatBuffs = [x - min(4 + titlesAmongAllies * 3, 10) for x in atkCombatBuffs]
        defr.DR_first_strikes_NSP.append(40)

    # Dragon Blast - L!F!Alear
    if "bidenBlast" in atkSkills and any([ally.isSupportOf(attacker) for ally in atkAllyWithin3Spaces]) and not disableSupportEffects:
        atkr.sp_pierce_DR = True
        atkr.DR_sp_trigger_by_any_special_SP.append(40)

    if "bidenBlast" in defSkills and any([ally.isSupportOf(defender) for ally in defAllyWithin3Spaces]) and not disableSupportEffects:
        defr.sp_pierce_DR = True
        defr.DR_sp_trigger_by_any_special_SP.append(40)

    # Maritime Arts (SU!F!Alear)
    if "summerAlearBoost" in atkSkills and atkAllyWithin3Spaces:
        titlesAmongAlliesWithin3 = []

        for ally in atkAllyWithin3Spaces:
            titlesAmongAlliesWithin3.append(ally.primary_game)
            if ally.secondary_game != -1: titlesAmongAlliesWithin3.append(ally.secondary_game)

        titlesAmongAlliesWithin3 = len(set(titlesAmongAlliesWithin3))

        titlesAmongAllies = 0
        engaged_count = 0

        for ally in atkAllAllies:
            titlesAmongAllies.append(ally.primary_game)
            if ally.secondary_game != -1: titlesAmongAllies.append(ally.secondary_game)

            if ally.emblem:
                engaged_count += 1

        titlesAmongAllies = len(set(titlesAmongAllies))
        X = min(15, 5 * (titlesAmongAllies + engaged_count))

        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defCombatBuffs = [x - min(4 + titlesAmongAlliesWithin3 * 3, 10) for x in defCombatBuffs]
        atkr.true_all_hits += X
        atkr.TDR_first_strikes += X
        atkr.offensive_tempo = True

    if "summerAlearBoost" in defSkills and defAllyWithin3Spaces:

        titlesAmongAlliesWithin3 = []

        for ally in defAllyWithin3Spaces:
            titlesAmongAlliesWithin3.append(ally.primary_game)
            if ally.secondary_game != -1: titlesAmongAlliesWithin3.append(ally.secondary_game)

        titlesAmongAlliesWithin3 = len(set(titlesAmongAlliesWithin3))

        titlesAmongAllies = 0
        engaged_count = 0

        for ally in defAllAllies:
            titlesAmongAllies.append(ally.primary_game)
            if ally.secondary_game != -1: titlesAmongAllies.append(ally.secondary_game)

            if ally.emblem:
                engaged_count += 1

        titlesAmongAllies = len(set(titlesAmongAllies))
        X = min(15, 5 * (titlesAmongAllies + engaged_count))

        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defCombatBuffs = [x - min(4 + titlesAmongAlliesWithin3 * 3, 10) for x in defCombatBuffs]
        defr.true_all_hits += X
        defr.TDR_first_strikes += X
        defr.offensive_tempo = True

    # REDO ALL THIS WITH COMBAT FIELDS

    # Bond Blast - SU!Alear
    if "summerAlearBonds" in atkSkills:
        bonded_cond = False

        for ally in atkAllAllies:
            if (ally.isSupportOf(attacker) and not disableSupportEffects) or Status.Bonded in ally.statusPos:
                atkr.sp_pierce_DR = True
                break

        for ally in atkAllyWithin3Spaces:
            if (ally.isSupportOf(attacker) and not disableSupportEffects) or Status.Bonded in ally.statusPos:
                atkr.DR_sp_trigger_by_any_special_SP.append(40)
                break

    if "summerAlearBonds" in defSkills:
        bonded_cond = False

        for ally in defAllAllies:
            if (ally.isSupportOf(defender) and not disableSupportEffects) or Status.Bonded in ally.statusPos:
                atkr.sp_pierce_DR = True
                break

        for ally in defAllyWithin3Spaces:
            if (ally.isSupportOf(defender) and not disableSupportEffects) or Status.Bonded in ally.statusPos:
                defr.DR_sp_trigger_by_any_special_SP.append(40)
                break

    if "tropicalBidenBlast" in atkSkills: atkr.sp_pierce_DR = True
    if "tropicalBidenBlast" in defSkills: defr.sp_pierce_DR = True

    # Divine One's Arts - L!M!Alear
    if "Mr. Fire Emblem" in atkSkills and atkHPGreaterEqual25Percent:
        titlesAmongAllies = []

        for ally in atkAllyWithin3Spaces:
            titlesAmongAllies.append(ally.primary_game)
            if ally.secondary_game != -1: titlesAmongAllies.append(ally.secondary_game)

        titlesAmongAllies = len(set(titlesAmongAllies))

        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defCombatBuffs = [x - min(titlesAmongAllies * 3 + 4, 10) for x in defCombatBuffs]
        atkr.DR_first_strikes_NSP.append(50)

    if "Mr. Fire Emblem" in defSkills and defHPGreaterEqual25Percent:
        titlesAmongAllies = []

        for ally in defAllyWithin3Spaces:
            titlesAmongAllies.append(ally.primary_game)
            if ally.secondary_game != -1: titlesAmongAllies.append(ally.secondary_game)

        titlesAmongAllies = len(set(titlesAmongAllies))

        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkCombatBuffs = [x - min(titlesAmongAllies * 3 + 4, 10) for x in defCombatBuffs]
        defr.DR_first_strikes_NSP.append(50)

    # Emblems' Miracle - L!M!Alear
    if "Miracle O' Emblems" in atkSkills:
        if atkAllyWithin3Spaces:
            atkCombatBuffs = [x + 9 for x in atkCombatBuffs]
            atkr.DR_first_strikes_NSP.append(40)

    if "Miracle O' Emblems" in defSkills:
        ignore_range = True
        if defAllyWithin3Spaces:
            defCombatBuffs = [x + 9 for x in defCombatBuffs]
            defr.DR_first_strikes_NSP.append(40)
            
        if len(defAllyWithin3Spaces) >= 3 and not defender.once_per_map_cond:
            defr.pseudo_miracle = True

    # Wintery Arts - WI!M!Alear
    if "wiAlearBoost" in atkSkills and atkAllyWithin3Spaces:
        titlesAmongAlliesWithin3 = []

        for ally in atkAllyWithin3Spaces:
            titlesAmongAlliesWithin3.append(ally.primary_game)
            if ally.secondary_game != -1: titlesAmongAlliesWithin3.append(ally.secondary_game)

        titlesAmongAlliesWithin3 = len(set(titlesAmongAlliesWithin3))

        titlesAmongAllies = 0
        engaged_count = 0

        for ally in atkAllAllies:
            titlesAmongAllies.append(ally.primary_game)
            if ally.secondary_game != -1: titlesAmongAllies.append(ally.secondary_game)

            if ally.emblem:
                engaged_count += 1

        titlesAmongAllies = len(set(titlesAmongAllies))
        X = min(15, 5 * (titlesAmongAllies + engaged_count))

        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defCombatBuffs = [x - min(4 + titlesAmongAlliesWithin3 * 3, 10) for x in defCombatBuffs]
        atkr.true_all_hits += X
        atkr.TDR_first_strikes += X

    if "wiAlearBoost" in defSkills and defAllyWithin3Spaces:
        titlesAmongAlliesWithin3 = []

        for ally in defAllyWithin3Spaces:
            titlesAmongAlliesWithin3.append(ally.primary_game)
            if ally.secondary_game != -1: titlesAmongAlliesWithin3.append(ally.secondary_game)

        titlesAmongAlliesWithin3 = len(set(titlesAmongAlliesWithin3))

        titlesAmongAllies = 0
        engaged_count = 0

        for ally in defAllAllies:
            titlesAmongAllies.append(ally.primary_game)
            if ally.secondary_game != -1: titlesAmongAllies.append(ally.secondary_game)

            if ally.emblem:
                engaged_count += 1

        titlesAmongAllies = len(set(titlesAmongAllies))
        X = min(15, 5 * (titlesAmongAllies + engaged_count))

        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkCombatBuffs = [x - min(4 + titlesAmongAlliesWithin3 * 3, 10) for x in atkCombatBuffs]
        defr.true_all_hits += X
        defr.TDR_first_strikes += X

    if Status.DivinelyInspiring in attacker.statusPos:
        X = min(2, sum([1 for ally in atkAllyWithin3Spaces if Status.DivinelyInspiring in ally.statusPos]))

        atkCombatBuffs = [x + X * 3 for x in atkCombatBuffs]
        atkr.sp_jump_foe_first += X
        atkr.all_hits_heal += X * 4

    if Status.DivinelyInspiring in defender.statusPos:
        X = min(2, sum([1 for ally in defAllyWithin3Spaces if Status.DivinelyInspiring in ally.statusPos]))

        defCombatBuffs = [x + X * 3 for x in defCombatBuffs]
        defr.sp_jump_foe_first += X
        defr.all_hits_heal += X * 4

    # Fell Child's Arts - FA!F!Alear
    if "that is stupid" in atkSkills and atkHPGreaterEqual25Percent:
        titlesAmongAllies = []

        for ally in atkAllyWithin3Spaces:
            titlesAmongAllies.append(ally.primary_game)

            if ally.secondary_game != -1:
                titlesAmongAllies.append(ally.secondary_game)

        titlesAmongAllies = len(set(titlesAmongAllies))

        defCombatBuffs[ATK] -= min(titlesAmongAllies * 3 + 9, 15)
        defCombatBuffs[DEF] -= min(titlesAmongAllies * 3 + 9, 15)
        defCombatBuffs[RES] -= min(titlesAmongAllies * 3 + 9, 15)
        atkr.damage_reduction_reduction.append(50)

        atkr.true_stat_damages.append((RES, 20))
        atkr.TDR_stats.append((RES, 20))
        atkr.TDR_special_stats.append((RES, 20))

    if "that is stupid" in defSkills:
        titlesAmongAllies = []

        for ally in defAllyWithin3Spaces:
            titlesAmongAllies.append(ally.primary_game)

            if ally.secondary_game != -1:
                titlesAmongAllies.append(ally.secondary_game)

        titlesAmongAllies = len(set(titlesAmongAllies))

        X = 15 if savior_triggered else min(titlesAmongAllies * 3 + 9, 15)

        atkCombatBuffs[ATK] -= X
        atkCombatBuffs[DEF] -= X
        atkCombatBuffs[RES] -= X
        defr.damage_reduction_reduction.append(50)

        defr.true_stat_damages.append((RES, 20))
        defr.TDR_stats.append((RES, 20))
        defr.TDR_special_stats.append((RES, 20))

    # Fell Blast - FA!F!Alear
    if "fellBlast" in defSkills:
        defr.DR_sp_trigger_by_any_special_SP.append(40)

    if Status.FellSpirit in attacker.statusPos:
        defCombatBuffs = [x - 4 for x in defCombatBuffs]
        atkr.DR_sp_trigger_twin = True

        if attacker.emblem or defender.emblem:
            defCombatBuffs = [x - 2 for x in defCombatBuffs]

    if Status.FellSpirit in defender.statusPos:
        atkCombatBuffs = [x - 4 for x in atkCombatBuffs]
        disableCannotCounter = True
        defr.DR_sp_trigger_twin = True

        if attacker.emblem or defender.emblem:
            atkCombatBuffs = [x - 2 for x in atkCombatBuffs]

    # Fell Child's Blade - FA!M!Alear
    if "that is also stupid" in atkSkills and atkHPGreaterEqual25Percent:
        titlesAmongAllies = []

        for ally in atkAllyWithin3Spaces:
            titlesAmongAllies.append(ally.primary_game)

            if ally.secondary_game != -1:
                titlesAmongAllies.append(ally.secondary_game)

        titlesAmongAllies = len(set(titlesAmongAllies))

        defCombatBuffs = [x - min(titlesAmongAllies * 3 + 4, 10) for x in defCombatBuffs]
        atkr.damage_reduction_reduction.append(50)

        atkr.true_stat_damages.append((SPD, 20))
        atkr.TDR_stats.append((SPD, 20))
        atkr.TDR_special_stats.append((SPD, 20))
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "that is also stupid" in defSkills:
        titlesAmongAllies = []

        for ally in defAllyWithin3Spaces:
            titlesAmongAllies.append(ally.primary_game)

            if ally.secondary_game != -1:
                titlesAmongAllies.append(ally.secondary_game)

        titlesAmongAllies = len(set(titlesAmongAllies))

        atkCombatBuffs = [x - min(titlesAmongAllies * 3 + 4, 10) for x in atkCombatBuffs]
        defr.damage_reduction_reduction.append(50)

        defr.true_stat_damages.append((SPD, 20))
        defr.TDR_stats.append((SPD, 20))
        defr.TDR_special_stats.append((SPD, 20))
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Bond Breaker - FA!M!Alear
    if "bondBreaker" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 9 for x in atkCombatBuffs]
        atkr.TDR_first_strikes += 7
        atkr.pseudo_miracle = True

    if "bondBreaker" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 9 for x in defCombatBuffs]
        defr.TDR_first_strikes += 7
        defr.pseudo_miracle = True

    # Arcane Qiang
    if "we fight for peace" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        defr.follow_up_denials -= 1

        if spaces_moved_by_atkr > 0:
            atkr.spGainOnAtk += 1
            atkr.spGainWhenAtkd += 1

    if "we fight for peace" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        atkr.follow_up_denials -= 1

        if spaces_moved_by_atkr > 0:
            defr.spGainOnAtk += 1
            defr.spGainWhenAtkd += 1

    # Self-Improver - Alfred
    if "yowzaThatsALottaStats" in atkSkills and atkHPGreaterEqual25Percent:
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "yowzaThatsALottaStats" in defSkills and defHPGreaterEqual25Percent:
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Joyous Tome (Base) - Céline
    if "célineBoost" in atkSkills:
        num_healthy_allies = len([ally for ally in atkAllyWithin3Spaces if ally.HPCur / ally.get_visible_stat(HP) >= 0.50])
        atkr.DR_all_hits_NSP.append(min(15 * num_healthy_allies, 45))

        if atkAllyWithin3Spaces:
            atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
            atkr.true_all_hits += min(5 * num_healthy_allies, 15)
            atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "célineBoost" in defSkills:
        num_healthy_allies = len([ally for ally in defAllyWithin3Spaces if ally.HPCur / ally.get_visible_stat(HP) >= 0.50])
        defr.DR_all_hits_NSP.append(min(15 * num_healthy_allies, 45))

        if defAllyWithin3Spaces:
            defCombatBuffs = [x + 5 for x in defCombatBuffs]
            defr.true_all_hits += min(5 * num_healthy_allies, 15)
            defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Scroll of Teas - NI!Céline
    if "niCelineBoost" in atkSkills:
        num_healthy_allies = len([ally for ally in atkAllAllies if ally.HPCur / ally.get_visible_stat(HP) >= 0.50])
        atkCombatBuffs = [x + 5 + trunc(atkStats[SPD] * 0.15) for x in atkCombatBuffs]

        atkr.true_all_hits += min(6 * num_healthy_allies, 18)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 10, "self", "one"))

    if "niCelineBoost" in defSkills and defAllyWithin3Spaces:
        num_healthy_allies = len([ally for ally in defAllAllies if ally.HPCur / ally.get_visible_stat(HP) >= 0.50])
        defCombatBuffs = [x + 5 + trunc(defStats[SPD] * 0.15) for x in defCombatBuffs]

        defr.true_all_hits += min(6 * num_healthy_allies, 18)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 10, "self", "one"))

    # Dreaming Spear (Base) - Chloé
    if "mmm salamander" in atkSkills:
        condition = False

        n = len(atkAllAllies)
        for i in range(n):
            for j in range(i + 1, n):
                if atkAllAllies[i].isSupportOf(atkAllAllies[j]) and not disableSupportEffects:
                    condition = True
                    break

        if condition:
            atkr.follow_ups_skill += 1
            defr.spLossOnAtk -= 1
            defr.spLossWhenAtkd -= 1
            atkr.true_stat_damages.append((RES, 20))
            atkr.TDR_stats.append((RES, 20))

    if "mmm salamander" in defSkills:
        condition = False

        n = len(defAllAllies)
        for i in range(n):
            for j in range(i + 1, n):
                if defAllAllies[i].isSupportOf(defAllAllies[j]) and not disableSupportEffects:
                    condition = True
                    break

        if condition:
            defr.follow_ups_skill += 1
            atkr.spLossOnAtk -= 1
            atkr.spLossWhenAtkd -= 1
            defr.true_stat_damages.append((RES, 20))
            defr.TDR_stats.append((RES, 20))

    # Hippity-Hop Axe - SP!Framme
    if "It's a shuffling in the seat." in atkSkills and atkAllyWithin3Spaces:
        Y = min(len(atkAllyWithin3Spaces) * 3 + 5, 14)

        for ally in atkAllyWithin3Spaces:
            if ally.getWeaponType() in DRAGON_WEAPONS:
                Y = 14

        atkCombatBuffs = [x + Y for x in atkCombatBuffs]
        atkr.defensive_tempo = True
        atkr.offensive_tempo = True
        atkr.DR_first_strikes_NSP.append(min(atkHPCur, 60))

    if "It's a shuffling in the seat." in defSkills and defAllyWithin3Spaces:
        Y = min(len(defAllyWithin3Spaces) * 3 + 5, 14)

        for ally in defAllyWithin3Spaces:
            if ally.getWeaponType() in DRAGON_WEAPONS:
                Y = 14

        defCombatBuffs = [x + Y for x in atkCombatBuffs]
        defr.defensive_tempo = True
        defr.offensive_tempo = True
        defr.DR_first_strikes_NSP.append(min(defHPCur, 60))

    if "frammeChainGuard_f" in atkSkills:
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 1, "foe_frammes", "within_2_spaces_foe"))

    if "frammeChainGuard_f" in defSkills:
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 1, "foe_frammes", "within_2_spaces_foe"))

    # Monarch Blade (Base) - Lumera
    if "LOVE PROVIIIIDES, PROTECTS US" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1
        atkr.true_stat_damages.append((SPD, 15))
        atkr.stat_scaling_DR.append((SPD, 40))

    if "LOVE PROVIIIIDES, PROTECTS US" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1
        defr.true_stat_damages.append((SPD, 15))
        defr.stat_scaling_DR.append((SPD, 40))

    # Monarch's Stone - MY!Lumera
    if "myLumeraBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(max(5, trunc(defStats[ATK]) - 4), 14) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))
        atkr.DR_first_strikes_NSP.append(40)
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "myLumeraBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(max(5, trunc(atkStats[ATK]) - 4), 14) for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))
        defr.DR_first_strikes_NSP.append(40)
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Dragon Monarch - MY!Lumera
    if "dragonMonarch" in atkSkills:
        ally_count = 0

        tiles_within_5_row = atkr.tile.tilesWithinNRows(5)
        tiles_within_5_col = atkr.tile.tilesWithinNCols(5)
        tiles_within_5_row_and_column = list(set(tiles_within_5_row) & set(tiles_within_5_col))

        for tile in tiles_within_5_row_and_column:
            if tile.hero_on and tile.hero_on.isAllyOf(attacker):
                ally_count += 1

        if ally_count > 0:
            atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
            atkr.DR_all_hits_NSP.append(30)
            atkr.offensive_tempo = True

    if "dragonMonarch" in defSkills:
        ally_count = 0

        tiles_within_5_row = defr.tile.tilesWithinNRows(5)
        tiles_within_5_col = defr.tile.tilesWithinNCols(5)
        tiles_within_5_row_and_column = list(set(tiles_within_5_row) & set(tiles_within_5_col))

        for tile in tiles_within_5_row_and_column:
            if tile.hero_on and tile.hero_on.isAllyOf(defender):
                ally_count += 1

        if ally_count > 0:
            defCombatBuffs = [x + 4 for x in defCombatBuffs]
            defr.DR_all_hits_NSP.append(30)
            defr.offensive_tempo = True

    # Arcane Fellstone
    if "arcaneFellstone" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + max(5, min(trunc(0.25 * defStats[ATK]) - 4, 14)) for x in atkCombatBuffs]
        atkr.DR_first_strikes_NSP.append(40)
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkr.speed_NFU = True

    if "arcaneFellstone" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + max(5, min(trunc(0.25 * atkStats[ATK]) - 4, 14)) for x in defCombatBuffs]
        defr.DR_first_strikes_NSP.append(40)
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defr.speed_NFU = True

    # Corrupted Dragon - FA!Lumera
    if "corruptedDragon" in atkSkills:
        ally_count = 0

        tiles_within_5_row = atkr.tile.tilesWithinNRows(5)
        tiles_within_5_col = atkr.tile.tilesWithinNCols(5)
        tiles_within_5_row_and_column = list(set(tiles_within_5_row) & set(tiles_within_5_col))

        for tile in tiles_within_5_row_and_column:
            if tile.hero_on and tile.hero_on.isAllyOf(attacker):
                ally_count += 1

        if ally_count > 0:
            atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
            atkr.offensive_tempo = True
            atkr.sp_pierce_DR = True

    if "corruptedDragon" in defSkills:
        ally_count = 0

        tiles_within_5_row = defr.tile.tilesWithinNRows(5)
        tiles_within_5_col = defr.tile.tilesWithinNCols(5)
        tiles_within_5_row_and_column = list(set(tiles_within_5_row) & set(tiles_within_5_col))

        for tile in tiles_within_5_row_and_column:
            if tile.hero_on and tile.hero_on.isAllyOf(defender):
                ally_count += 1

        if ally_count > 0:
            defCombatBuffs = [x + 4 for x in defCombatBuffs]
            defr.offensive_tempo = True
            defr.sp_pierce_DR = True

    # Sky-Hopper Egg - SP!Chloé
    if "sky-hopper" in atkSkills and atkHPGreaterEqual25Percent:
        charge_count = 0

        for ally in atkAllAllies:
            if Status.Charge in ally.statusPos:
                charge_count += 1

        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkCombatBuffs[ATK] += min(charge_count * 4, 8)
        atkCombatBuffs[SPD] += min(charge_count * 4, 8)
        atkr.damage_reduction_reduction.append(50)

    if "sky-hopper" in defSkills and defHPGreaterEqual25Percent:

        for ally in defAllAllies:
            if Status.Charge in ally.statusPos:
                charge_count += 1

        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defCombatBuffs[ATK] += min(charge_count * 4, 8)
        defCombatBuffs[SPD] += min(charge_count * 4, 8)
        defr.damage_reduction_reduction.append(50)

    # Fair-Fight Blade - Diamant
    if "FOR THE PRIDE OF BRODIA" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((DEF, 25))
        atkr.TDR_stats.append((DEF, 25))

        atkr.always_pierce_DR = True
        defr.always_pierce_DR = True
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        atkr.outspeed_factor += 20
        defr.outspeed_factor += 20

        atkr.sp_jump_first += 1

    if "FOR THE PRIDE OF BRODIA" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages.append((DEF, 25))
        defr.TDR_stats.append((DEF, 25))

        atkr.always_pierce_DR = True
        defr.always_pierce_DR = True
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        atkr.outspeed_factor += 20
        defr.outspeed_factor += 20

        defr.offensive_tempo = True
        defr.surge_heal += 10

    # Bold Kusarigama - NI!Diamant
    if "niDiamant" in atkSkills:
        atkCombatBuffs = [x + 5 + trunc(0.15 * atkStats[DEF]) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((DEF, 25))
        atkr.TDR_stats.append((DEF, 25))

        atkr.always_pierce_DR = True
        defr.always_pierce_DR = True
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        atkr.outspeed_factor += 20
        defr.outspeed_factor += 20

        atkr.sp_jump_first += 1

    if "niDiamant" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 + trunc(0.15 * defStats[DEF]) for x in defCombatBuffs]
        defr.true_stat_damages.append((DEF, 25))
        defr.TDR_stats.append((DEF, 25))

        atkr.always_pierce_DR = True
        defr.always_pierce_DR = True
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        atkr.outspeed_factor += 20
        defr.outspeed_factor += 20

    # Arcane Darkbow
    if "darkbow" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkPenaltiesNeutralized = [True] * 5
        atkr.offensive_NFU = True
        cannotCounter = True

    if "darkbow" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defPenaltiesNeutralized = [True] * 5
        defr.offensive_NFU = True

    # Get Behind Me! - Alcryst
    if "getBehindMe!" in atkSkills:
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5 + trunc(0.30 * defStats[DEF])
        atkr.offensive_tempo = True

    if "getBehindMe!" in defSkills and defAllyWithin2Spaces:
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5 + trunc(0.30 * atkStats[DEF])
        defr.offensive_tempo = True

    # Tome of Luxuries - Citrinne
    if "citrinneBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((RES, 15))

    if "citrinneBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages.append((RES, 15))

    # Wildflower Edge - BR!Lapis
    if "wildflowerEdge" in atkSkills:
        atkCombatBuffs = [x + 5 + trunc(0.15 * atkStats[SPD]) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))

        if attacker.unitCombatInitiates == 0:
            atkr.DR_first_strikes_NSP.append(80)
        else:
            atkr.DR_first_strikes_NSP.append(40)

        atkPostCombatEffs[GIVEN_UNIT_SURVIVED].append(("damage", 10, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[GIVEN_UNIT_SURVIVED].append(("status", Status.ShareSpoils, "foe", "one"))

    if "wildflowerEdge" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 + trunc(0.15 * defStats[SPD]) for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))

        if defender.unitCombatInitiates == 0:
            defr.DR_first_strikes_NSP.append(80)
        else:
            defr.DR_first_strikes_NSP.append(40)

    if Status.ShareSpoils in attacker.statusNeg:
        atkCombatBuffs = [x - 5 for x in atkCombatBuffs]
        defr.always_pierce_DR = True

    if Status.ShareSpoils in defender.statusNeg:
        defCombatBuffs = [x - 5 for x in defCombatBuffs]
        atkr.always_pierce_DR = True

    # Haulin' Harpoon - SU!Lapis
    if "suLapisBoost" in atkSkills:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.sp_jump_first += 1

        X = len(atkFoeWithin3RowsCols)
        atkr.true_all_hits += min(X * 8, 32)
        atkr.TDR_stats.append((SPD, 20))
        atkr.TDR_special_stats.append((SPD, 20))

        atkPostCombatEffs[GIVEN_UNIT_SURVIVED].append(("damage", 10, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[GIVEN_UNIT_SURVIVED].append(("status", Status.ShareSpoilsPlus, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "suLapisBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + min(len(defAllyWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defr.sp_jump_first += 1

        X = len(defFoeWithin3RowsCols)
        defr.true_all_hits += min(X * 8, 32)
        defr.TDR_stats.append((SPD, 20))
        defr.TDR_special_stats.append((SPD, 20))

    if Status.ShareSpoilsPlus in attacker.statusNeg:
        atkCombatBuffs = [x - 5 for x in atkCombatBuffs]
        defr.always_pierce_DR = True

    if Status.ShareSpoilsPlus in defender.statusNeg:
        defCombatBuffs = [x - 5 for x in defCombatBuffs]
        atkr.always_pierce_DR = True

    # Hidden Blade - Yunaka
    if "hiyaPapaya" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6 + trunc(0.20 * atkStats[SPD])
        atkCombatBuffs[SPD] += 6 + trunc(0.20 * atkStats[SPD])
        atkr.true_stat_damages.append((SPD, 20))
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkr.sp_jump_first += 1
        atkr.sp_jump_followup += 1

    if "hiyaPapaya" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6 + trunc(0.20 * defStats[SPD])
        defCombatBuffs[SPD] += 6 + trunc(0.20 * defStats[SPD])
        defr.true_stat_damages.append((SPD, 20))
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defr.sp_jump_first += 1
        defr.sp_jump_followup += 1

    # Trained to Kill - Yunaka
    if "trainedToKill" in atkSkills:
        atkCombatBuffs[ATK] += 10
        atkCombatBuffs[SPD] += 10
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.damage_reduction_reduction.append(50)

    if "trainedToKill" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 10
        defCombatBuffs[SPD] += 10
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.damage_reduction_reduction.append(50)

    # Silent Yule Knife - WI!Yunaka
    if "wiYunakaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkCombatBuffs[ATK] += max(9 - (2 * len(atkAdjacentToAlly)), 0)
        atkCombatBuffs[SPD] += max(9 - (2 * len(atkAdjacentToAlly)), 0)
        atkr.offensive_NFU = True
        atkr.offensive_tempo = True

        tile_cond = False
        for tile in atkr.tile.tilesWithinNSpaces(2):
            if (tile.terrain == 1 or tile.terrain == 3) or (tile.divine_vein_turn > 0):
                tile_cond = True
                break

        X = 3 if tile_cond else min(spaces_moved_by_atkr, 3)
        atkr.damage_reduction_reduction.append(X * 30)
        atkr.DR_first_strikes_NSP.append(X * 30)

    if "wiYunakaBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defCombatBuffs[ATK] += max(9 - (2 * len(defAdjacentToAlly)), 0)
        defCombatBuffs[SPD] += max(9 - (2 * len(defAdjacentToAlly)), 0)
        defr.offensive_NFU = True
        defr.offensive_tempo = True

        tile_cond = False
        for tile in defr.tile.tilesWithinNSpaces(2):
            if (tile.terrain == 1 or tile.terrain == 3) or (tile.divine_vein_turn > 0):
                tile_cond = True
                break

        X = 3 if tile_cond else min(spaces_moved_by_atkr, 3)
        defr.damage_reduction_reduction.append(X * 30)
        defr.DR_first_strikes_NSP.append(X * 30)

    # Payday Pouch - H!E!Anna
    if "hAnnaBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkCombatBuffs[ATK] += max(0, min(trunc(0.25 * defStats[ATK]) - 8, 10))
        atkCombatBuffs[SPD] += max(0, min(trunc(0.25 * defStats[ATK]) - 8, 10))

        if len(attacker.statusPos) >= 3:
            atkr.damage_reduction_reduction.append(50)

    if "hAnnaBoost" in defSkills:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defCombatBuffs[ATK] += max(0, min(trunc(0.25 * atkStats[ATK]) - 8, 10))
        defCombatBuffs[SPD] += max(0, min(trunc(0.25 * atkStats[ATK]) - 8, 10))

        if len(defender.statusPos) >= 3:
            defr.damage_reduction_reduction.append(50)

    # Desert Spear - Timerra
    if "timerraBoost" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 5 + trunc(0.15 * atkStats[DEF]) for x in atkCombatBuffs]
        defBonusesNeutralized = [True] * 5
        atkr.TDR_on_foe_sp += 10

    if "timerraBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 5 + trunc(0.15 * defStats[DEF]) for x in defCombatBuffs]
        atkBonusesNeutralized = [True] * 5
        defr.TDR_on_foe_sp += 10

    if "timerraBoost_f" in atkSkills: atkr.TDR_on_foe_sp += atkSkills["timerraBoost_f"]
    if "timerraBoost_f" in defSkills: atkr.TDR_on_foe_sp += defSkills["timerraBoost_f"]

    # Sandstorm - Timerra
    if "sandstorm" in atkSkills:
        atkr.DR_king_making_SP = True
        atkr.alternative_sp_stat = 1

    if "sandstorm" in defSkills:
        defr.DR_king_making_SP = True
        defr.alternative_sp_stat = 1

    # Inspirited Spear - H!Timerra
    if "meat" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        X = trunc(0.15 * atkStats[DEF])

        defCombatBuffs[ATK] -= X
        defCombatBuffs[SPD] -= X
        defCombatBuffs[DEF] -= X
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "meat" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        X = trunc(0.15 * defStats[DEF])

        atkCombatBuffs[ATK] -= X
        atkCombatBuffs[SPD] -= X
        atkCombatBuffs[DEF] -= X
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Suave Blade - Merrin
    if "suavamente" in atkSkills:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.TDR_first_strikes += min(len(attacker.statusPos) * 3, 15)

    if "suavamente" in defSkills:
        defCombatBuffs = [x + min(len(defAllyWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.TDR_first_strikes += min(len(defender.statusPos) * 3, 15)

    # Berserker Axe - Panette
    if "hmm today I will crash the game" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + max(5, min(trunc(0.25 * defStats[ATK]) - 4, 14)) for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkr.true_damage_taken_30 = True
        atkr.true_stat_damages.append((ATK, 15))

    if "hmm today I will crash the game" in defSkills:
        defCombatBuffs = [x + max(5, min(trunc(0.25 * atkStats[ATK]) - 4, 14)) for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defr.true_damage_taken_30 = True
        defr.true_stat_damages.append((ATK, 15))

    # Sentinel Bow - Fogado
    if "fogadoBoost" in atkSkills:
        defr.special_disabled = True
        atkCombatBuffs = [x + 5 + trunc(0.15 * atkStats[SPD]) for x in atkCombatBuffs]
        atkr.damage_reduction_reduction.append(50)
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.DR_first_strikes_NSP.append(70)
        atkr.retaliatory_reduced += 1

    if "fogadoBoost" in defSkills and attacker.wpnType in RANGED_WEAPONS:
        atkr.special_disabled = True
        defCombatBuffs = [x + 5 + trunc(0.15 * atkStats[SPD]) for x in defCombatBuffs]
        defr.damage_reduction_reduction.append(50)
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.DR_first_strikes_NSP.append(70)
        defr.retaliatory_reduced += 1

    # Obscurité - Veyle
    if "veyleBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkr.true_stat_damages.append((RES, 20))
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[RES] = True

    if "veyleBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defr.true_stat_damages.append((RES, 20))
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[RES] = True

    # Fell Protection - Veyle
    if "fellProtection" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[RES] += 5
        atkr.DR_all_hits_NSP.append(30)

    if "fellProtection" in defSkills:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[RES] += 5
        defr.DR_all_hits_NSP.append(30)

    if "fellProtection_f" in atkSkills and defSpTriggeredByAttack:
        atkr.sp_jump_first -= atkSkills["fellProtection_f"]

    if "fellProtection_f" in defSkills and atkSpTriggeredByAttack:
        defr.sp_jump_first -= defSkills["fellProtection_f"]

    # Fell Child's Might - FA!Veyle
    if "if you don't have a cinnamon roll, you're of no use to me" in atkSkills:
        defCombatBuffs[ATK] -= 6 + trunc(0.20 * atkStats[RES])
        defCombatBuffs[RES] -= 6 + trunc(0.20 * atkStats[RES])
        atkr.DR_all_hits_NSP.append(30)
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "if you don't have a cinnamon roll, you're of no use to me" in defSkills and defender.wpnType in RANGED_WEAPONS:
        atkCombatBuffs[ATK] -= 6 + trunc(0.20 * defStats[RES])
        atkCombatBuffs[RES] -= 6 + trunc(0.20 * defStats[RES])
        defr.DR_all_hits_NSP.append(30)
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Fell Successor - FA!Veyle
    if "fellSuccessor" in atkSkills:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[RES] -= 5

    if "fellSuccessor" in defSkills:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[RES] -= 5

    if "fellSuccessor_f" in atkSkills and defSpTriggeredByAttack:
        atkr.sp_jump_first -= atkSkills["fellSuccessor_f"]

        if defender.wpnType in RANGED_WEAPONS:
            atkr.sp_jump_followup -= atkSkills["fellSuccessor_f"]

    if "fellSuccessor_f" in defSkills and atkSpTriggeredByAttack:
        defr.sp_jump_first -= defSkills["fellSuccessor_f"]

        if attacker.wpnType in RANGED_WEAPONS:
            defr.sp_jump_followup -= defSkills["fellSuccessor_f"]

    # Gentle Fell Egg - SP!Veyle
    if "spVeyleBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6 + trunc(0.20 * atkStats[RES])
        atkCombatBuffs[SPD] += 6 + trunc(0.20 * atkStats[RES])
        atkr.true_stat_damages.append((RES, 20))
        atkr.follow_ups_skill += 1

    if "spVeyleBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6 + trunc(0.20 * defStats[RES])
        defCombatBuffs[SPD] += 6 + trunc(0.20 * defStats[RES])
        defr.true_stat_damages.append((RES, 20))
        defr.follow_ups_skill += 1

    # Fell Majesty - SP!Veyle
    if "fellMajesty" in atkSkills:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[RES] -= 5
        atkr.TDR_first_strikes += 7
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "fellMajesty" in defSkills and defAllyWithin2Spaces:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[RES] -= 5
        defr.TDR_first_strikes += 7
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    if "fellMajestyFirstDR_f" in atkSkills: atkr.TDR_first_strikes += atkSkills["fellMajestyFirstDR_f"]
    if "fellMajestyFirstDR_f" in defSkills: defr.TDR_first_strikes += defSkills["fellMajestyFirstDR_f"]

    # Penitent Lance - Mauvier
    if "mauvierBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkr.follow_ups_skill += 1
        defCombatBuffs[ATK] -= min(len(attacker.statusPos) * 2 + 6, 12)
        defCombatBuffs[DEF] -= min(len(attacker.statusPos) * 2 + 6, 12)

        if len(attacker.statusPos) >= 3:
            atkr.DR_first_strikes_NSP.append(80)
        else:
            atkr.DR_first_strikes_NSP.append(40)

    if "mauvierBoost" in defSkills and defHPGreaterEqual25Percent:
        defr.follow_ups_skill += 1
        atkCombatBuffs[ATK] -= min(len(defender.statusPos) * 2 + 6, 12)
        atkCombatBuffs[DEF] -= min(len(defender.statusPos) * 2 + 6, 12)

        if len(defender.statusPos) >= 3:
            defr.DR_first_strikes_NSP.append(80)
        else:
            defr.DR_first_strikes_NSP.append(40)

    # Praise-Piner Axe - Marni
    if "marniBoost" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 5 + trunc(0.15 * atkStats[DEF])
        defCombatBuffs[DEF] -= 5 + trunc(0.15 * atkStats[DEF])
        defCombatBuffs[RES] -= 5 + trunc(0.15 * atkStats[DEF])
        atkr.TDR_stats.append((DEF, 15))
        atkr.pseudo_miracle = True
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "marniBoost" in defSkills:
        atkCombatBuffs[ATK] -= 5 + trunc(0.15 * defStats[DEF])
        atkCombatBuffs[DEF] -= 5 + trunc(0.15 * defStats[DEF])
        atkCombatBuffs[RES] -= 5 + trunc(0.15 * defStats[DEF])
        defr.TDR_stats.append((DEF, 15))
        defr.pseudo_miracle = True
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Arcane Fell Arts
    if "arcaneFellArts" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + max(5, min(trunc(0.25 * defStats[ATK]) - 4, 14)) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((ATK, 15))
        atkr.TDR_stats.append((ATK, 15))
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkr.sp_jump_first += 1

    if "arcaneFellArts" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + max(5, min(trunc(0.25 * atkStats[ATK]) - 4, 14)) for x in defCombatBuffs]
        defr.true_stat_damages.append((ATK, 15))
        defr.TDR_stats.append((ATK, 15))
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defr.sp_jump_first += 1

    # Protective - Nel
    if "protective" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 9 for x in atkCombatBuffs]
        atkr.damage_reduction_reduction.append(50)

        if any([ally for ally in atkAllAllies if (ally.HPcur / ally.get_visible_stat(HP) <= 0.99 and (ally.isSupportOf(attacker) and not disableSupportEffects or ally in atkAllyWithin2Spaces))]):
            atkr.true_sp += 15

    if "protective" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 9 for x in defCombatBuffs]
        defr.damage_reduction_reduction.append(50)

        if any([ally for ally in defAllAllies if (ally.HPcur / ally.get_visible_stat(HP) <= 0.99 and (ally.isSupportOf(defender) and not disableSupportEffects or ally in defAllyWithin2Spaces))]):
            defr.true_sp += 15

    # Fell Slaystone - Rafal
    if "rafalBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((DEF, 20))
        atkr.TDR_stats.append((DEF, 20))
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1
        atkr.sp_jump_first += 1

    if "rafalBoost" in defSkills:
        X = 14 if savior_triggered else min(len(defAllyWithin3RowsCols) * 3 + 5, 14)
        defCombatBuffs = [x + X for x in defCombatBuffs]

        defr.true_stat_damages.append((DEF, 20))
        defr.TDR_stats.append((DEF, 20))
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1
        defr.sp_jump_first += 1

    if "nullBonuses" in atkSkills: defBonusesNeutralized = [True] * 5
    if "nullBonuses" in defSkills: atkBonusesNeutralized = [True] * 5

    if Status.NullBonuses in attacker.statusPos: defBonusesNeutralized = [True] * 5
    if Status.NullBonuses in defender.statusPos: atkBonusesNeutralized = [True] * 5

    if "nullPenalties" in atkSkills: atkPenaltiesNeutralized = [True] * 5
    if "nullPenalties" in defSkills: defPenaltiesNeutralized = [True] * 5

    if Status.NullPenalties in attacker.statusPos: atkPenaltiesNeutralized = [True] * 5
    if Status.NullPenalties in defender.statusPos: defPenaltiesNeutralized = [True] * 5

    if "nullCavBonuses" in atkSkills and defender.move == 1: defBonusesNeutralized = [True] * 5
    if "nullCavBonuses" in defSkills and attacker.move == 1: atkBonusesNeutralized = [True] * 5

    if "nullFlyBonuses" in atkSkills and defender.move == 2: defBonusesNeutralized = [True] * 5
    if "nullFlyBonuses" in defSkills and attacker.move == 2: atkBonusesNeutralized = [True] * 5

    if "nullMagicBonuses" in atkSkills and defender.wpnType in MAGICAL_WEAPONS: defBonusesNeutralized = [True] * 5
    if "nullMagicBonuses" in defSkills and attacker.wpnType in MAGICAL_WEAPONS: atkBonusesNeutralized = [True] * 5

    if "nullRangedBonuses" in atkSkills and defender.wpnType in RANGED_WEAPONS: defBonusesNeutralized = [True] * 5
    if "nullRangedBonuses" in defSkills and attacker.wpnType in RANGED_WEAPONS: atkBonusesNeutralized = [True] * 5

    # HEROES

    # ASKR

    # Imbued Koma (Base) - NY!Alfonse
    if "nyAlfonseBoost" in atkSkills and atkSpCountCur == 0:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defr.follow_up_denials -= 1

    if "nyAlfonseBoost" in defSkills and defSpCountCur == 0:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkr.follow_up_denials -= 1

    # Imbued Koma (Refine Base) - NY!Alfonse
    if "nyAlfonseRefine" in atkSkills and atkSpCountCur == 0:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defr.follow_up_denials -= 1
        atkr.TDR_stats.append((DEF, 20))

    if "nyAlfonseRefine" in defSkills and defSpCountCur == 0:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkr.follow_up_denials -= 1
        defr.TDR_stats.append((DEF, 20))

    # Imbued Koma (Refine Eff) - NY!Alfonse
    if "newAlfonseGuy" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1
        atkr.deep_wounds_allowance.append(50)

    if "newAlfonseGuy" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1
        defr.deep_wounds_allowance.append(50)

    # Majestic Glitnir - B!Alfonse
    if "bAlfonseBoost" in atkSkills:
        X = min(len(atkAllyWithin3RowsCols) * 3 + 5, 14)

        atkCombatBuffs[DEF] += 6 + X
        atkCombatBuffs[RES] += 6 + X

        defCombatBuffs[DEF] += 6 + X
        defCombatBuffs[RES] += 6 + X

        atkr.true_stat_damages.append((DEF, 10))
        atkr.TDR_stats.append((DEF, 10))
        atkr.sp_pierce_DR = True

    if "bAlfonseBoost" in defSkills and defAllyWithin3RowsCols:
        X = min(len(defAllyWithin3RowsCols) * 3 + 5, 14)

        defCombatBuffs[DEF] += 6 + X
        defCombatBuffs[RES] += 6 + X

        atkCombatBuffs[DEF] += 6 + X
        atkCombatBuffs[RES] += 6 + X

        defr.true_stat_damages.append((DEF, 10))
        defr.TDR_stats.append((DEF, 10))
        defr.sp_pierce_DR = True

    # Makings of a King - B!Alfonse
    if "makingsOfAKing" in atkSkills: atkr.DR_king_making_SP = True
    if "makingsOfAKing" in defSkills: defr.DR_king_making_SP = True

    if "sharenaDualChill" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4
        atkCombatBuffs[RES] += 4

    if "sharenaDualChill" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[SPD] += 4
        defCombatBuffs[RES] += 4

    if "sharenaHealing" in atkSkills:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4
        atkCombatBuffs[RES] += 4

    if "sharenaHealing" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[SPD] += 4
        defCombatBuffs[RES] += 4

    # United Bouquet - BR!Sharena
    if "bridal_shenanigans" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.true_stat_damages.append((SPD, 20))
        atkr.all_hits_heal += min(spaces_moved_by_atkr * 3, 12)

    if "bridal_shenanigans" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(len(defAllyWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.true_stat_damages.append((SPD, 20))
        defr.all_hits_heal += min(spaces_moved_by_atkr * 3, 12)

    if "and they were roommates" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.DR_all_hits_NSP.append(40)
        atkr.offensive_tempo = True
        atkr.defensive_tempo = True

    if "and they were roommates" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.DR_all_hits_NSP.append(40)
        defr.offensive_tempo = True
        defr.defensive_tempo = True

    # Loyalist Axe (Base) - V!Gustav
    if "gustavBoost" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[DEF] -= 6

    if "gustavBoost" in defSkills:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[DEF] -= 6

    # Headsman Glitnir (Base) - FA!Gustav
    if "I am Gustav. My flesh has been reconstructed by the dread power of Hel." in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "I am Gustav. My flesh has been reconstructed by the dread power of Hel." in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1
        defr.follow_ups_skill += 1

    # Horn of Opening (Base) - Ash
    if "ashBoost" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 6
        defCombatBuffs[ATK] -= 6

        if len(atkAllyWithin3Spaces) >= 2:
            atkr.follow_ups_skill += 1
        if len(atkAllyWithin3Spaces) >= 3:
            defr.follow_up_denials -= 1

    if "ashBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 6
        atkCombatBuffs[ATK] -= 6

        if len(defAllyWithin3Spaces) >= 2:
            defr.follow_ups_skill += 1
        if len(defAllyWithin3Spaces) >= 3:
            atkr.follow_up_denials -= 1

    # Horn of Opening (Base) - Ash
    if "ashRefine" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 5
        defCombatBuffs[ATK] -= 6
        atkr.follow_ups_skill += 1
        defr.follow_up_denials -= 1
        atkr.TDR_stats.append((DEF, min(10 * len(atkAllyWithin3Spaces), 30)))

    if "ashRefine" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 5
        atkCombatBuffs[ATK] -= 6
        defr.follow_ups_skill += 1
        atkr.follow_up_denials -= 1
        defr.TDR_stats.append((DEF, min(10 * len(atkAllyWithin3Spaces), 30)))

    # Horn of Opening (Refine Eff) - Ash
    if "moo" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + min(len(atkAllyWithin3Spaces) * 2 + 5, 11) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((DEF, 20))
        atkr.sp_jump_first += 1

    if "moo" in defSkills:
        defCombatBuffs = [x + min(len(defAllyWithin3Spaces) * 2 + 5, 11) for x in defCombatBuffs]
        defr.true_stat_damages.append((DEF, 20))
        defr.sp_jump_first += 1

    # Open Retainer+ - Ash
    if "openRetainerPlus" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defBonusesNeutralized = [True] * 5
        atkr.damage_reduction_reduction.append(50)
        atkr.all_hits_heal += 7

    if "openRetainerPlus" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkBonusesNeutralized = [True] * 5
        defr.damage_reduction_reduction.append(50)
        defr.all_hits_heal += 7

    # Heralding Horn (Base) - NY!Ash
    if "nyAshBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 6
        defCombatBuffs[ATK] -= 6

        if len(atkAllyWithin2Spaces) >= 2:
            atkr.DR_first_hit_NSP.append(40)
        if len(atkAllyWithin2Spaces) >= 3:
            defr.follow_up_denials -= 1

    if "nyAshBoost" in defSkills:
        defCombatBuffs[ATK] += 6
        atkCombatBuffs[ATK] -= 6

        if len(defAllyWithin2Spaces) >= 1:
            defr.brave = True
        if len(defAllyWithin2Spaces) >= 2:
            defr.DR_first_hit_NSP.append(40)
        if len(defAllyWithin2Spaces) >= 3:
            atkr.follow_up_denials -= 1

    # Wandering Horn - Melíai
    if "meliaiBoost" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 6 + trunc(0.20 * atkStats[DEF])
        defCombatBuffs[DEF] -= 6 + trunc(0.20 * atkStats[DEF])
        atkr.true_stat_damages.append((DEF, 20))
        atkr.TDR_stats.append((DEF, 20))

    if "meliaiBoost" in defSkills:
        atkCombatBuffs[ATK] -= 6 + trunc(0.20 * defStats[DEF])
        atkCombatBuffs[DEF] -= 6 + trunc(0.20 * defStats[DEF])
        defr.true_stat_damages.append((DEF, 20))
        defr.TDR_stats.append((DEF, 20))

    # Illuminating Horn (Base) - Askr
    if "askrBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkr.true_stat_damages.append((DEF, 20))
        atkr.TDR_stats.append((DEF, 20))

    if "askrBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defr.true_stat_damages.append((DEF, 20))
        defr.TDR_stats.append((DEF, 20))

    # Duality Vessel (Base) - NY!Askr
    if "nyAskrBoost" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1
        atkr.TDR_stats.append((DEF, 20))

    if "nyAskrBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1
        defr.TDR_stats.append((DEF, 20))

    # Horn of Harvest - H!Askr
    if "hAskrBoost" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= min(len(atkAllyWithin3RowsCols) * 3 + 6, 15)
        defCombatBuffs[DEF] -= min(len(atkAllyWithin3RowsCols) * 3 + 6, 15)
        atkr.deep_wounds_allowance.append(50)
        atkr.true_stat_damages.append((DEF, 20))
        atkr.TDR_stats.append((DEF, 20))

    if "hAskrBoost" in defSkills:
        atkCombatBuffs[ATK] -= min(len(defAllyWithin3RowsCols) * 3 + 6, 15)
        atkCombatBuffs[DEF] -= min(len(defAllyWithin3RowsCols) * 3 + 6, 15)
        defr.deep_wounds_allowance.append(50)
        defr.true_stat_damages.append((DEF, 20))
        defr.TDR_stats.append((DEF, 20))

    if "hAskrBoost_f" in atkSkills:
        for i in range(0, atkSkills["hAskrBoost_f"]):
            atkr.deep_wounds_allowance.append(50)

    if "hAskrBoost_f" in defSkills:
        for i in range(0, defSkills["hAskrBoost_f"]):
            defr.deep_wounds_allowance.append(50)

    # Connected World - H!Askr
    if "connectedWorld" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        atkCombatBuffs[RES] += 5
        atkr.DR_all_hits_NSP.append(40)

    if "connectedWorld" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        defCombatBuffs[RES] += 5
        defr.DR_all_hits_NSP.append(40)

    # EMBLA

    # Valaskjálf - Bruno
    if "brunoVantage" in defSkills and defHPCur / defStats[HP] <= 0.50:
        defr.vantage = True

    # Hliðskjálf (Base) - B!Veronica
    if "veronicaBuffs" in atkSkills:
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("buff_atk", 4, "self_and_allies", "within_2_spaces_self"))
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("buff_spd", 4, "self_and_allies", "within_2_spaces_self"))
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("buff_def", 4, "self_and_allies", "within_2_spaces_self"))
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("buff_res", 4, "self_and_allies", "within_2_spaces_self"))

        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("debuff_atk", 4, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("debuff_spd", 4, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("debuff_def", 4, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("debuff_res", 4, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "veronicaBuffs" in defSkills:
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("buff_atk", 4, "self_and_allies", "within_2_spaces_self"))
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("buff_spd", 4, "self_and_allies", "within_2_spaces_self"))
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("buff_def", 4, "self_and_allies", "within_2_spaces_self"))
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("buff_res", 4, "self_and_allies", "within_2_spaces_self"))

        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("debuff_atk", 4, "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("debuff_spd", 4, "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("debuff_def", 4, "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("debuff_res", 4, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Veðrfölnir's Egg (Base) - SP!Veronica
    if "spVeronicaBoost" in atkSkills and atkHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "spVeronicaBoost" in defSkills and defHPGreaterEqual75Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Veðrfölnir's Egg (Refine Base) - SP!Veronica
    if "spVeronicaAlly" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkCombatBuffs[ATK] += max([ally.get_bonus_total() for ally in atkAllyWithin2Spaces], default=0)

    if "spVeronicaAlly" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defCombatBuffs[ATK] += max([ally.get_bonus_total() for ally in defAllyWithin2Spaces], default=0)

    # Veðrfölnir's Egg (Refine Eff) - SP!Veronica
    if "spVeronicaOrders" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "spVeronicaOrders" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Gate-Anchor Axe (Base) - PI!Veronica
    if "piVeronicaBoost" in atkSkills and not atkAdjacentToAlly:
        atkCombatBuffs[DEF] += 5
        atkCombatBuffs[RES] += 5
        defCombatBuffs[DEF] -= 5
        defCombatBuffs[RES] -= 5
        atkr.follow_ups_skill += 1

    if "piVeronicaBoost" in defSkills and not defAdjacentToAlly:
        defCombatBuffs[DEF] += 5
        defCombatBuffs[RES] += 5
        atkCombatBuffs[DEF] -= 5
        atkCombatBuffs[RES] -= 5
        defr.follow_ups_skill += 1

    # Gate-Anchor Axe (Refine Base) - PI!Veronica
    if "piVeronicaCanto" in atkSkills:
        atkCombatBuffs[DEF] += 5
        atkCombatBuffs[RES] += 5
        defCombatBuffs[DEF] -= 5
        defCombatBuffs[RES] -= 5
        atkr.follow_ups_skill += 1
        atkr.sp_jump_first += min(spaces_moved_by_atkr, 3)

    if "piVeronicaCanto" in defSkills and len(defAdjacentToAlly) <= 1:
        defCombatBuffs[DEF] += 5
        defCombatBuffs[RES] += 5
        atkCombatBuffs[DEF] -= 5
        atkCombatBuffs[RES] -= 5
        defr.follow_ups_skill += 1
        defr.sp_jump_first += min(spaces_moved_by_atkr, 3)

    # Gate-Anchor Axe (Refine Eff) - PI!Veronica
    if "veronicaAnchor" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[DEF] += 5
        defCombatBuffs[RES] += 5
        atkCombatBuffs[DEF] -= 5
        atkCombatBuffs[RES] -= 5
        atkr.true_stat_damages.append((DEF, 20))
        atkr.sp_pierce_DR = True

    if "veronicaAnchor" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[DEF] += 5
        atkCombatBuffs[RES] += 5
        defCombatBuffs[DEF] -= 5
        defCombatBuffs[RES] -= 5
        defr.true_stat_damages.append((DEF, 20))
        defr.sp_pierce_DR = True

    # Enclosing Dark (Base) - L!Veronica
    if "LVeronicaBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.offensive_NFU = True

        if len(atkFoeWithin2Spaces) - 1 == 1:
            defCombatBuffs[SPD] -= 4
            defCombatBuffs[RES] -= 4
        if len(atkFoeWithin2Spaces) - 1 >= 2:
            defCombatBuffs[SPD] -= 8
            defCombatBuffs[RES] -= 8
            cannotCounter = True

        atkr.self_desperation = True

    if "LVeronicaBoost" in defSkills and not defAdjacentToAlly:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.offensive_NFU = True

        if len(defFoeWithin2Spaces) - 1 == 1:
            atkCombatBuffs[SPD] -= 4
            atkCombatBuffs[RES] -= 4
        if len(defFoeWithin2Spaces) - 1 >= 2:
            atkCombatBuffs[SPD] -= 8
            atkCombatBuffs[RES] -= 8
            cannotCounter = True

    # Jaws of Closure - Elm
    if "elmBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + trunc(0.15 * atkStats[SPD]) for x in atkCombatBuffs]

        X = min(1 + len(defAllyWithin3Spaces), 4)

        atkr.true_all_hits += 8 * X
        atkr.TDR_first_strikes += 6 * X

    if "elmBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + trunc(0.15 * defStats[SPD]) for x in defCombatBuffs]

        X = min(1 + len(atkAllyWithin3Spaces), 4)

        defr.true_all_hits += 8 * X
        defr.TDR_first_strikes += 6 * X

    # New Opening - Elm
    if "newOpening" in atkSkills and (attacker.transformed or defHPGreaterEqual75Percent):
        atkCombatBuffs = [x + 9 for x in atkCombatBuffs]
        atkr.offensive_tempo = True
        atkr.defensive_tempo = True

        X = min(spaces_moved_by_atkr * 3, 12)

        atkr.true_all_hits += X
        atkr.TDR_first_strikes += X
        atkr.TDR_on_foe_sp += X

        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "newOpening" in defSkills and (defender.transformed or atkHPGreaterEqual75Percent):
        defCombatBuffs = [x + 9 for x in defCombatBuffs]
        defr.offensive_tempo = True
        defr.defensive_tempo = True

        X = min(spaces_moved_by_atkr * 3, 12)

        defr.true_all_hits += X
        defr.TDR_first_strikes += X
        defr.TDR_on_foe_sp += X

        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Fang of Finality (Base) - NY!Elm
    if "nyElmBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.offensive_NFU = True
        atkr.true_stat_damages.append((SPD, min(10 + 10 * len(defAllyWithin3Spaces), 30)))
        atkr.DR_all_hits_NSP.append(min(20 + 20 * len(defAllyWithin3Spaces), 60))

    if "nyElmBoost" in defSkills and not defAdjacentToAlly:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.offensive_NFU = True
        defr.true_stat_damages.append((SPD, min(10 + 10 * len(atkAllyWithin3Spaces), 30)))
        defr.DR_all_hits_NSP.append(min(20 + 20 * len(atkAllyWithin3Spaces), 60))

    # Enclosing Claw (Base) - Embla
    if "emblaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defCombatBuffs[ATK] -= min(len(atkFoeWithin3RowsCols) * 3, 9)
        defCombatBuffs[SPD] -= min(len(atkFoeWithin3RowsCols) * 3, 9)
        defCombatBuffs[DEF] -= min(len(atkFoeWithin3RowsCols) * 3, 9)
        atkr.offensive_tempo = True

        if len(atkFoeWithin3RowsCols) >= 2:
            atkr.defensive_NFU = True
            defr.spLossOnAtk -= 1
            defr.spLossWhenAtkd -= 1

    if "emblaBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkCombatBuffs[ATK] -= min(len(defFoeWithin3RowsCols) * 3, 9)
        atkCombatBuffs[SPD] -= min(len(defFoeWithin3RowsCols) * 3, 9)
        atkCombatBuffs[DEF] -= min(len(defFoeWithin3RowsCols) * 3, 9)
        defr.offensive_tempo = True

        if len(defFoeWithin3RowsCols) >= 2:
            defr.defensive_NFU = True
            atkr.spLossOnAtk -= 1
            atkr.spLossWhenAtkd -= 1

    # Enclosing Claw (Refine Base) - Embla
    if "emblaRefine" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defCombatBuffs[ATK] -= min(len(atkFoeWithin3RowsCols) * 3, 9)
        defCombatBuffs[SPD] -= min(len(atkFoeWithin3RowsCols) * 3, 9)
        defCombatBuffs[DEF] -= min(len(atkFoeWithin3RowsCols) * 3, 9)
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.offensive_tempo = True
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "emblaRefine" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkCombatBuffs[ATK] -= min(len(defFoeWithin3RowsCols) * 3, 9)
        atkCombatBuffs[SPD] -= min(len(defFoeWithin3RowsCols) * 3, 9)
        atkCombatBuffs[DEF] -= min(len(defFoeWithin3RowsCols) * 3, 9)
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.offensive_tempo = True
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Enclosing Claw (Refine Eff) - Embla
    if "pzazz" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 2 for x in atkCombatBuffs]
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[SPD] = True
        defBonusesNeutralized[DEF] = True
        atkr.true_stat_damages.append((SPD, 20))
        atkr.TDR_first_strikes += 7

    if "pzazz" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 2 for x in defCombatBuffs]
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[SPD] = True
        atkBonusesNeutralized[DEF] = True
        defr.true_stat_damages.append((SPD, 20))
        defr.TDR_first_strikes += 7

    # Severance+ - Embla
    if "severancePlus" in atkSkills and (attacker.transformed or defHPGreaterEqual75Percent):
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.true_all_hits += 7
        atkr.sp_jump_first += 1

    if "severancePlus" in defSkills and (defender.transformed or atkHPGreaterEqual75Percent):
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.true_all_hits += 7
        defr.sp_jump_first += 1

    # Enclosing Florets - BR!Embla
    if "brEmblaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(5 + len(atkFoeWithin3RowsCols) * 3, 14) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))
        atkr.TDR_stats.append((SPD, 20))

    if "brEmblaBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(5 + len(defFoeWithin3RowsCols) * 3, 14) for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))
        defr.TDR_stats.append((SPD, 20))

    # Absolute Closure - BR!Embla
    if "absoluteClosure" in atkSkills and attacker.transformed:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "absoluteClosure" in defSkills and defender.transformed:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # NIFL

    # Leiptr (Refine Eff) - Fjorm
    if "reFjorm" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkBonusesNeutralized = [True] * 5

    if "reFjorm" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defBonusesNeutralized = [True] * 5
        defCombatBuffs[DEF] += 4
        defCombatBuffs[RES] += 4

    # Gjallarbrú (Refine Eff) - BR!Fjorm
    if "brFjormField" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4

    if "brFjormField" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[SPD] += 4

    # Nifl's Bite (Base) - A!Fjorm
    if "aFjormBoost" in atkSkills and atkAllyWithin2Spaces:
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "aFjormBoost" in defSkills and defAllyWithin2Spaces:
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

        if attacker.wpnType in RANGED_WEAPONS:
            disableCannotCounter = True

    # Ice-Bound Brand - SU!Fjorm
    if "owowow" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defCombatBuffs[ATK] -= trunc(0.20 * atkStats[SPD])
        defCombatBuffs[SPD] -= trunc(0.20 * atkStats[SPD])
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1
        atkr.TDR_on_def_sp += 5

    if "owowow" in defSkills:
        if attacker.wpnType in RANGED_WEAPONS:
            disableCannotCounter = True

        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkCombatBuffs[ATK] -= trunc(0.20 * defStats[SPD])
        atkCombatBuffs[SPD] -= trunc(0.20 * defStats[SPD])
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1
        defr.TDR_on_def_sp += 5

    # Frostbite Mirror
    if "frostbiteMirror" in atkSkills:
        if defender.wpnType in RANGED_WEAPONS:
            atkSkills.update({"omniShield": 30})
        else:
            atkSkills.update({"omniShield": 10})

    if "frostbiteMirror" in defSkills:
        if attacker.wpnType in RANGED_WEAPONS:
            defSkills.update({"omniShield": 30})
        else:
            defSkills.update({"omniShield": 10})

        if defSpCountCur == 0:
            ignore_range = True

    # Ice-Crystal Spear - FF!Fjorm
    if "iceFjormBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.TDR_stats.append((SPD, 20))
        atkPenaltiesNeutralized = [True] * 5
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.all_hits_heal += 7

    if "iceFjormBoost" in defSkills:
        defCombatBuffs = [x + min(len(defAllyWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defr.TDR_stats.append((SPD, 20))
        defPenaltiesNeutralized = [True] * 5
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.all_hits_heal += 7
        disableCannotCounter = True

    # Dual Ice Mirrors - FF!
    if "dualIceMirrors" in atkSkills: atkr.sp_pierce_after_def_sp = True
    if "dualIceMirrors" in defSkills: defr.sp_pierce_after_def_sp = True

    # Blizzard (Refine Eff) - Gunnthrá
    if "gunnBoost" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[SPD] -= 4
        defCombatBuffs[RES] -= 4

    if "gunnBoost" in defSkills and atkHPGreaterEqual75Percent:
        atkCombatBuffs[SPD] -= 4
        atkCombatBuffs[RES] -= 4

    # Hikami (Refine Base) - NY!Gunnthrá
    if "hikamiThreaten2" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 4
        defCombatBuffs[SPD] -= 4
        defCombatBuffs[DEF] -= 4

    if "hikamiThreaten2" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 4
        atkCombatBuffs[SPD] -= 4
        atkCombatBuffs[DEF] -= 4

    # Sylgr (Base) - Ylgr
    if "ylgrBoost" in atkSkills and atkStats[SPD] + atkPhantomStats[SPD] > defStats[SPD] + defPhantomStats[SPD]:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4

    if "ylgrBoost" in defSkills and defStats[SPD] + defPhantomStats[SPD] > atkStats[SPD] + atkPhantomStats[SPD]:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[SPD] += 4

    # Sylgr (Refine Base) - Ylgr
    if "ylgrMoreBoost" in atkSkills and (atkStats[SPD] + atkPhantomStats[SPD] > defStats[SPD] + defPhantomStats[SPD] or defHPGreaterEqual75Percent):
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.true_stat_damages.append((SPD, 15))

    if "ylgrMoreBoost" in defSkills and (defStats[SPD] + defPhantomStats[SPD] > atkStats[SPD] + atkPhantomStats[SPD] or atkHPGreaterEqual75Percent):
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.true_stat_damages.append((SPD, 15))

    # Sylgr (Refine Eff) - Ylgr
    if "oh and stats" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "oh and stats" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Frostbite Breath (Base) - Nifl
    if "niflBoost" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs = [x - 5 for x in defCombatBuffs]
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.Flash, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "niflBoost" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs = [x - 5 for x in atkCombatBuffs]
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.Flash, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Domain of Ice
    if "niflField" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[SPD] += 4
        atkCombatBuffs[RES] += 4
        atkr.DR_first_hit_NSP.append(30)

    if "niflField" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[SPD] += 4
        defCombatBuffs[RES] += 4
        defr.DR_first_hit_NSP.append(30)

    if "niflField_f" in atkSkills:
        for i in range(0, atkSkills["niflField_f"]):
            atkr.DR_first_hit_NSP.append(30)

    if "niflField_f" in defSkills:
        for i in range(0, defSkills["niflField_f"]):
            defr.DR_first_hit_NSP.append(30)

    # Chilled Breath (Base) - SU!Nifl
    if "suNiflBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "suNiflBoost" in defSkills:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # MÚSPELL

    # Laevatein (Refine Eff) - Laevatein
    if "laevPartner" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5

    if "laevPartner" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5

    if "niuBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True

    if "niuBoost" in defSkills and defHPGreaterEqual25Percent:
        defr.defensive_NFU = True
        defr.offensive_NFU = True
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Býleistr (Base Refine) - Helbindi
    if "helbindiWave" in atkSkills and (defHPGreaterEqual75Percent or turn % 2 == 1):
        atkCombatBuffs[ATK] += 5
        defCombatBuffs[ATK] -= 5

    if "helbindiWave" in defSkills and (atkHPGreaterEqual75Percent or turn % 2 == 1):
        defCombatBuffs[ATK] += 5
        atkCombatBuffs[ATK] -= 5

    if "helbindiBoost" in atkSkills:
        atkCombatBuffs[ATK] += 5
        defCombatBuffs[ATK] -= 5
        defr.follow_up_denials -= 1

    if "helbindiBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        atkCombatBuffs[ATK] -= 5
        atkr.follow_up_denials -= 1

    # Sea-Sear Lance (Base) - PI!Surtr
    if "Alolan Ganondorf" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[DEF] -= 6

    if "Alolan Ganondorf" in defSkills:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[DEF] -= 6

    # Flamelick Breath (Base) - Múspell
    if "muspellBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.disable_foe_healing = True
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.DeepWounds, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "muspellBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.disable_foe_healing = True
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.DeepWounds, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Domain of Flame - Múspell
    if "muspellField" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[DEF] += 4

    if "muspellField" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[DEF] += 4

    # Breath of Flame
    if "ffMuspellBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        defCombatBuffs[ATK] -= 6
        atkr.follow_ups_skill += 1
        atkr.damage_reduction_reduction.append(50)

    if "ffMuspellBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        atkCombatBuffs[ATK] -= 6
        defr.follow_ups_skill += 1
        defr.damage_reduction_reduction.append(50)

    # YMIR

    # Lyngheiðr (Base) - Eir
    if "eirBoost" in atkSkills and atkHPGreaterEqual50Percent:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4
        defr.follow_up_denials -= 1

        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 4, "self", "one"))

    if "eirBoost" in defSkills and defHPGreaterEqual50Percent:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[SPD] += 4

        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 4, "self", "one"))

    # Lyngheiðr (Refine Base) - Eir
    if "eirRefineBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

        defr.follow_up_denials -= 1
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "eirRefineBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Lyngheiðr (Refine Eff) - Eir
    if "eirRestore" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

        atkCombatBuffs[ATK] += trunc(0.20 * atkHPCur)
        atkCombatBuffs[RES] += trunc(0.20 * atkHPCur)

        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self_and_allies", "within_2_spaces_self"))

    if "eirRestore" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

        defCombatBuffs[ATK] += trunc(0.20 * defHPCur)
        defCombatBuffs[RES] += trunc(0.20 * defHPCur)

        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self_and_allies", "within_2_spaces_self"))

    # Sparkling Boost+ (Eir)
    if "eirField_f" in atkSkills and atkHPGreaterEqual50Percent:
        atkCombatBuffs[RES] += atkSkills["eirField_f"]
    if "eirField_f" in defSkills and defHPGreaterEqual50Percent:
        defCombatBuffs[RES] += defSkills["eirField_f"]

    # Ymir, Everliving (Base) - A!Eir
    if "ascEirBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.pseudo_miracle = True
        atkr.pseudo_miracle_hp_cond = min(0.25, atkr.pseudo_miracle_hp_cond)

        if len(atkAllyWithin2Spaces) >= 2:
            hp_list = []

            for ally in atkAllyWithin2Spaces:
                hp_list.append(ally.HPcur)

            # Unsure if the 3rd element should be used if the first two values are equal, check? (I don't have her)
            atkCombatBuffs[ATK] += min(trunc(0.40 * sorted(hp_list)[1]), 20)

    if "ascEirBoost" in defSkills and defender.wpnType in RANGED_WEAPONS:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.pseudo_miracle = True
        defr.pseudo_miracle_hp_cond = min(0.25, defr.pseudo_miracle_hp_cond)

        if len(defAllyWithin2Spaces) >= 2:
            hp_list = []

            for ally in defAllyWithin2Spaces:
                hp_list.append(ally.HPcur)

            defCombatBuffs[ATK] += min(trunc(0.40 * sorted(hp_list)[1]), 20)

    # Everliving Breath (Base) - Ymir
    if "ymirBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1

    if "ymirBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1

    # Everliving Domain - Ymir
    if "everlivingDomain_f" in atkSkills:
        atkr.pseudo_miracle = True
        atkr.pseudo_miracle_hp_cond = min(0.75, atkr.pseudo_miracle_hp_cond)

    if "everlivingDomain_f" in defSkills:
        defr.pseudo_miracle = True
        defr.pseudo_miracle_hp_cond = min(0.75, atkr.pseudo_miracle_hp_cond)

    # Sparkling Sun - SU!Ymir
    if "sparklingSun" in atkSkills and atkAllyWithin3Spaces:
        defCombatBuffs[ATK] -= min(6 + trunc(0.30 * atkHPCur), 18)
        defCombatBuffs[RES] -= min(6 + trunc(0.30 * atkHPCur), 18)
        atkr.follow_ups_skill += 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "sparklingSun" in defSkills and defAllyWithin3Spaces:
        atkCombatBuffs[ATK] -= min(6 + trunc(0.30 * defHPCur), 18)
        atkCombatBuffs[RES] -= min(6 + trunc(0.30 * defHPCur), 18)
        defr.follow_ups_skill += 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # HEL

    # Hel's Reaper (Refine Base) - Hel
    if "helBoost" in atkSkills and defHPGreaterEqual50Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "helBoost" in defSkills :
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Sökkvabekkr (Base) - Líf
    if "https://youtu.be/eVTXPUF4Oz4?si=RkBGT1Gf1bGBxOPK" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 20, "allies", "nearest_self"))

    if "https://youtu.be/eVTXPUF4Oz4?si=RkBGT1Gf1bGBxOPK" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 20, "allies", "nearest_self"))

    if "you're not me" in atkSkills and atkAllyWithin4Spaces:
        atkCombatBuffs = [x + 6 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkr.true_finish += 5
        atkr.finish_mid_combat_heal += 7

    # Sökkvabekkr (Refine Base) - Líf
    if "you're not me" in defSkills and defAllyWithin4Spaces:
        defCombatBuffs = [x + 6 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defr.true_finish += 5
        defr.finish_mid_combat_heal += 7

    # Sökkvabekkr (Refine Base) - Líf
    if "ow" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.DR_first_hit_NSP.append(30)

    if "ow" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.DR_first_hit_NSP.append(30)

    # Þjálfi (Base) - V!Líf
    if "VLifBoost" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 6 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkr.damage_reduction_reduction.append(50)
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 20, "allies", "nearest_self"))

    if "VLifBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 6 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defr.damage_reduction_reduction.append(50)
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 20, "allies", "nearest_self"))

    # Arcane Éljúðnir
    if "WRITHE" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[DEF] -= 6
        atkr.follow_ups_skill += 1
        defr.follow_up_denials -= 1
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "WRITHE" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[DEF] -= 6
        defr.follow_ups_skill += 1
        atkr.follow_up_denials -= 1
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Ífingr (Base) - Thrasir
    if "thrasirBoost" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.defensive_NFU = True
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("debuff_omni", 4, "allies", "nearest_self"))

    if "thrasirBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.defensive_NFU = True
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("debuff_omni", 4, "allies", "nearest_self"))

    # Ífingr (Refine Base) - Thrasir
    if "thrasirRefineBoost" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 6 for x in atkCombatBuffs]
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True
        atkPostCombatEffs[UNCONDITIONAL].append(("debuff_omni", 4, "allies", "nearest_self"))

    if "thrasirRefineBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 6 for x in defCombatBuffs]
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True
        defPostCombatEffs[UNCONDITIONAL].append(("debuff_omni", 4, "allies", "nearest_self"))

    # Ífingr (Refine Eff) - Thrasir
    if "You should really give her an alt, IS" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defBonusesNeutralized[SPD] = True
        defBonusesNeutralized[RES] = True

    if "You should really give her an alt, IS" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkBonusesNeutralized[SPD] = True
        atkBonusesNeutralized[RES] = True

    # Arcane Downfall
    if "downfall" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defr.follow_up_denials -= 1
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkr.all_hits_heal += 7

    if "downfall" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkr.follow_up_denials -= 1
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defr.all_hits_heal += 7

    # LJÓSÁLFHEIMR

    # Flower of Joy (Refine Base) - Peony
    if "peonyCrossSpur" in atkSkills and atkAllyWithin1RowsCols:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "peonyCrossSpur" in defSkills and defAllyWithin1RowsCols:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Flower of Joy (Refine Eff) - Peony
    if "peonyBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self_and_allies", "within_1_rows_cols_self"))

    if "peonyBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self_and_allies", "within_1_rows_cols_self"))

    # Flower of Caring - X!Peony
    if "jokerrrrrrrr" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.DR_first_hit_NSP.append(40)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 5, "self", "one"))

        if atkAllyWithin1RowsCols:
            atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "jokerrrrrrrr" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.DR_first_hit_NSP.append(40)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 5, "self", "one"))

        if defAllyWithin1RowsCols:
            defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Dream Horn (Base) - Freyr
    if "freyrBoost" in atkSkills and atkHPGreaterEqual25Percent:
        X = max(sum(atkNeutrBuffsStats), max([ally.get_bonus_total() for ally in atkAllyWithin3Spaces], default=0))

        defCombatBuffs[ATK] -= 6 + trunc(0.50 * X)
        defCombatBuffs[DEF] -= 6 + trunc(0.50 * X)
        atkr.follow_ups_skill += 1
        atkr.DR_all_hits_NSP.append(30)

    if "freyrBoost" in defSkills and defHPGreaterEqual25Percent:
        X = max(sum(defNeutrBuffsStats), max([ally.get_bonus_total() for ally in defAllyWithin3Spaces], default=0))

        atkCombatBuffs[ATK] -= 6 + trunc(0.50 * X)
        atkCombatBuffs[DEF] -= 6 + trunc(0.50 * X)
        defr.follow_ups_skill += 1
        defr.DR_all_hits_NSP.append(30)

    # Dream Deliverer - Freyr
    if "dreamDeliverer" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[DEF] += 4
        atkCombatBuffs[RES] += 4
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "dreamDeliverer" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[DEF] += 4
        defCombatBuffs[RES] += 4
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Raydream Horn (Base) - SU!Freyr
    if "suFreyrBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        defCombatBuffs[ATK] -= 6
        atkr.follow_ups_skill += 1

    if "suFreyrBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        atkCombatBuffs[ATK] -= 6
        defr.follow_ups_skill += 1

    # DÖKKÁLFHEIMR

    # Flower of Plenty (Refine Base) - Plumeria
    if "plumeriaRefineField" in atkSkills:
        ally_count = 0

        tiles_within_5_row = attacker.attacking_tile.tilesWithinNRows(5)
        tiles_within_3_col = attacker.attacking_tile.tilesWithinNCols(3)
        tiles_within_5_row_and_3_column = list(set(tiles_within_5_row) & set(tiles_within_3_col))

        for tile in tiles_within_5_row_and_3_column:
            if tile.hero_on and tile.hero_on.isAllyOf(attacker):
                ally_count += 1

        if ally_count > 0:
            atkCombatBuffs[ATK] += 5
            atkCombatBuffs[DEF] += 5

    if "plumeriaRefineField" in defSkills:
        ally_count = 0

        tiles_within_5_row = defender.tile.tilesWithinNRows(5)
        tiles_within_3_col = defender.tile.tilesWithinNCols(3)
        tiles_within_5_row_and_3_column = list(set(tiles_within_5_row) & set(tiles_within_3_col))

        for tile in tiles_within_5_row_and_3_column:
            if tile.hero_on and tile.hero_on.isAllyOf(defender):
                ally_count += 1

        if ally_count > 0:
            defCombatBuffs[ATK] += 5
            defCombatBuffs[DEF] += 5

    # Flower of Plenty (Refine Eff) - Plumeria
    if "plumeriaGravity" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[RES] += 5
        atkr.follow_ups_skill += 1
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.Gravity, "foe_and_foes_allies", "within_1_spaces_foe"))

    if "plumeriaGravity" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[RES] += 5
        defr.follow_ups_skill += 1
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.Gravity, "foe_and_foes_allies", "within_1_spaces_foe"))

    # Springing Spear - SP!Plumeria
    if "spPlumeriaBoost" in atkSkills and atkAllyWithin3RowsCols:
        defCombatBuffs[ATK] -= 6 + trunc(0.20 * atkStats[RES])
        defCombatBuffs[DEF] -= 6 + trunc(0.20 * atkStats[RES])
        atkr.true_all_hits += 10
        atkr.TDR_all_hits += 10
        defr.follow_up_denials -= 1

    if "spPlumeriaBoost" in defSkills and defAllyWithin3RowsCols:
        atkCombatBuffs[ATK] -= 6 + trunc(0.20 * defStats[RES])
        atkCombatBuffs[DEF] -= 6 + trunc(0.20 * defStats[RES])
        defr.true_all_hits += 10
        defr.TDR_all_hits += 10
        atkr.follow_up_denials -= 1

    if "spPlumeriaField_f" in atkSkills:
        atkr.true_all_hits += 10 * atkSkills["spPlumeriaField_f"]
        atkr.sp_jump_first += atkSkills["spPlumeriaField_f"]

    if "spPlumeriaField_f" in defSkills:
        defr.true_all_hits += 10 * defSkills["spPlumeriaField_f"]
        defr.sp_jump_first += defSkills["spPlumeriaField_f"]

    # Arcane Euphoria
    if "euphoriaBros" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkr.true_stat_damages.append((ATK, 15))
        atkr.DR_first_hit_NSP.append(30)

    if "euphoriaBros" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defr.true_stat_damages.append((ATK, 15))
        defr.DR_first_hit_NSP.append(30)

    # Flower of Sorrow (Refine Base) - Triandra
    if "triandraField" in atkSkills and atkSkills["triandraField"] == 5 and (defHPGreaterEqual75Percent or defAllyWithin2Spaces):
        defCombatBuffs[ATK] -= 4
        defCombatBuffs[SPD] -= 4
        defCombatBuffs[RES] -= 4

    if "triandraField" in defSkills and defSkills["triandraField"] == 5 and (atkHPGreaterEqual75Percent or atkAllyWithin2Spaces):
        atkCombatBuffs[ATK] -= 4
        atkCombatBuffs[SPD] -= 4
        atkCombatBuffs[RES] -= 4

    # Flower of Sorrow (Refine Eff) - Triandra
    if "triandraBoost" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 4
        defCombatBuffs[SPD] -= 4
        defCombatBuffs[RES] -= 4
        atkr.follow_ups_skill += 1
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 10, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "triandraBoost" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 4
        atkCombatBuffs[SPD] -= 4
        atkCombatBuffs[RES] -= 4
        defr.follow_ups_skill += 1
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 10, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Nightmare's Egg (Base) - SP!Triandra
    if "spTriandraBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

    if "spTriandraBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

    # Flower of Tribute - X!Triandra
    if "xTriandraBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))

    if "xTriandraBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))

    if "xTriDmg_f" in atkSkills:
        defr.foe_burn_damage += atkSkills["xTriDmg_f"]

    if "xTriDmg_f" in defSkills:
        atkr.foe_burn_damage += defSkills["xTriDmg_f"]

    # Nightmare Horn (Refine Base) - Freyja
    if "freyjaRefineBase" in atkSkills or "freyjaRefineEff" in atkSkills:
        atkr.stat_scaling_DR.append((SPD, 40))

        if defHPGreaterEqual50Percent:
            atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "freyjaRefineBase" in defSkills or "freyjaRefineEff" in defSkills:
        defr.stat_scaling_DR.append((SPD, 40))
        ignore_range = True

        if atkHPGreaterEqual50Percent:
            defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Nightmare Horn (Refine Eff) - Freyja
    if "freyjaRefineEff" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "freyjaRefineEff" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # Brightmare Horn (Base) - SU!Freyja
    if "suFreyjaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.stat_scaling_DR.append((SPD, 40))

    if "suFreyjaBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.stat_scaling_DR.append((SPD, 40))

    # NIÐAVELLIR

    # Lyngheiðr (Base) - Reginn
    if "reginn :)" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.DR_first_hit_NSP.append(30)

    # Lyngheiðr (Refine Base) - Reginn
    if "reginnStrike" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkCombatBuffs[DEF] += 4
        atkCombatBuffs[RES] += 4
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[SPD] = True
        atkr.DR_first_strikes_NSP.append(40)

    if "reginnStrike" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defCombatBuffs[DEF] += 4
        defCombatBuffs[RES] += 4
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[SPD] = True
        defr.DR_first_strikes_NSP.append(40)

    # Lyngheiðr (Refine Eff) - Reginn
    if "refinedReginn" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.true_stat_damages.append((SPD, 20))

    if "refinedReginn" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.true_stat_damages.append((SPD, 20))

    # Seiðr Shell(+) - Reginn
    if "specialHexblade" in atkSkills: atkr.special_hexblade = True
    if "specialHexblade" in defSkills: defr.special_hexblade = True

    # Niðavellir Lots (Base) - NY!Reginn
    if "nyReginnBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

    if "nyReginnBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

    # Dvergr Wayfinder (Base) - AI!Reginn
    # ok yeah 3 rows or cols is becoming a more common condition
    if "reginnAccel" in atkSkills and atkHPGreaterEqual25Percent:
        boost = min(len(atkAllyWithin3RowsCols) * 3 + 5, 14)
        atkCombatBuffs = [x + boost for x in atkCombatBuffs]

        atkr.true_stat_damages.append((SPD, 20))
        atkr.DR_first_strikes_NSP.append(40)
        atkr.sp_pierce_DR = True

    if "reginnAccel" in defSkills and defHPGreaterEqual25Percent:
        boost = min(len(defAllyWithin3RowsCols) * 3 + 5, 14)
        defCombatBuffs = [x + boost for x in defCombatBuffs]

        defr.true_stat_damages.append((SPD, 20))
        defr.DR_first_strikes_NSP.append(40)
        defr.sp_pierce_DR = True

    if "reginnField_f" in atkSkills and turn <= 4:
        atkCombatBuffs[ATK] += atkSkills["reginnField_f"]
        atkCombatBuffs[SPD] += atkSkills["reginnField_f"]
        if attacker.special is not None and atkSpTriggeredByAttack:
            atkr.sp_jump_first += atkSkills["reginnField_f"] // 4

    if "reginnField_f" in defSkills and turn <= 4:
        defCombatBuffs[ATK] += defSkills["reginnField_f"]
        defCombatBuffs[SPD] += defSkills["reginnField_f"]
        if defender.special is not None and defSpTriggeredByAttack:
            defr.sp_jump_first += defSkills["reginnField_f"] // 4

    # Seiðr Burst - AI!Reginn
    if "reginnBurst" in atkSkills:
        atkr.special_hexblade = True

        if turn <= 4:
            atkr.sp_jump_first += 2
            atkr.sp_jump_followup += 1

    if "reginnBurst" in defSkills:
        defr.special_hexblade = True

        if turn <= 4:
            defr.sp_jump_first += 2
            defr.sp_jump_followup += 1

    # Niðavellir Ballista - Niðavellir
    if "niðavellirBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6 + trunc(0.20 * atkStats[SPD])
        atkCombatBuffs[SPD] += 6 + trunc(0.20 * atkStats[SPD])
        atkr.true_stat_damages.append((SPD, 20))
        atkr.DR_first_strikes_NSP.append(30)

    if "niðavellirBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6 + trunc(0.20 * defStats[SPD])
        defCombatBuffs[SPD] += 6 + trunc(0.20 * defStats[SPD])
        defr.true_stat_damages.append((SPD, 20))
        defr.DR_first_strikes_NSP.append(30)

    # Auto-Lofnheiðr (Base) - Ótr
    if "otrBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        defCombatBuffs[ATK] -= 6
        atkr.follow_ups_skill += 1

    if "otrBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        atkCombatBuffs[ATK] -= 6
        defr.follow_ups_skill += 1

    # Auto-Lofnheiðr (Refine Base) - Ótr
    if "otrRefineBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        defCombatBuffs[ATK] -= 6
        atkr.follow_ups_skill += 1
        defr.follow_up_denials -= 1
        atkr.sp_pierce_DR = True

    if "otrRefineBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        atkCombatBuffs[ATK] -= 6
        defr.follow_ups_skill += 1
        atkr.follow_up_denials -= 1
        defr.sp_pierce_DR = True

    # Brutal Shell+
    if "brutalShellPlus" in atkSkills: atkr.DR_sp_trigger_by_any_special_SP.append(40)
    if "brutalShellPlus" in defSkills: defr.DR_sp_trigger_by_any_special_SP.append(40)

    # Iron Hreiðmarr - Fáfnir
    if "THE FAFNIR IS REAL" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(len(atkFoeWithin3RowsCols) * 3, 9) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((ATK, 15))
        atkr.sp_jump_first += min(spaces_moved_by_atkr, 3)

    if "THE FAFNIR IS REAL" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(len(defFoeWithin3RowsCols) * 3, 9) for x in defCombatBuffs]
        defr.true_stat_damages.append((ATK, 15))
        defr.sp_jump_first += min(spaces_moved_by_atkr, 3)

    # Niðavellir Sprig (Base) - NY!Fáfnir
    if "He's still not playable (kinda)" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "He's still not playable (kinda)" in defSkills and not defAdjacentToAlly:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.offensive_NFU = True
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Grim Brokkr (Base) - Eitri
    if "eitriBoost" in atkSkills:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[RES] -= 6
        atkr.follow_ups_skill += 1

    if "eitriBoost" in defSkills and not defAdjacentToAlly:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[RES] -= 6
        defr.follow_ups_skill += 1

    # Grim Brokkr (Refine Base) - Eitri
    if "eitriRefine" in atkSkills:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[RES] -= 6
        defCombatBuffs[SPD] -= 5
        atkr.follow_ups_skill += 1
        atkr.true_stat_damages.append((ATK, 15))
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "eitriRefine" in defSkills and len(defAdjacentToAlly) <= 1:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[RES] -= 6
        atkCombatBuffs[SPD] -= 5
        defr.follow_ups_skill += 1
        defr.true_stat_damages.append((ATK, 15))
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Grim Brokkr (Refine Eff) - Eitri
    if "book 5 sure was a book" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5 + len(defAllyWithin3Spaces) + 1
        defCombatBuffs[SPD] -= 5 + len(defAllyWithin3Spaces) + 1
        defCombatBuffs[RES] -= 5 + len(defAllyWithin3Spaces) + 1

        X = min(12, 3 * (len(attacker.statusPos) + len(defender.statusNeg)))

        atkr.TDR_all_hits += X
        atkr.TDR_on_foe_sp += X

    if "book 5 sure was a book" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5 + len(atkAllyWithin3Spaces) + 1
        atkCombatBuffs[SPD] -= 5 + len(atkAllyWithin3Spaces) + 1
        atkCombatBuffs[RES] -= 5 + len(atkAllyWithin3Spaces) + 1

        X = min(12, 3 * (len(defender.statusPos) + len(attacker.statusNeg)))

        defr.TDR_all_hits += X
        defr.TDR_on_foe_sp += X

    # Divine Recreation - Eitri
    if "divineRec" in atkSkills and defHPGreaterEqual50Percent:
        defCombatBuffs = [x - 4 for x in defCombatBuffs]
        atkr.DR_first_hit_NSP.append(30)
        atkr.retaliatory_reduced += 1

    if "divineRec" in defSkills and atkHPGreaterEqual50Percent:
        atkCombatBuffs = [x - 4 for x in atkCombatBuffs]
        defr.DR_first_hit_NSP.append(30)
        defr.retaliatory_reduced += 1

    # Divine Rec. II - Eitri
    if "divineRecII" in atkSkills:
        defCombatBuffs = [x - 4 for x in defCombatBuffs]
        atkr.DR_first_strikes_NSP.append(50)
        atkr.damage_reduction_reduction.append(50)
        atkr.retaliatory_reduced += 1

    if "divineRecII" in defSkills and atkHPGreaterEqual50Percent:
        atkCombatBuffs = [x - 4 for x in atkCombatBuffs]
        defr.DR_first_strikes_NSP.append(50)
        defr.damage_reduction_reduction.append(50)
        defr.retaliatory_reduced += 1

    # JÖTUNHEIMR

    # Veðrfölnir's Edge - AI!Dagr
    if "aiDagrBoost" in atkSkills:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkPenaltiesNeutralized = [True] * 5
        atkr.offensive_tempo = True

    if "aiDagrBoost" in defSkills and defAllyWithin3RowsCols:
        defCombatBuffs = [x + min(len(defAllyWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defPenaltiesNeutralized = [True] * 5
        defr.offensive_tempo = True

    # Arcane Giant Axe
    if "giantAxe" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + max(5, min(trunc(0.25 * defStats[ATK]) - 4, 14)) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((ATK, 15))
        atkr.TDR_stats.append((ATK, 15))
        atkr.sp_jump_first -= 1

    if "giantAxe" in defSkills:
        defCombatBuffs = [x + max(5, min(trunc(0.25 * atkStats[ATK]) - 4, 14)) for x in defCombatBuffs]
        defr.true_stat_damages.append((ATK, 15))
        defr.TDR_stats.append((ATK, 15))
        defr.sp_jump_first -= 1

    # Brutal Ferocity - Þjazi
    if "brutalFerocity" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5 + max(8, min(atkStats[HP] - defHPCur, 18))
        defCombatBuffs[DEF] -= 5 + max(8, min(atkStats[HP] - defHPCur, 18))
        atkr.follow_ups_skill += 1
        atkr.offensive_tempo = True
        atkr.damage_reduction_reduction.append(50)

    if "brutalFerocity" in defSkills:
        atkCombatBuffs[ATK] -= 5 + max(8, min(defStats[HP] - atkHPCur, 18))
        atkCombatBuffs[DEF] -= 5 + max(8, min(defStats[HP] - atkHPCur, 18))
        defr.follow_ups_skill += 1
        defr.offensive_tempo = True
        defr.damage_reduction_reduction.append(50)

    # VANAHEIMR

    # Seiðr (Base) - Seiðr
    if "seiðrBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkr.true_stat_damages.append((RES, 20))

    if "seiðrBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defr.true_stat_damages.append((RES, 20))

    # Heiðr (Base) - Heiðr
    if "heiðrBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((ATK, 15))
        atkr.DR_first_hit_NSP.append(30)

    if "heiðrBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_stat_damages.append((ATK, 15))
        defr.DR_first_hit_NSP.append(30)

    # Horn of the Land (Base) - Nerþuz
    if "nerþuzBoost" in atkSkills and atkHPGreaterEqual25Percent:
        if attacker.specialMax != -1:
            atkCombatBuffs = [x + 5 + attacker.specialMax * 2 for x in atkCombatBuffs]
        else:
            atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "nerþuzBoost" in defSkills and defHPGreaterEqual25Percent:
        if defender.specialMax != -1:
            defCombatBuffs = [x + 5 + defender.specialMax * 2 for x in defCombatBuffs]
        else:
            defCombatBuffs = [x + 5 for x in defCombatBuffs]

        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # Fruit of Life - Nerþuz
    if "fruitOLife" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.DR_first_hit_NSP.append(40)
        atkr.retaliatory_reduced += 1

        if len(atkAdjacentToAlly) <= 1:
            atkr.offensive_NFU = True
            atkPostCombatEffs[UNCONDITIONAL].append(("status", Status.Gravity, "foe_and_foes_allies", "within_1_spaces_foe"))

    if "fruitOLife" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.DR_first_hit_NSP.append(40)
        defr.retaliatory_reduced += 1

        if len(defAdjacentToAlly) <= 1:
            defr.offensive_NFU = True
            defPostCombatEffs[UNCONDITIONAL].append(("status", Status.Gravity, "foe_and_foes_allies", "within_1_spaces_foe"))

    # Cute Paper Crane - NY!Nerþuz
    if "nyNerþuzBoost" in atkSkills and atkHPGreaterEqual25Percent:
        if attacker.specialMax != -1:
            atkCombatBuffs = [x + 5 + attacker.specialMax * 2 for x in atkCombatBuffs]
        else:
            atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "nyNerþuzBoost" in defSkills and defHPGreaterEqual25Percent:
        if defender.specialMax != -1:
            defCombatBuffs = [x + 5 + defender.specialMax * 2 for x in defCombatBuffs]
        else:
            defCombatBuffs = [x + 5 for x in defCombatBuffs]

        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # Love of Nerþuz - SU!Nerþuz
    if "loveONerþuz" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.DR_first_strikes_NSP.append(40)

        atkr.damage_reduction_reduction.append(min(attacker.specialMax * 30 + 10, 100))

        if attacker.specialMax >= 3 and atkSpTriggeredByAttack:
            atkr.sp_jump_first += 1

    if "loveONerþuz" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(len(defAllyWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.DR_first_strikes_NSP.append(40)

        defr.damage_reduction_reduction.append(min(defender.specialMax * 30 + 10, 100))

        if defender.specialMax >= 3 and defSpTriggeredByAttack:
            defr.sp_jump_first += 1

    if "loveONerþuz_f" in atkSkills:
        for i in range(0, atkSkills["loveONerþuz_f"]):
            atkr.damage_reduction_reduction.append(min(attacker.specialMax * 30 + 10, 100))

            if attacker.specialMax >= 3 and atkSpTriggeredByAttack:
                atkr.sp_jump_first += 1

    if "loveONerþuz_f" in defSkills:
        for i in range(0, defSkills["loveONerþuz_f"]):
            defr.damage_reduction_reduction.append(min(defender.specialMax * 30 + 10, 100))

            if defender.specialMax >= 3 and defSpTriggeredByAttack:
                defr.sp_jump_first += 1

    # Under the Sun - SU!Nerþuz
    if "underTheSun" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.offensive_tempo = True
        atkr.true_stat_damages.append((SPD, 20))
        atkr.retaliatory_reduced += 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "underTheSun" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.offensive_tempo = True
        defr.true_stat_damages.append((SPD, 20))
        defr.retaliatory_reduced += 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Incipit Kvasir - Kvasir
    if "kvasirBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defCombatBuffs[SPD] -= trunc(0.15 * atkStats[SPD])
        defCombatBuffs[RES] -= trunc(0.15 * atkStats[SPD])
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.Panic, "foe_and_foes_allies", "within_2_spaces_foe"))

        if attacker.unitCombatInitiates == 0:
            atkr.DR_first_strikes_NSP.append(70)

    if "kvasirBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkCombatBuffs[SPD] -= trunc(0.15 * defStats[SPD])
        atkCombatBuffs[RES] -= trunc(0.15 * defStats[SPD])
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.Panic, "foe_and_foes_allies", "within_2_spaces_foe"))

        if defender.unitCombatInitiates == 0:
            defr.DR_first_strikes_NSP.append(70)

    # Faded Paper Fan - NY!Kvasir
    if "nyKvasirBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defCombatBuffs[SPD] -= trunc(0.20 * atkStats[SPD])
        defCombatBuffs[RES] -= trunc(0.20 * atkStats[SPD])
        atkr.damage_reduction_reduction.append(50)

        if attacker.unitCombatInitiates == 0:
            atkr.DR_first_strikes_NSP.append(70)

        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.Flash, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "nyKvasirBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkCombatBuffs[SPD] -= trunc(0.20 * defStats[SPD])
        atkCombatBuffs[RES] -= trunc(0.20 * defStats[SPD])
        defr.damage_reduction_reduction.append(50)

        if defender.unitCombatInitiates == 0:
            defr.DR_first_strikes_NSP.append(70)

        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.Flash, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Quietus Gullveig - Gullveig
    if "gullveigBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkCombatBuffs[ATK] += trunc(0.15 * atkStats[SPD])
        atkCombatBuffs[SPD] += trunc(0.15 * atkStats[SPD])
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.DR_first_hit_NSP.append(70)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "gullveigBoost" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defCombatBuffs[ATK] += trunc(0.15 * defStats[SPD])
        defCombatBuffs[SPD] += trunc(0.15 * defStats[SPD])
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # Golden Sunlight - SU!Gullveig
    if "suGullveigBoost" in atkSkills:
        X = 14 if attacker.unitCombatInitiates > 0 else min(len(atkAllyWithin3RowsCols) * 3 + 5, 14)

        atkCombatBuffs = [x + X for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))
        atkr.damage_reduction_reduction.append(50)
        atkr.DR_first_strikes_NSP.append(70)

    if "suGullveigBoost" in defSkills and atkHPGreaterEqual75Percent:
        X = 14 if defender.unitCombatInitiates > 0 else min(len(defAllyWithin3RowsCols) * 3 + 5, 14)

        defCombatBuffs = [x + X for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))
        defr.damage_reduction_reduction.append(50)

    # YGGDRASIL

    # World-Tree Tail - Ratatoskr
    if "rata" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        low_hp_allies = 0

        for ally in atkAllAllies:
            if ally.HPcur / ally.visible_stats[HP] <= 0.40:
                low_hp_allies += 1

        atkCombatBuffs[ATK] += max(9 - 3 * low_hp_allies, 0)
        atkCombatBuffs[SPD] += max(9 - 3 * low_hp_allies, 0)
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkr.DR_first_strikes_NSP.append(40)

    if "rata" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        low_hp_allies = 0

        for ally in defAllAllies:
            if ally.HPcur / ally.visible_stats[HP] <= 0.40:
                low_hp_allies += 1

        defCombatBuffs[ATK] += max(9 - 3 * low_hp_allies, 0)
        defCombatBuffs[SPD] += max(9 - 3 * low_hp_allies, 0)
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defr.DR_first_strikes_NSP.append(40)

    # Mending Heart - Ratatoskr
    if "it's her!" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "it's her!" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Delivering Antler - WI!Eikþyrnir
    if "wiEikBoost" in atkSkills:
        defCombatBuffs[ATK] -= 6 + trunc(0.20 * defStats[DEF])
        defCombatBuffs[DEF] -= 6 + trunc(0.20 * defStats[DEF])

        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[DEF] = True
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[DEF] = True
        atkr.follow_ups_skill += 1

    if "wiEikBoost" in defSkills and defAllyWithin2Spaces:
        atkCombatBuffs[ATK] -= 6 + trunc(0.20 * atkStats[DEF])
        atkCombatBuffs[DEF] -= 6 + trunc(0.20 * atkStats[DEF])

        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[DEF] = True
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[DEF] = True
        defr.follow_ups_skill += 1

    # Nectar Horn - Heiðrún
    if "heiðrúnBoost" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 6 + trunc(0.20 * defStats[RES])
        defCombatBuffs[DEF] -= 6 + trunc(0.20 * defStats[RES])
        atkr.TDR_stats.append((RES, 20))
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[DEF] = True
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "heiðrúnBoost" in defSkills:
        atkCombatBuffs[ATK] -= 6 + trunc(0.20 * atkStats[RES])
        atkCombatBuffs[DEF] -= 6 + trunc(0.20 * atkStats[RES])
        defr.TDR_stats.append((RES, 20))
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[DEF] = True
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Divine Nectar - Heiðrún
    if "divineNectar" in atkSkills and atkAllyWithin3Spaces:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "divineNectar" in defSkills and defAllyWithin3Spaces:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    if Status.DivineNectar in attacker.statusPos: 
        atkr.TDR_all_hits += 10
        atkr.disable_deep_wounds = True
        
    if Status.DivineNectar in defender.statusPos: 
        defr.TDR_all_hits += 10
        defr.disable_deep_wounds = True

    # New Year Treats - NY!Heiðrún
    if "newYearTreats" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5 + trunc(0.20 * atkStats[RES])
        atkCombatBuffs[DEF] += 5 + trunc(0.20 * atkStats[RES])
        atkCombatBuffs[RES] += 5 + trunc(0.20 * atkStats[RES])
        atkr.true_stat_damages.append((RES, 20))
        atkr.offensive_tempo = True
        atkr.damage_reduction_reduction.append(50)

    if "newYearTreats" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5 + trunc(0.20 * defStats[RES])
        defCombatBuffs[DEF] += 5 + trunc(0.20 * defStats[RES])
        defCombatBuffs[RES] += 5 + trunc(0.20 * defStats[RES])
        defr.true_stat_damages.append((RES, 20))
        defr.offensive_tempo = True
        defr.damage_reduction_reduction.append(50)

    # Nectar's Magic - NY!Heiðrún
    if "nectarsMagic" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        atkCombatBuffs[RES] += 5

        if attacker.getSpecialType() == "Offense":
            atkr.sp_jump_first += 1

    if "nectarsMagic" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        defCombatBuffs[RES] += 5

        if defender.getSpecialType() == "Offense":
            defr.sp_jump_first += 1

    # Tropical Nectar - SU!Heiðrún
    if "suHeidrunBoost" in atkSkills and attacker.transformed:
        atkCombatBuffs[ATK] += min(len(atkAllyWithin3RowsCols) * 3 + 5, 14)
        atkCombatBuffs[DEF] += min(len(atkAllyWithin3RowsCols) * 3 + 5, 14)
        atkCombatBuffs[RES] += min(len(atkAllyWithin3RowsCols) * 3 + 5, 14)

        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[DEF] = True
        atkPenaltiesNeutralized[RES] = True

        atkr.follow_ups_skill += 1
        atkr.true_stat_damages.append((RES, 20))
        atkr.TDR_stats.append((RES, 20))

    if "suHeidrunBoost" in defSkills:
        defCombatBuffs[ATK] += min(len(defAllyWithin3RowsCols) * 3 + 5, 14)
        defCombatBuffs[DEF] += min(len(defAllyWithin3RowsCols) * 3 + 5, 14)
        defCombatBuffs[RES] += min(len(defAllyWithin3RowsCols) * 3 + 5, 14)

        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[DEF] = True
        defPenaltiesNeutralized[RES] = True

        defr.follow_ups_skill += 1
        defr.true_stat_damages.append((RES, 20))
        defr.TDR_stats.append((RES, 20))

    if "nectarLull_f" in atkSkills:
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[DEF] = True
        atkPenaltiesNeutralized[RES] = True
        atkr.follow_ups_skill += atkSkills["nectarLull_f"]

    if "nectarLull_f" in defSkills:
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[DEF] = True
        defPenaltiesNeutralized[RES] = True
        defr.follow_ups_skill += defSkills["nectarLull_f"]

    # Sweet Nectar - SU!Heiðrún
    if "sweetNectar" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        atkCombatBuffs[RES] += 5
        atkr.true_all_hits += 7
        atkr.TDR_all_hits += 7

    if "sweetNectar" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        defCombatBuffs[RES] += 5
        defr.true_all_hits += 7
        defr.TDR_all_hits += 7

    # Quieting Claw - Hræsvelgr
    if "hræsvelgrBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        X = 0
        Y = len(defender.statusNeg) + len(defender.statusPos)

        for ally in defAllyWithin2Spaces:
            if ally.hasPenalty():
                X += 1

            Y += len(ally.statusNeg) + len(ally.statusPos)

        defCombatBuffs[ATK] -= min(X * 3 + 4, 10)
        defCombatBuffs[SPD] -= min(X * 3 + 4, 10)
        defCombatBuffs[DEF] -= min(X * 3 + 4, 10)

        atkr.true_all_hits += Y * 3
        atkr.DR_all_hits_NSP.append(40)
        atkr.damage_reduction_reduction.append(50)

    if "hræsvelgrBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        X = 0
        Y = len(attacker.statusNeg) + len(attacker.statusPos)

        for ally in atkAllyWithin2Spaces:
            if ally.hasPenalty():
                X += 1

            Y += len(ally.statusNeg) + len(ally.statusPos)

        atkCombatBuffs[ATK] -= min(X * 3 + 4, 10)
        atkCombatBuffs[SPD] -= min(X * 3 + 4, 10)
        atkCombatBuffs[DEF] -= min(X * 3 + 4, 10)

        defr.true_all_hits += Y * 3
        defr.DR_all_hits_NSP.append(40)
        defr.damage_reduction_reduction.append(50)

    # Divine Talon
    if "divineTalon" in atkSkills and (attacker.transformed or defHPGreaterEqual75Percent):
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.offensive_tempo = True
        atkr.TDR_all_hits += min(spaces_moved_by_atkr * 4, 12)
        atkr.TDR_on_foe_sp += min(spaces_moved_by_atkr * 4, 12)

    if "divineTalon" in defSkills and (defender.transformed or atkHPGreaterEqual75Percent):
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.offensive_tempo = True
        defr.TDR_all_hits += min(spaces_moved_by_atkr * 4, 12)
        defr.TDR_on_foe_sp += min(spaces_moved_by_atkr * 4, 12)

    # New Year Talon
    if "nyHraesBoost" in atkSkills and (attacker.transformed or defHPGreaterEqual75Percent):
        atkCombatBuffs = [x + 5 + trunc(0.15 * atkStats[SPD]) for x in atkCombatBuffs]

        X = len(defender.statusNeg) + len(defender.statusPos)

        for ally in defAllyWithin2Spaces:
            X += len(ally.statusNeg) + len(ally.statusPos)

        atkr.true_all_hits += X * 3
        atkr.TDR_first_strikes += 7
        atkr.sp_jump_first += 1

    if "nyHraesBoost" in defSkills and (defender.transformed or atkHPGreaterEqual75Percent):
        defCombatBuffs = [x + 5 + trunc(0.15 * defStats[SPD]) for x in defCombatBuffs]

        X = len(attacker.statusNeg) + len(attacker.statusPos)

        for ally in atkAllyWithin2Spaces:
            X += len(ally.statusNeg) + len(ally.statusPos)

        defr.true_all_hits += X * 3
        defr.TDR_first_strikes += 7
        defr.sp_jump_first += 1

    # Enticing Dose (Base) - Níðhöggr
    if "God's strongest drunk driver" in atkSkills and (atkHPGreaterEqual25Percent or attacker.transformed):
        defCombatBuffs[ATK] -= 6 + trunc(atkStats[DEF] * 0.20)
        defCombatBuffs[DEF] -= 6 + trunc(atkStats[DEF] * 0.20)
        atkr.damage_reduction_reduction.append(50)
        atkr.true_all_hits += trunc(defStats[HP] * 0.30)
        atkr.TDR_snake = True

    if "God's strongest drunk driver" in defSkills and (defHPGreaterEqual25Percent or defender.transformed):
        atkCombatBuffs[ATK] -= 6 + trunc(defStats[DEF] * 0.20)
        atkCombatBuffs[DEF] -= 6 + trunc(defStats[DEF] * 0.20)
        defr.damage_reduction_reduction.append(50)
        defr.true_all_hits += trunc(defStats[HP] * 0.30)
        defr.TDR_snake = True

    # Divine Toxin - Níðhöggr
    if "divineToxin" in atkSkills and attacker.transformed:
        atkCombatBuffs[ATK] += 10
        atkCombatBuffs[DEF] += 10
        atkCombatBuffs[RES] += 10
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[DEF] = True
        atkr.offensive_tempo = True

    if "divineToxin" in defSkills:
        defCombatBuffs[ATK] += 10
        defCombatBuffs[DEF] += 10
        defCombatBuffs[RES] += 10
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[DEF] = True
        defr.offensive_tempo = True

    if Status.Dosage in attacker.statusPos:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 10, "self", "one"))

    if Status.Dosage in defender.statusPos:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 10, "self", "one"))

    # New Year Fang - NY!Níðhöggr
    if "nySnakeBoost" in atkSkills and atkSkills and (atkHPGreaterEqual25Percent or attacker.transformed):
        defCombatBuffs[ATK] -= 6 + trunc(atkStats[DEF] * 0.20)
        defCombatBuffs[DEF] -= 6 + trunc(atkStats[DEF] * 0.20)
        atkr.DR_sp_trigger_twin = True
        atkr.true_all_hits += trunc(defStats[HP] * 0.30)
        atkr.TDR_snake = True

    if "nySnakeBoost" in defSkills and defSkills and (defHPGreaterEqual25Percent or defender.transformed):
        atkCombatBuffs[ATK] -= 6 + trunc(defStats[DEF] * 0.20)
        atkCombatBuffs[DEF] -= 6 + trunc(defStats[DEF] * 0.20)
        defr.DR_sp_trigger_twin = True
        defr.true_all_hits += trunc(defStats[HP] * 0.30)
        defr.TDR_snake = True

    # Quieting Branch - Læraðr
    if "treePowerActivate" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 6 + trunc(atkStats[RES] * 0.20)
        defCombatBuffs[DEF] -= 6 + trunc(atkStats[RES] * 0.20)
        atkr.sp_jump_foe_first += 2
        atkr.TDR_stats.append((RES, 20))

    if "treePowerActivate" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 6 + trunc(defStats[RES] * 0.20)
        atkCombatBuffs[DEF] -= 6 + trunc(defStats[RES] * 0.20)
        defr.sp_jump_foe_first += 2
        defr.TDR_stats.append((RES, 20))

    # Yggdrasill's Alter - Læraðr
    if "yggdrasillsAlter" in atkSkills:
        discord_foe_count = 1 if Status.Discord in defender.statusNeg else 0

        for ally in defAllAllies:
            if Status.Discord in ally.statusNeg:
                discord_foe_count += 1

        defCombatBuffs[ATK] -= min(len(discord_foe_count) * 3 + 5, 14)
        defCombatBuffs[DEF] -= min(len(discord_foe_count) * 3 + 5, 14)
        atkr.true_stat_damages.append((RES, 20))
        atkr.follow_ups_skill += 1
        atkr.sp_pierce_DR = True

    if "yggdrasillsAlter" in defSkills:
        discord_foe_count = 1 if Status.Discord in attacker.statusNeg else 0

        for ally in atkAllAllies:
            if Status.Discord in ally.statusNeg:
                discord_foe_count += 1

        atkCombatBuffs[ATK] -= min(len(discord_foe_count) * 3 + 5, 14)
        atkCombatBuffs[DEF] -= min(len(discord_foe_count) * 3 + 5, 14)
        defr.true_stat_damages.append((RES, 20))
        defr.follow_ups_skill += 1
        defr.sp_pierce_DR = True

    # ÁSGARÐR

    # Óðr of Creation - Rune
    if "runeBoost" in atkSkills:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.true_all_hits += min(len(attacker.statusPos + defender.statusPos) * 5, 25)
        atkr.offensive_tempo = True

    if "runeBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + min(len(defAllyWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defr.true_all_hits += min(len(attacker.statusPos + defender.statusPos) * 5, 25)
        defr.offensive_tempo = True

    if Status.Empathy in attacker.statusPos:
        all_statuses = []

        for status in attacker.statusPos + attacker.statusNeg + defender.statusPos + defender.statusNeg:
            all_statuses.append(status)

        for ally in atkAllAllies + defAllAllies:
            for status in ally.statusPos + ally.statusNeg:
                all_statuses.append(status)

        all_statuses = list(set(all_statuses))

        atkCombatBuffs = [x + min(len(all_statuses), 7) for x in atkCombatBuffs]

    if Status.Empathy in defender.statusPos:
        all_statuses = []

        for status in attacker.statusPos + attacker.statusNeg + defender.statusPos + defender.statusNeg:
            all_statuses.append(status)

        for ally in atkAllAllies + defAllAllies:
            for status in ally.statusPos + ally.statusNeg:
                all_statuses.append(status)

        all_statuses = list(set(all_statuses))

        defCombatBuffs = [x + min(len(all_statuses), 7) for x in defCombatBuffs]

    # Thökk (Refine Eff) - P!Loki
    if "lokiGuard" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[SPD] += 4

    if "lokiGuard" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[SPD] += 4

    # Supreme Thökk - Loki
    if "supremeThokk" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6 + trunc(0.20 * atkStats[RES])
        atkCombatBuffs[RES] += 6 + trunc(0.20 * atkStats[RES])
        atkr.follow_ups_skill += 1
        atkr.true_stat_damages.append((RES, 20))

    if "supremeThokk" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6 + trunc(0.20 * defStats[RES])
        defCombatBuffs[RES] += 6 + trunc(0.20 * defStats[RES])
        defr.follow_ups_skill += 1
        defr.true_stat_damages.append((RES, 20))

    # War-God Mjölnir (Base) - Thórr
    if "thorrBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        defCombatBuffs[ATK] -= 6
        atkr.follow_ups_skill += 1

        if not atkAdjacentToAlly:
            defBonusesNeutralized = [True] * 5

    if "thorrBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        atkCombatBuffs[ATK] -= 6
        defr.follow_ups_skill += 1

        if not defAdjacentToAlly:
            atkBonusesNeutralized = [True] * 5

    # War-God Mjölnir (Refine Base) - Thórr
    if "thorrRefine" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        defCombatBuffs[ATK] -= 6
        atkr.follow_ups_skill += 1
        atkr.true_stat_damages.append((ATK, 15))
        defBonusesNeutralized = [True] * 5

    if "thorrRefine" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        atkCombatBuffs[ATK] -= 6
        defr.follow_ups_skill += 1
        defr.true_stat_damages.append((ATK, 15))
        atkBonusesNeutralized = [True] * 5

    # War-God Mjölnir (Refine Eff) - Thórr
    if "im eating an apple rn" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        defCombatBuffs[ATK] -= 6
        atkr.TDR_stats.append((ATK, 15))
        atkr.retaliatory_reduced += 1
        atkr.sp_pierce_DR = True

    if "im eating an apple rn" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        atkCombatBuffs[ATK] -= 6
        defr.TDR_stats.append((ATK, 15))
        defr.retaliatory_reduced += 1
        defr.sp_pierce_DR = True

    # Worldbreaker+ - Thórr
    if "worldbreakerPlus" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        atkCombatBuffs[RES] += 5
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkr.sp_jump_first += 2

    if "worldbreakerPlus" in defSkills:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        defCombatBuffs[RES] += 5
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defr.sp_jump_first += 2

    if "WBP_f" in atkSkills: atkr.sp_jump_first += 1
    if "WBP_f" in defSkills: defr.sp_jump_first += 1

    # Divine Whimsy (Base) - SU!Thórr
    if "suThorrBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        defCombatBuffs[ATK] -= 6

    if "suThorrBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        atkCombatBuffs[ATK] -= 6

    # Sun Sword - Baldr
    if "DESUWA" in atkSkills:
        atkCombatBuffs = [x + min(len(atkFoeWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

        if defender.wpnType not in BLUE_WEAPONS:
            atkr.true_stat_damages.append((SPD, 50))
        else:
            atkr.true_stat_damages.append((SPD, 20))

        atkPostCombatEffs[GIVEN_UNIT_SURVIVED].append(("dv_flame", 2, "foe", "one"))

    if "DESUWA" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + min(len(defFoeWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

        if attacker.wpnType not in BLUE_WEAPONS:
            defr.true_stat_damages.append((SPD, 50))
        else:
            defr.true_stat_damages.append((SPD, 20))

    # Dusk Rifle - Höðr
    if "höðrBoost" in atkSkills:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((RES, 20))
        atkr.follow_ups_skill += 1
        atkr.sp_jump_first += 1

    if "höðrBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + min(len(defAllyWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defr.true_stat_damages.append((RES, 20))
        defr.follow_ups_skill += 1
        defr.sp_jump_first += 1

    # Vengeful God - Váli
    if "valiMiracle" in atkSkills and atkHPGreaterEqual25Percent:
        if not attacker.once_per_turn_cond and attacker.special and attacker.special.name == "Miracle":
            atkr.vali_miracle = True
            atkPostCombatEffs[GIVEN_SPECIAL_TRIGGERED].append(("heal", 40, "self", "one"))
            atkPostCombatEffs[GIVEN_SPECIAL_TRIGGERED].append(("sp_charge", 4, "self", "one"))
            atkPostCombatEffs[GIVEN_SPECIAL_TRIGGERED].append(("great_talent_atk", (10, 20), "self", "one"))
            atkPostCombatEffs[GIVEN_SPECIAL_TRIGGERED].append(("great_talent_spd", (10, 20), "self", "one"))
            atkPostCombatEffs[GIVEN_SPECIAL_TRIGGERED].append(("enable_once_per_turn", 0, "self", "one"))

        atkCombatBuffs = [x + min(len(atkFoeWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))
        atkr.true_all_hits += attacker.great_talent[ATK] + attacker.great_talent[SPD]
        atkr.TDR_first_stats.append((SPD, 20))
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "valiMiracle" in defSkills and defHPGreaterEqual25Percent:
        if not defender.once_per_turn_cond and defender.special and defender.special.name == "Miracle":
            defr.vali_miracle = True
            defPostCombatEffs[GIVEN_SPECIAL_TRIGGERED].append(("heal", 40, "self", "one"))
            defPostCombatEffs[GIVEN_SPECIAL_TRIGGERED].append(("sp_charge", 4, "self", "one"))
            defPostCombatEffs[GIVEN_SPECIAL_TRIGGERED].append(("great_talent_atk", (10, 20), "self", "one"))
            defPostCombatEffs[GIVEN_SPECIAL_TRIGGERED].append(("great_talent_spd", (10, 20), "self", "one"))
            defPostCombatEffs[GIVEN_SPECIAL_TRIGGERED].append(("enable_once_per_turn", 0, "self", "one"))

        defCombatBuffs = [x + min(len(defFoeWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))
        defr.true_all_hits += attacker.great_talent[ATK] + attacker.great_talent[SPD]
        defr.TDR_first_stats.append((SPD, 20))
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # Gjallarhorn - Heimdallr
    if "heimdallrBoost" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= trunc(0.20 * atkStats[RES])
        defCombatBuffs[RES] -= trunc(0.20 * atkStats[RES])

        X = min(len(atkAllyWithin3RowsCols) * 5, 15)
        atkr.true_all_hits += X
        atkr.TDR_all_hits += X
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "heimdallrBoost" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= trunc(0.20 * defStats[RES])
        atkCombatBuffs[RES] -= trunc(0.20 * defStats[RES])

        X = min(len(defAllyWithin3RowsCols) * 5, 15)
        defr.true_all_hits += X
        defr.TDR_all_hits += X
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "heimdallrNull" in atkSkills:
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[DEF] = True
        atkBonusesNeutralized[RES] = True

    if "heimdallrNull" in defSkills:
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[DEF] = True
        defBonusesNeutralized[RES] = True

    # Beast Weapons
    if attacker.transformed:
        if "infantryBeastA" in atkSkills:
            atkr.true_sp += 10
        elif "infantryBeastB" in atkSkills:
            atkr.true_sp += 7
            atkr.offensive_tempo = True
            atkr.defensive_tempo = True
        elif "cavalryBeastA" in atkSkills:
            defCombatBuffs[ATK] -= 4
            defCombatBuffs[DEF] -= 4
            defr.follow_up_denials -= 1
        elif "cavalryBeastB" in atkSkills:
            defCombatBuffs[ATK] -= min(spaces_moved_by_atkr + 3, 6)
            defCombatBuffs[DEF] -= min(spaces_moved_by_atkr + 3, 6)

            if min(spaces_moved_by_atkr + 3, 6) >= 5:
                atkr.DR_first_hit_NSP.append(30)

    if defender.transformed:
        if "infantryBeastA" in defSkills:
            defr.true_sp += 10
        elif "infantryBeastB" in defSkills:
            defr.true_sp += 7
            defr.offensive_tempo = True
            defr.defensive_tempo = True
        elif "cavalryBeastB" in defSkills:
            atkCombatBuffs[ATK] -= min(spaces_moved_by_atkr + 3, 6)
            atkCombatBuffs[DEF] -= min(spaces_moved_by_atkr + 3, 6)

            if min(spaces_moved_by_atkr + 3, 6) >= 5:
                defr.DR_first_hit_NSP.append(30)
        elif "armorBeastA" in defSkills:
            ignore_range = True

    if "Mario":
        "only Bros!"

    if "selfDmg" in atkSkills:  # damage to self after combat always
        atkPostCombatEffs[UNCONDITIONAL].append(("damage", atkSkills["selfDmg"], "self", "one"))

    if "selfDmg" in defSkills:
        defPostCombatEffs[UNCONDITIONAL].append(("damage", defSkills["selfDmg"], "self", "one"))

    # Devil Axe
    if "atkOnlySelfDmg" in atkSkills:  # damage to attacker after combat iff attacker had attacked
        atkPostCombatEffs[2].append(("damage", atkSkills["atkOnlySelfDmg"], "self", "one"))

    if "atkOnlySelfDmg" in defSkills:  # damage to attacker after combat iff attacker had attacked
        defPostCombatEffs[2].append(("damage", defSkills["atkOnlySelfDmg"], "self", "one"))

    # Pain
    if "atkOnlyOtherDmg" in atkSkills:  # damage to other unit after combat iff attacker had attacked
        atkPostCombatEffs[2].append(("damage", atkSkills["atkOnlyOtherDmg"], "foe", "one"))

    # Pain+
    if "painOther" in atkSkills:
        atkPostCombatEffs[2].append(("damage", atkSkills["painOther"], "foes_allies", "within_2_spaces_foe"))

    if "painOther" in defSkills:
        defPostCombatEffs[2].append(("damage", defSkills["painOther"], "foes_allies", "within_2_spaces_foe"))

    # Fear
    if "fear" in atkSkills: atkPostCombatEffs[2].append(("debuff_atk", atkSkills["fear"], "foe", "one"))
    if "fear" in defSkills: defPostCombatEffs[2].append(("debuff_atk", defSkills["fear"], "foe", "one"))

    # Fear+
    if "disperseFear" in atkSkills: atkPostCombatEffs[2].append(
        ("debuff_atk", atkSkills["disperseFear"], "foes_allies", "within_2_spaces_foe"))
    if "disperseFear" in defSkills: defPostCombatEffs[2].append(
        ("debuff_atk", defSkills["disperseFear"], "foes_allies", "within_2_spaces_foe"))

    # Slow
    if "slow" in atkSkills: atkPostCombatEffs[2].append(("debuff_spd", atkSkills["slow"], "foe", "one"))
    if "slow" in defSkills: defPostCombatEffs[2].append(("debuff_spd", defSkills["slow"], "foe", "one"))

    # Slow+
    if "disperseSlow" in atkSkills: atkPostCombatEffs[2].append(
        ("debuff_spd", atkSkills["disperseSlow"], "foes_allies", "within_2_spaces_foe"))
    if "disperseSlow" in defSkills: defPostCombatEffs[2].append(
        ("debuff_spd", defSkills["disperseSlow"], "foes_allies", "within_2_spaces_foe"))

    # Gravity
    if "gravity" in atkSkills: atkPostCombatEffs[2].append(("status", Status.Gravity, "foe", "one"))
    if "gravity" in defSkills: defPostCombatEffs[2].append(("status", Status.Gravity, "foe", "one"))

    if "disperseGravity" in atkSkills: atkPostCombatEffs[2].append(("status", Status.Gravity, "foe_and_foes_allies", "within_1_spaces_foe"))
    if "disperseGravity" in defSkills: defPostCombatEffs[2].append(("status", Status.Gravity, "foe_and_foes_allies", "within_1_spaces_foe"))

    # Panic
    if "panic" in atkSkills: atkPostCombatEffs[2].append(("status", Status.Panic, "foe", "one"))
    if "panic" in defSkills: defPostCombatEffs[2].append(("status", Status.Panic, "foe", "one"))

    if "dispersePanic" in atkSkills: atkPostCombatEffs[2].append(("status", Status.Panic, "foe_and_foes_allies", "within_2_spaces_foe"))
    if "dispersePanic" in defSkills: defPostCombatEffs[2].append(("status", Status.Panic, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Absorb+
    if "disperseAbsorb" in atkSkills:
        atkPostCombatEffs[2].append(("heal", atkSkills["disperseAbsorb"], "allies", "within_2_spaces_self"))
    if "disperseAbsorb" in defSkills:
        defPostCombatEffs[2].append(("heal", defSkills["disperseAbsorb"], "allies", "within_2_spaces_self"))

    # Flash/Candlelight
    if "flash" in atkSkills:
        atkPostCombatEffs[2].append(("status", Status.Flash, "foe", "one"))
    if "flash" in defSkills:
        defPostCombatEffs[2].append(("status", Status.Flash, "foe", "one"))

    if "disperseFlash" in atkSkills:
        atkPostCombatEffs[2].append(("status", Status.Flash, "foe_and_foes_allies", "within_2_spaces_foe"))
    if "disperseFlash" in defSkills:
        defPostCombatEffs[2].append(("status", Status.Flash, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Trilemma
    if "trilemma" in atkSkills:
        atkPostCombatEffs[2].append(("status", Status.TriangleAdept, "foe", "one"))
    if "trilemma" in defSkills:
        defPostCombatEffs[2].append(("status", Status.TriangleAdept, "foe", "one"))

    if "disperseTrilemma" in atkSkills:
        atkPostCombatEffs[2].append(("status", Status.TriangleAdept, "foe_and_foes_allies", "within_2_spaces_foe"))
    if "disperseTrilemma" in defSkills:
        defPostCombatEffs[2].append(("status", Status.TriangleAdept, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Witchy Wand
    if "spReset" in atkSkills:
        atkPostCombatEffs[2].append(("sp_reset", 99, "foe", "one"))
        atkPostCombatEffs[2].append(("status", Status.Guard, "foe", "one"))
    if "spReset" in defSkills:
        defPostCombatEffs[2].append(("sp_reset", 99, "foe", "one"))
        defPostCombatEffs[2].append(("status", Status.Guard, "foe", "one"))

    if "disperseSpReset" in atkSkills:
        atkPostCombatEffs[2].append(("sp_reset", 99, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[2].append(("status", Status.Guard, "foe_and_foes_allies", "within_2_spaces_foe"))
    if "disperseSpReset" in defSkills:
        defPostCombatEffs[2].append(("sp_reset", 99, "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[2].append(("status", Status.Guard, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Incurable
    if "incurable" in atkSkills:
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.DeepWounds, "foe", "one"))
    if "incurable" in defSkills:
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.DeepWounds, "foe", "one"))

    if "disperseIncurable" in atkSkills:
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.DeepWounds, "foe_and_foes_allies", "within_2_spaces_foe"))
    if "disperseIncurable" in defSkills:
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.DeepWounds, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Triangle Adept
    if "triAdept" in atkSkills: atkr.triangle_adept_level = atkSkills["triAdept"] * 0.05 + 0.05
    if "triAdeptW" in atkSkills: atkr.triangle_adept_level = 0.20
    if Status.TriangleAdept in attacker.statusNeg: atkr.triangle_adept_level = 0.20
    if "azuraTriangle" in atkSkills and atkHPGreaterEqual25Percent: atkr.triangle_adept_level = 0.20

    if "triAdept" in defSkills: defr.triangle_adept_level = defSkills["triAdept"] * 0.05 + 0.05
    if "triAdeptW" in defSkills: defr.triangle_adept_level = 0.20
    if Status.TriangleAdept in defender.statusNeg: defr.triangle_adept_level = 0.20
    if "azuraTriangle" in defSkills and defHPGreaterEqual25Percent: defr.triangle_adept_level = 0.20

    # Cancel Affinity Skill
    # For all levels (not status), self TA effects are neutralized
    # For Lv1, foe TA effects are neutralized
    # For Lv2, foe TA effects are neutralized iff foe has Wpn advantage
    # For Lv3, foe TA effects are reversed iff foe has Wpn advantage
    # For Status, foe TA effects are reversef iff for has Wpn advantage
    if "cancelTA" in atkSkills: atkr.cancel_affinity_level = atkSkills["cancelTA"]
    if "cancelTA" in defSkills: defr.cancel_affinity_level = defSkills["cancelTA"]

    # Owl Tome
    if "owlBoost" in atkSkills:
        atkCombatBuffs = [x + 2 * len(atkAdjacentToAlly) for x in atkCombatBuffs]

    if "owlBoost" in defSkills:
        defCombatBuffs = [x + 2 * len(defAdjacentToAlly) for x in defCombatBuffs]

    # Fox Tome
    if "foxPenalty" in atkSkills:
        defCombatBuffs = [x - 4 for x in defCombatBuffs]

    # Brave, Attack Twice, the one and only
    if "BraveAW" in atkSkills or "BraveAS" in atkSkills or "BraveBW" in atkSkills:
        atkr.brave = True

    # Brave weapons for only enemy phase
    if "BraveDW" in defSkills or "BraveBW" in defSkills:
        defr.brave = True

    if "swordBreak" in atkSkills and defender.wpnType == "Sword" and atkHPCur / atkStats[HP] > 1.1 - (atkSkills["swordBreak"] * 0.2): atkr.follow_ups_skill += 1; defr.follow_up_denials -= 1
    if "lanceBreak" in atkSkills and defender.wpnType == "Lance" and atkHPCur / atkStats[HP] > 1.1 - (atkSkills["lanceBreak"] * 0.2): atkr.follow_ups_skill += 1; defr.follow_up_denials -= 1
    if "axeBreak" in atkSkills and defender.wpnType == "Axe" and atkHPCur / atkStats[HP] > 1.1 - (atkSkills["axeBreak"] * 0.2): atkr.follow_ups_skill += 1; defr.follow_up_denials -= 1
    if "rtomeBreak" in atkSkills and defender.wpnType == "RTome" and atkHPCur / atkStats[HP] > 1.1 - (atkSkills["rtomeBreak"] * 0.2): atkr.follow_ups_skill += 1; defr.follow_up_denials -= 1
    if "btomeBreak" in atkSkills and defender.wpnType == "BTome" and atkHPCur / atkStats[HP] > 1.1 - (atkSkills["btomeBreak"] * 0.2): atkr.follow_ups_skill += 1; defr.follow_up_denials -= 1
    if "gtomeBreak" in atkSkills and defender.wpnType == "GTome" and atkHPCur / atkStats[HP] > 1.1 - (atkSkills["gtomeBreak"] * 0.2): atkr.follow_ups_skill += 1; defr.follow_up_denials -= 1
    if "cBowBreak" in atkSkills and defender.wpnType == "CBow" and atkHPCur / atkStats[HP] > 1.1 - (atkSkills["cBowBreak"] * 0.2): atkr.follow_ups_skill += 1; defr.follow_up_denials -= 1
    if "cDaggerBreak" in atkSkills and defender.wpnType == "CDagger" and atkHPCur / atkStats[HP] > 1.1 - (atkSkills["cDaggerBreak"] * 0.2): atkr.follow_ups_skill += 1; defr.follow_up_denials -= 1

    if "swordBreak" in defSkills and defender.wpnType == "Sword" and defHPCur / defStats[HP] > 1.1 - (defSkills["swordBreak"] * 0.2): defr.follow_ups_skill += 1; atkr.follow_up_denials -= 1
    if "lanceBreak" in defSkills and defender.wpnType == "Lance" and defHPCur / defStats[HP] > 1.1 - (defSkills["lanceBreak"] * 0.2): defr.follow_ups_skill += 1; atkr.follow_up_denials -= 1
    if "axeBreak" in defSkills and defender.wpnType == "Axe" and defHPCur / defStats[HP] > 1.1 - (defSkills["axeBreak"] * 0.2): defr.follow_ups_skill += 1; atkr.follow_up_denials -= 1
    if "rtomeBreak" in defSkills and defender.wpnType == "RTome" and defHPCur / defStats[HP] > 1.1 - (defSkills["rtomeBreak"] * 0.2): defr.follow_ups_skill += 1; atkr.follow_up_denials -= 1
    if "btomeBreak" in defSkills and defender.wpnType == "BTome" and defHPCur / defStats[HP] > 1.1 - (defSkills["btomeBreak"] * 0.2): defr.follow_ups_skill += 1; atkr.follow_up_denials -= 1
    if "gtomeBreak" in defSkills and defender.wpnType == "GTome" and defHPCur / defStats[HP] > 1.1 - (defSkills["gtomeBreak"] * 0.2): defr.follow_ups_skill += 1; atkr.follow_up_denials -= 1
    if "cBowBreak" in defSkills and defender.wpnType == "CBow" and defHPCur / defStats[HP] > 1.1 - (defSkills["cBowBreak"] * 0.2): defr.follow_ups_skill += 1; atkr.follow_up_denials -= 1
    if "cDaggerBreak" in defSkills and defender.wpnType == "CDagger" and defHPCur / defStats[HP] > 1.1 - (defSkills["cDaggerBreak"] * 0.2): defr.follow_ups_skill += 1; atkr.follow_up_denials -= 1

    if "cDaggerBreakW" in atkSkills and defender.wpnType == "CDagger":
        atkr.follow_ups_skill += 1
        defr.follow_up_denials -= 1
    if "cDaggerBreakW" in defSkills and attacker.wpnType == "CDagger":
        defr.follow_ups_skill += 1
        atkr.follow_up_denials -= 1

    # Dull Ranged (Skill)
    if "dullRanged" in atkSkills and defender.wpnType in RANGED_WEAPONS and atkHPCur / atkStats[HP] > 1.5 - 0.5 * atkSkills["dullRanged"]:
        defBonusesNeutralized = [True] * 5

    if "dullRanged" in defSkills and attacker.wpnType in RANGED_WEAPONS and defHPCur / defStats[HP] > 1.5 - 0.5 * defSkills["dullRanged"]:
        atkBonusesNeutralized = [True] * 5

    # Dull Close (Skill)
    if "dullClose" in atkSkills and defender.wpnType in MELEE_WEAPONS and atkHPCur / atkStats[HP] > 1.5 - 0.5 * atkSkills["dullClose"]:
        defBonusesNeutralized = [True] * 5

    if "dullClose" in defSkills and attacker.wpnType in MELEE_WEAPONS and defHPCur / defStats[HP] > 1.5 - 0.5 * defSkills["dullClose"]:
        atkBonusesNeutralized = [True] * 5

    # Dull Ranged (In Weapons)
    if "dullRangedW" in atkSkills and defender.wpnType in RANGED_WEAPONS: defBonusesNeutralized = [True] * 5
    if "dullRangedW" in defSkills and attacker.wpnType in RANGED_WEAPONS: atkBonusesNeutralized = [True] * 5

    # Dull Close (In Weapons)
    if "dullCloseW" in atkSkills and defender.wpnType in MELEE_WEAPONS: defBonusesNeutralized = [True] * 5
    if "dullCloseW" in defSkills and attacker.wpnType in MELEE_WEAPONS: atkBonusesNeutralized = [True] * 5

    # Atk/Res Detect
    if "dullAtkRes_f" in atkSkills:
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[RES] = True

    if "dullAtkRes_f" in defSkills:
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[RES] = True

    # Spd/Def Detect
    if "dullSpdDef_f" in atkSkills:
        atkBonusesNeutralized[SPD] = True
        atkBonusesNeutralized[DEF] = True

    if "dullSpdDef_f" in defSkills:
        defBonusesNeutralized[SPD] = True
        defBonusesNeutralized[DEF] = True

    # Called to Serve
    if "trueAllHits" in atkSkills: atkr.true_all_hits += atkSkills["trueAllHits"]
    if "trueAllHits" in defSkills: defr.true_all_hits += defSkills["trueAllHits"]

    if "calledToServe" in atkSkills: atkr.true_all_hits += min(5 * len([ally for ally in atkAllAllies if Status.NullBonuses in ally.statusPos]), 15)
    if "calledToServe" in defSkills: defr.true_all_hits += min(5 * len([ally for ally in defAllAllies if Status.NullBonuses in ally.statusPos]), 15)

    # True damage on specials (not treated as special damage, not reduced by Marth ring)
    if "spDamageAdd" in atkSkills: atkr.true_sp += atkSkills["spDamageAdd"]
    if "spDamageAdd" in defSkills: defr.true_sp += defSkills["spDamageAdd"]

    # Healing on every hit
    if "allHitHeal" in atkSkills: atkr.all_hits_heal += atkSkills['allHitHeal']
    if "allHitHeal" in defSkills: defr.all_hits_heal += defSkills['allHitHeal']

    if "firesweep" in atkSkills or "firesweep" in defSkills: cannotCounter = True
    if Status.Flash in defender.statusNeg: cannotCounter = True

    # Iron Dagger/Steel Dagger/Silver Dagger(+)
    if "dagger_single" in atkSkills:
        atkPostCombatEffs[2].append(("debuff_def", atkSkills["dagger_single"], "foe", "one"))
        atkPostCombatEffs[2].append(("debuff_res", atkSkills["dagger_single"], "foe", "one"))

    if "dagger_single" in defSkills:
        defPostCombatEffs[2].append(("debuff_def", defSkills["dagger_single"], "foe", "one"))
        defPostCombatEffs[2].append(("debuff_res", defSkills["dagger_single"], "foe", "one"))

    # Dagger 7 (or other magnitudes)
    if "dagger" in atkSkills:
        atkPostCombatEffs[2].append(("debuff_def", atkSkills["dagger"], "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[2].append(("debuff_res", atkSkills["dagger"], "foe_and_foes_allies", "within_2_spaces_foe"))

    if "dagger" in defSkills:
        defPostCombatEffs[2].append(("debuff_def", defSkills["dagger"], "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[2].append(("debuff_res", defSkills["dagger"], "foe_and_foes_allies", "within_2_spaces_foe"))

    # Rogue Dagger
    if "rogue_boost_single" in atkSkills:
        atkPostCombatEffs[2].append(("buff_def", atkSkills["rogue_boost_single"], "self", "one"))
        atkPostCombatEffs[2].append(("buff_res", atkSkills["rogue_boost_single"], "self", "one"))

    if "rogue_boost_single" in defSkills:
        defPostCombatEffs[2].append(("buff_def", defSkills["rogue_boost_single"], "self", "one"))
        defPostCombatEffs[2].append(("buff_res", defSkills["rogue_boost_single"], "self", "one"))

    if "rogue_boost" in atkSkills:
        atkPostCombatEffs[2].append(("buff_def", atkSkills["rogue_boost"], "self_and_allies", "within_2_spaces_self"))
        atkPostCombatEffs[2].append(("buff_res", atkSkills["rogue_boost"], "self_and_allies", "within_2_spaces_self"))

    if "rogue_boost" in defSkills:
        defPostCombatEffs[2].append(("buff_def", defSkills["rogue_boost"], "self_and_allies", "within_2_spaces_self"))
        defPostCombatEffs[2].append(("buff_res", defSkills["rogue_boost"], "self_and_allies", "within_2_spaces_self"))

    # Poison Dagger

    if "poison_dagger" in atkSkills and defender.move == 0:
        atkPostCombatEffs[2].append(("debuff_def", atkSkills["poison_dagger"], "foe", "one"))
        atkPostCombatEffs[2].append(("debuff_res", atkSkills["poison_dagger"], "foe", "one"))

    if "poison_dagger" in defSkills and attacker.move == 0:
        defPostCombatEffs[2].append(("debuff_def", defSkills["poison_dagger"], "foe", "one"))
        defPostCombatEffs[2].append(("debuff_res", defSkills["poison_dagger"], "foe", "one"))

    # Smoke Dagger
    if "smoke_others" in atkSkills:
        atkPostCombatEffs[2].append(("debuff_def", atkSkills["smoke_others"], "foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[2].append(("debuff_res", atkSkills["smoke_others"], "foes_allies", "within_2_spaces_foe"))

    if "smoke_others" in defSkills:
        defPostCombatEffs[2].append(("debuff_def", defSkills["smoke_others"], "foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[2].append(("debuff_res", defSkills["smoke_others"], "foes_allies", "within_2_spaces_foe"))

    if "spectrum_smoke" in atkSkills:
        atkPostCombatEffs[2].append(
            ("debuff_atk", atkSkills["spectrum_smoke"], "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[2].append(
            ("debuff_spd", atkSkills["spectrum_smoke"], "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[2].append(
            ("debuff_def", atkSkills["spectrum_smoke"], "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[2].append(
            ("debuff_res", atkSkills["spectrum_smoke"], "foe_and_foes_allies", "within_2_spaces_foe"))

    if "spectrum_smoke" in defSkills:
        defPostCombatEffs[2].append(
            ("debuff_atk", defSkills["spectrum_smoke"], "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[2].append(
            ("debuff_spd", defSkills["spectrum_smoke"], "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[2].append(
            ("debuff_def", defSkills["spectrum_smoke"], "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[2].append(
            ("debuff_res", defSkills["spectrum_smoke"], "foe_and_foes_allies", "within_2_spaces_foe"))

    # Kitty Paddle
    if "dagger_magic" in atkSkills and defender.wpnType in TOME_WEAPONS:
        atkPostCombatEffs[2].append(
            ("debuff_def", atkSkills["dagger_magic"], "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[2].append(
            ("debuff_res", atkSkills["dagger_magic"], "foe_and_foes_allies", "within_2_spaces_foe"))

    if "dagger_magic" in defSkills and attacker.wpnType in TOME_WEAPONS:
        defPostCombatEffs[2].append(
            ("debuff_def", defSkills["dagger_magic"], "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[2].append(
            ("debuff_res", defSkills["dagger_magic"], "foe_and_foes_allies", "within_2_spaces_foe"))

    seals = [("seal_atk", "sealAtk"), ("seal_spd", "sealSpd"), ("seal_def", "sealDef"), ("seal_res", "sealRes"),
             ("seal_atk", "sealAtkSe"), ("seal_spd", "sealSpdSe"), ("seal_def", "sealDefSe"), ("seal_res", "sealResSe")]

    for seal_name, skill_key in seals:
        if skill_key in atkSkills: atkPostCombatEffs[0].append((seal_name, atkSkills[skill_key], "foe", "one"))
        if skill_key in defSkills: defPostCombatEffs[0].append((seal_name, defSkills[skill_key], "foe", "one"))

    # Hardy Bearing
    if "hardyBearing" in atkSkills:
        atkr.hardy_bearing = True
        defr.hardy_bearing = atkHPCur / atkStats[HP] >= 1.5 - (atkSkills["hardyBearing"] * .5)

    if "hardyBearing" in defSkills:
        defr.hardy_bearing = True
        atkr.hardy_bearing = defHPCur / defStats[HP] >= 1.5 - (defSkills["hardyBearing"] * .5)

    # Deflect Melee
    if "deflectMelee" in atkSkills and defender.wpnType in ["Sword", "Lance", "Axe"]: atkr.DR_consec_strikes_NSP.append(atkSkills["deflectMelee"])
    if "deflectMelee" in defSkills and attacker.wpnType in ["Sword", "Lance", "Axe"]: defr.DR_consec_strikes_NSP.append(defSkills["deflectMelee"])

    # Deflect Missile
    if "deflectMissile" in atkSkills and defender.wpnType in BOW_WEAPONS + DAGGER_WEAPONS: atkr.DR_consec_strikes_NSP.append(atkSkills["deflectMissile"])
    if "deflectMissile" in defSkills and attacker.wpnType in BOW_WEAPONS + DAGGER_WEAPONS: defr.DR_consec_strikes_NSP.append(defSkills["deflectMissile"])

    # Deflect Magic
    if "deflectMagic" in atkSkills and defender.wpnType in TOME_WEAPONS: atkr.DR_consec_strikes_NSP.append(atkSkills["deflectMagic"])
    if "deflectMagic" in defSkills and attacker.wpnType in TOME_WEAPONS: defr.DR_consec_strikes_NSP.append(defSkills["deflectMagic"])

    # Wrathful Staff
    if "wrathful" in atkSkills and atkHPCur / atkStats[HP] >= 1.5 - 0.5 * atkSkills["wrathful"]:
        atkr.wrathful_staff = True

    if "wrathful" in defSkills and defHPCur / defStats[HP] >= 1.5 - 0.5 * defSkills["wrathful"]:
        defr.wrathful_staff = True

    if "wrathfulSe" in atkSkills and atkHPCur / atkStats[HP] >= 1.5 - 0.5 * atkSkills["wrathfulSe"]:
        atkr.wrathful_staff = True

    if "wrathfulSe" in defSkills and defHPCur / defStats[HP] >= 1.5 - 0.5 * defSkills["wrathfulSe"]:
        defr.wrathful_staff = True

    if "poeticJustice" in atkSkills:
        defCombatBuffs[ATK] -= 4
        atkr.true_stat_damages_from_foe.append((ATK, 15))

    if "poeticJustice" in defSkills:
        atkCombatBuffs[ATK] -= 4
        defr.true_stat_damages_from_foe.append((ATK, 15))

    # Dazzling Staff
    if "dazzling" in atkSkills and atkHPCur / atkStats[HP] >= 1.5 - 0.5 * atkSkills["dazzling"]:
        cannotCounter = True

    if "dazzlingSe" in atkSkills and atkHPCur / atkStats[HP] >= 1.5 - 0.5 * atkSkills["dazzlingSe"]:
        cannotCounter = True

    # FIGHTER SKILLS
    if "wary_fighter" in atkSkills and atkHPCur / atkStats[HP] >= 1.1 - 0.2 * atkSkills["wary_fighter"]:
        atkr.follow_up_denials -= 1
        defr.follow_up_denials -= 1

    if "wary_fighter" in defSkills and defHPCur / defStats[HP] >= 1.1 - 0.2 * defSkills["wary_fighter"]:
        atkr.follow_up_denials -= 1
        defr.follow_up_denials -= 1

    if ("uncanny_fighter" in atkSkills or "canny_fighter" in atkSkills) and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 4

        if "uncanny_fighter" in atkSkills:
            defCombatBuffs[DEF] -= 4
        else:
            defCombatBuffs[RES] -= 4

        atkr.follow_up_denials -= 1
        defr.follow_up_denials -= 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))
        atkr.DR_second_strikes_NSP.append(40)

    if ("uncanny_fighter" in defSkills or "canny_fighter" in defSkills) and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 4

        if "uncanny_fighter" in defSkills:
            atkCombatBuffs[DEF] -= 4
        else:
            atkCombatBuffs[RES] -= 4

        atkr.follow_up_denials -= 1
        defr.follow_up_denials -= 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))
        defr.DR_second_strikes_NSP.append(40)

    if "bold_fighter" in atkSkills and atkHPCur / atkStats[HP] >= 1.5 - 0.5 * atkSkills["bold_fighter"]:
        atkr.follow_ups_skill += 1
        atkr.spGainOnAtk += 1

    if "bold_fighterSe" in atkSkills and atkHPCur / atkStats[HP] >= 1.5 - 0.5 * atkSkills["bold_fighterSe"]:
        atkr.follow_ups_skill += 1
        atkr.spGainOnAtk += 1

    if "assault_fighter" in atkSkills:
        defCombatBuffs[ATK] -= 4
        defCombatBuffs[DEF] -= 4
        atkr.true_stat_damages.append((DEF, 20))
        atkr.TDR_stats.append((DEF, 20))
        atkr.follow_ups_skill += 1
        atkr.damage_reduction_reduction.append(50)

    if "assault_fighter" in defSkills and defAllyWithin3Spaces:
        atkCombatBuffs[ATK] -= 4
        atkCombatBuffs[DEF] -= 4
        defr.true_stat_damages.append((DEF, 20))
        defr.TDR_stats.append((DEF, 20))
        defr.follow_ups_skill += 1
        defr.damage_reduction_reduction.append(50)

    if "vengeful_fighter" in defSkills and defHPCur / defStats[HP] >= 1.1 - 0.2 * defSkills["vengeful_fighter"]:
        defr.follow_ups_skill += 1
        defr.spGainOnAtk += 1

    if "vengeful_fighter_4" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 4
        atkr.follow_ups_skill += 1
        defr.follow_up_denials -= 1
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "counter_fighter" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5
        atkr.true_stat_damages.append((ATK, 15))
        atkr.TDR_stats.append((ATK, 15))
        atkr.all_hits_heal += 7

        if atkSpTriggeredByAttack:
            atkr.sp_jump_foe_first += 2

    if "counter_fighter" in defSkills:
        atkCombatBuffs[ATK] -= 5
        defr.true_stat_damages.append((ATK, 15))
        defr.TDR_stats.append((ATK, 15))
        defr.all_hits_heal += 7

        if defSpTriggeredByAttack:
            defr.sp_jump_foe_first += 2

    if "crafty_fighter" in defSkills and defHPCur / defStats[HP] >= 1.0 - 0.25 * defSkills["crafty_fighter"]:
        defr.follow_ups_skill += 1
        defr.spLossWhenAtkd -= 1
        defr.spLossOnAtk -= 1

    if "slick_fighter" in defSkills and defHPCur / defStats[HP] >= 1.0 - 0.25 * defSkills["slick_fighter"]:
        defr.follow_ups_skill += 1
        defPenaltiesNeutralized = [True] * 5

    if "slick_fighterSe" in defSkills and defHPCur / defStats[HP] >= 1.0 - 0.25 * defSkills["slick_fighterSe"]:
        defr.follow_ups_skill += 1
        defPenaltiesNeutralized = [True] * 5

    if "slick_fighter4" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5
        atkr.true_stat_damages.append((DEF, 20))
        atkr.TDR_stats.append((DEF, 20))
        atkr.follow_ups_skill += 1
        atkPenaltiesNeutralized = [True] * 5

    if "slick_fighter4" in defSkills:
        atkCombatBuffs[ATK] -= 5
        defr.true_stat_damages.append((DEF, 20))
        defr.TDR_stats.append((DEF, 20))
        defr.follow_ups_skill += 1
        defPenaltiesNeutralized = [True] * 5

    if "wily_fighter" in defSkills and defHPCur / defStats[HP] >= 1.0 - 0.25 * defSkills["wily_fighter"]:
        defr.follow_ups_skill += 1
        atkBonusesNeutralized = [True] * 5

    if "wily_fighterSe" in defSkills and defHPCur / defStats[HP] >= 1.0 - 0.25 * defSkills["wily_fighterSe"]:
        defr.follow_ups_skill += 1
        atkBonusesNeutralized = [True] * 5

    if "wily_fighter4" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5
        atkr.true_stat_damages.append((DEF, 20))
        atkr.TDR_stats.append((DEF, 20))
        atkr.follow_ups_skill += 1
        defBonusesNeutralized = [True] * 5

    if "wily_fighter4" in defSkills:
        atkCombatBuffs[ATK] -= 5
        defr.true_stat_damages.append((DEF, 20))
        defr.TDR_stats.append((DEF, 20))
        defr.follow_ups_skill += 1
        atkBonusesNeutralized = [True] * 5

    if "special_fighter" in atkSkills and atkHPCur / atkStats[HP] >= 1.1 - 0.2 * atkSkills["special_fighter"]:
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        defr.spLossWhenAtkd -= 1
        defr.spLossOnAtk -= 1

    if "special_fighter" in defSkills and defHPCur / defStats[HP] >= 1.1 - 0.2 * defSkills["special_fighter"]:
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        atkr.spLossWhenAtkd -= 1
        atkr.spLossOnAtk -= 1

    if "special_fighterSe" in atkSkills and atkHPCur / atkStats[HP] >= 1.1 - 0.2 * atkSkills["special_fighterSe"]:
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        defr.spLossWhenAtkd -= 1
        defr.spLossOnAtk -= 1

    if "special_fighterSe" in defSkills and defHPCur / defStats[HP] >= 1.1 - 0.2 * defSkills["special_fighterSe"]:
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        atkr.spLossWhenAtkd -= 1
        atkr.spLossOnAtk -= 1

    if "special_fighter_4" in atkSkills and atkHPCur / atkStats[HP] >= 0.40:
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        defr.spLossWhenAtkd -= 1
        defr.spLossOnAtk -= 1
        atkr.deep_wounds_allowance.append(50)

        if "healSelf" in atkSkills:
            atkSkills["healSelf"] += 30
        else:
            atkSkills["healSelf"] = 30

    if "special_fighter_4" in defSkills and defHPCur / defStats[HP] >= 0.40:
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        atkr.spLossWhenAtkd -= 1
        atkr.spLossOnAtk -= 1
        defr.deep_wounds_allowance.append(50)

        if "healSelf" in defSkills:
            defSkills["healSelf"] += 30
        else:
            defSkills["healSelf"] = 30

    if "scowling_fighter" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 4
        defCombatBuffs[RES] -= 4
        atkr.true_stat_damages.append((RES, 20))
        atkr.TDR_stats.append((RES, 20))
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "scowling_fighter" in defSkills:
        atkCombatBuffs[ATK] -= 4
        atkCombatBuffs[RES] -= 4
        defr.true_stat_damages.append((RES, 20))
        defr.TDR_stats.append((RES, 20))
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    if "odd_fighter" in atkSkills and atkHPCur / atkStats[HP] >= 1.5 - 0.5 * atkSkills["odd_fighter"] and turn % 2 == 1:
        atkr.follow_ups_skill += 1
        defr.follow_up_denials -= 1

    if "odd_fighter" in defSkills and defHPCur / defStats[HP] >= 1.5 - 0.5 * defSkills["odd_fighter"] and turn % 2 == 1:
        defr.follow_ups_skill += 1
        atkr.follow_up_denials -= 1

    if "even_fighter" in atkSkills and atkHPCur / atkStats[HP] >= 1.5 - 0.5 * atkSkills["odd_fighter"] and turn % 2 == 0:
        atkr.follow_ups_skill += 1
        defr.follow_up_denials -= 1

    if "even_fighter" in defSkills and defHPCur / defStats[HP] >= 1.5 - 0.5 * defSkills["odd_fighter"] and turn % 2 == 0:
        defr.follow_ups_skill += 1
        atkr.follow_up_denials -= 1

    if "daring_fighter" in atkSkills:
        atkr.offensive_NFU = True
        if atkHPCur / atkStats[HP] <= 0.2 + 0.2 * atkSkills["daring_fighter"]:
            atkr.self_desperation = True

    if "hardy_fighter" in atkSkills:
        atkr.defensive_NFU = True
        atkr.apply_def_sp_twice = True

        if atkSkills["hardy_fighter"] > 1:
            atkr.TDR_on_def_sp += 5

    if "hardy_fighter" in defSkills:
        defr.defensive_NFU = True
        defr.apply_def_sp_twice = True

        if defSkills["hardy_fighter"] > 1:
            defr.TDR_on_def_sp += 5

    if "shield_fighter" in atkSkills:
        atkr.apply_def_sp_twice = True
        atkr.TDR_on_def_sp += 7

        atkr.sp_jump_foe_first += 1
        atkr.sp_jump_foe_first_brave += 1
        atkr.sp_jump_foe_followup += 1

    if "shield_fighter" in defSkills:
        defr.apply_def_sp_twice = True
        defr.TDR_on_def_sp += 7

        defr.sp_jump_foe_first += 1
        defr.sp_jump_foe_first_brave += 1
        defr.sp_jump_foe_followup += 1

    # FLOW SKILLS
    if "flowRefresh" in atkSkills and atkHPCur / atkStats[HP] >= 1.5 - 0.5 * atkSkills["flowRefresh"]:
        atkr.offensive_NFU = True
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", max(1 + atkSkills["flowRefresh"] * 3, 5) , "self", "one"))

    if "flowRefreshSe" in atkSkills and atkHPCur / atkStats[HP] >= 1.5 - 0.5 * atkSkills["flowRefreshSe"]:
        atkr.offensive_NFU = True
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", max(1 + atkSkills["flowRefreshSe"] * 3, 5) , "self", "one"))

    if "flowRefresh4" in atkSkills:
        defCombatBuffs[SPD] -= 4
        defCombatBuffs[DEF] -= 4
        atkr.offensive_NFU = True
        atkr.DR_first_hit_NSP.append(40)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 10, "self", "one"))

    if "flowForce" in atkSkills and atkHPCur / atkStats[HP] >= 1.5 - 0.5 * atkSkills["flowForce"]:
        atkr.offensive_NFU = True
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[SPD] = True

    if "assaultForce" in atkSkills:
        defCombatBuffs[SPD] -= 4
        defCombatBuffs[DEF] -= 4
        atkPenaltiesNeutralized = [True] * 5
        atkr.damage_reduction_reduction.append(50)

    if "assaultForce" in defSkills and defAllyWithin2Spaces:
        atkCombatBuffs[SPD] -= 4
        atkCombatBuffs[DEF] -= 4
        defPenaltiesNeutralized = [True] * 5
        defr.damage_reduction_reduction.append(50)

    if "flowGuard" in atkSkills and atkHPCur / atkStats[HP] >= 1.5 - 0.5 * atkSkills["flowGuard"]:
        atkr.offensive_NFU = True
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "flowGuard4" in atkSkills:
        defCombatBuffs[SPD] -= 4
        defCombatBuffs[DEF] -= 4
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

        if defSpTriggeredByAttack:
            defr.sp_jump_first -= 1

    if "flowNTrace" in atkSkills and atkHPCur / atkStats[HP] >= 1.5 - 0.5 * atkSkills["flowNTrace"]:
        atkr.offensive_NFU = True

    if "flowDesp" in atkSkills:
        atkr.offensive_NFU = True

        if spaces_moved_by_atkr >= 2 or atkHPCur / atkStats[HP] <= 0.75:
            atkr.self_desperation = True

    # Disarm Trap 4
    if "disarmNFU" in atkSkills:
        atkr.offensive_NFU = True

    # Full Disarm
    if "fullDisarm" in atkSkills:
        defCombatBuffs[SPD] -= min((len(attacker.statusPos) + len(defender.statusNeg)) * 2 + 4, 12)
        defCombatBuffs[DEF] -= min((len(attacker.statusPos) + len(defender.statusNeg)) * 2 + 4, 12)
        atkr.offensive_tempo = True

    if "fullDisarm" in defSkills:
        atkCombatBuffs[SPD] -= min((len(defender.statusPos) + len(attacker.statusNeg)) * 2 + 4, 12)
        atkCombatBuffs[DEF] -= min((len(defender.statusPos) + len(attacker.statusNeg)) * 2 + 4, 12)
        defr.offensive_tempo = True

    # COMMON A SKILLS
    if "stanceGuard" in defSkills:
        atkr.spGainWhenAtkd -= 1
        atkr.spGainOnAtk -= 1

    if "breathCharge" in defSkills:
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Close/Distant Def.
    if "closeDef" in defSkills and attacker.wpnType in MELEE_WEAPONS:
        defCombatBuffs[DEF] += defSkills["closeDef"]
        defCombatBuffs[RES] += defSkills["closeDef"]

    if "distDef" in defSkills and attacker.wpnType in RANGED_WEAPONS:
        defCombatBuffs[DEF] += defSkills["distDef"]
        defCombatBuffs[RES] += defSkills["distDef"]

    # Close/Distant Guard
    if "closeGuard_f" in atkSkills and defender.wpnType in MELEE_WEAPONS:
        atkCombatBuffs[DEF] += atkSkills["closeGuard_f"]
        atkCombatBuffs[RES] += atkSkills["closeGuard_f"]

    if "closeGuard_f" in defSkills and attacker.wpnType in MELEE_WEAPONS:
        defCombatBuffs[DEF] += defSkills["closeGuard_f"]
        defCombatBuffs[RES] += defSkills["closeGuard_f"]

    if "distGuard_f" in atkSkills and defender.wpnType in RANGED_WEAPONS:
        atkCombatBuffs[DEF] += atkSkills["distGuard_f"]
        atkCombatBuffs[RES] += atkSkills["distGuard_f"]

    if "distGuard_f" in defSkills and attacker.wpnType in RANGED_WEAPONS:
        defCombatBuffs[DEF] += defSkills["distGuard_f"]
        defCombatBuffs[RES] += defSkills["distGuard_f"]

    # Joint Close Guard
    if "jointCloseGuard" in atkSkills and [ally for ally in atkAllyWithin2Spaces if ally.wpnType in MELEE_WEAPONS]:
        atkCombatBuffs[DEF] += 4
        atkCombatBuffs[RES] += 4

    if "jointCloseGuard" in defSkills and [ally for ally in defAllyWithin2Spaces if ally.wpnType in MELEE_WEAPONS]:
        defCombatBuffs[DEF] += 4
        defCombatBuffs[RES] += 4

    # Joint Dist. Guard
    if "jointDistGuard" in atkSkills and [ally for ally in atkAllyWithin2Spaces if ally.wpnType in RANGED_WEAPONS]:
        atkCombatBuffs[DEF] += 4
        atkCombatBuffs[RES] += 4

    if "jointDistGuard" in defSkills and [ally for ally in defAllyWithin2Spaces if ally.wpnType in RANGED_WEAPONS]:
        defCombatBuffs[DEF] += 4
        defCombatBuffs[RES] += 4

    # Barricade
    if "barricade_dull" in atkSkills:
        atkPenaltiesNeutralized[DEF] = True
        atkPenaltiesNeutralized[RES] = True

    if "barricade_dull" in defSkills:
        defPenaltiesNeutralized[DEF] = True
        defPenaltiesNeutralized[RES] = True

    if "DDpenalty" in defSkills and attacker.wpnType in RANGED_WEAPONS:
        atkBonusesNeutralized = [True] * 5

    if "CDpenalty" in defSkills and attacker.wpnType in MELEE_WEAPONS:
        atkBonusesNeutralized = [True] * 5

    # Amatsu (Base) - Say'ri
    if "amatsuDC" in defSkills and defHPGreaterEqual50Percent:
        ignore_range = True

    # Amatsu (Refine Base) - Say'ri
    if "sayriBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.TDR_first_strikes += 7

    if "sayriBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.TDR_first_strikes += 7
        ignore_range = True

    # Amatsu (Refine Eff) - Say'ri
    if "fairEnough" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.DR_first_strikes_NSP.append(40)
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "fairEnough" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.DR_first_strikes_NSP.append(40)
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Chon'sin Sprig - BR!Say'ri
    if "they put slaying on anything these days geez" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defCombatBuffs[SPD] -= max(0, min(trunc(0.25 * defStats[ATK]) - 8, 10))
        defCombatBuffs[DEF] -= max(0, min(trunc(0.25 * defStats[ATK]) - 8, 10))
        atkr.DR_first_hit_NSP.append(40)
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "they put slaying on anything these days geez" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkCombatBuffs[SPD] -= max(0, min(trunc(0.25 * atkStats[ATK]) - 8, 10))
        atkCombatBuffs[DEF] -= max(0, min(trunc(0.25 * atkStats[ATK]) - 8, 10))
        defr.DR_first_hit_NSP.append(40)
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Carnage Amatsu (Base) - Yen'fay
    if "yen'fayBoost" in atkSkills and not atkAdjacentToAlly:
        atkr.stat_scaling_DR.append((SPD, 40))

    if "yen'fayBoost" in defSkills and not defAdjacentToAlly:
        defr.stat_scaling_DR.append((SPD, 40))

    # Distant/Close Counter
    if "cCounter" in defSkills or "dCounter" in defSkills:
        ignore_range = True

    # Close Foil
    if "cFoil" in defSkills and attacker.wpnType in PHYSICAL_WEAPONS:
        ignore_range = True
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5

    # Distant Foil
    if "dFoil" in defSkills and attacker.wpnType in PHYSICAL_WEAPONS:
        ignore_range = True
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5

    # Close Ward
    if "cWard" in defSkills and attacker.wpnType in MAGICAL_WEAPONS:
        ignore_range = True
        defCombatBuffs[ATK] += 5
        defCombatBuffs[RES] += 5
        atkr.disable_foe_hexblade = True

    # Distant Ward
    if "dWard" in defSkills and attacker.wpnType in MAGICAL_WEAPONS:
        ignore_range = True
        defCombatBuffs[ATK] += 5
        defCombatBuffs[RES] += 5

    # Tier 4 DC Skills
    if "hahaAtk" in atkSkills and atkHPGreaterEqual25Percent: atkCombatBuffs[ATK] += 5
    if "hahaAtk" in defSkills and defHPGreaterEqual25Percent: defCombatBuffs[ATK] += 5

    if "hahaSpd" in atkSkills and atkHPGreaterEqual25Percent: atkCombatBuffs[SPD] += 5
    if "hahaSpd" in defSkills and defHPGreaterEqual25Percent: defCombatBuffs[SPD] += 5

    if "youch" in atkSkills and atkHPGreaterEqual25Percent: atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 5, "self", "one"))
    if "youch" in defSkills and defHPGreaterEqual25Percent: defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 5, "self", "one"))

    # Inscribed Tome (Refine Eff) - Boey
    if "closePhysCounter" in defSkills and attacker.wpnType in PHYSICAL_WEAPONS:
        ignore_range = True

    if "atkOnlyOtherDmg" in defSkills:
        defPostCombatEffs[2].append(("damage", defSkills["atkOnlyOtherDmg"], "foe", "one"))

    # Quick Riposte
    if "QRW" in defSkills and defHPCur / defStats[0] >= 1.0 - (defSkills["QRW"] * 0.1): defr.follow_ups_skill += 1
    if "QRS" in defSkills and defHPCur / defStats[0] >= 1.0 - (defSkills["QRS"] * 0.1): defr.follow_ups_skill += 1
    if "QRSe" in defSkills and defHPCur / defStats[0] >= 1.0 - (defSkills["QRSe"] * 0.1): defr.follow_ups_skill += 1

    if "QR4" in defSkills and defHPGreaterEqual25Percent:
        defr.DR_first_hit_NSP.append(25)
        defr.follow_ups_skill += 1

    # Desperation
    if "desperationW" in atkSkills and atkHPCur / atkStats[HP] <= 0.25 * atkSkills["desperationW"]:
        atkr.self_desperation = True

    if "desperationSk" in atkSkills and atkHPCur / atkStats[HP] <= 0.25 * atkSkills["desperationSk"]:
        atkr.self_desperation = True

    if "desperationSe" in atkSkills and atkHPCur / atkStats[HP] <= 0.25 * atkSkills["desperationSe"]:
        atkr.self_desperation = True

    # Desperation 4
    if "stupidDesp" in atkSkills and (not atkHPEqual100Percent or spaces_moved_by_atkr >= 2):
        atkr.self_desperation = True

    if "frenzy" in atkSkills and atkHPCur / atkStats[HP] <= -0.10 + 0.20 * atkSkills["frenzy"]:
        atkr.self_desperation = True

    if Status.Desperation in attacker.statusPos:
        atkr.self_desperation = True

    # Dive-Bomb
    if "dive_bomb" in atkSkills and atkHPCur / atkStats[HP] >= 1.1 - 0.1 * atkSkills["dive_bomb"] and defHPCur / defStats[HP] >= 1.1 - 0.1 * atkSkills["dive_bomb"]:
        atkr.self_desperation = True

    # Aerial Maneuvers
    if "aerialManeuvers" in atkSkills and atkHPGreaterEqual50Percent and defHPGreaterEqual50Percent:
        defCombatBuffs[SPD] -= 4
        defCombatBuffs[DEF] -= 4
        atkr.self_desperation = True

    if "aerialManeuvers" in defSkills and atkHPGreaterEqual50Percent and defHPGreaterEqual50Percent:
        atkCombatBuffs[SPD] -= 4
        atkCombatBuffs[DEF] -= 4

    # Null C-Disrupt
    if "nullCounterattack" in defSkills and defHPCur / defStats[0] <= 1.5 - 0.5 * defSkills["nullCounterattack"]:
        disableCannotCounter = True

    if "nullC4" in atkSkills:
        defCombatBuffs[ATK] -= 4
        defCombatBuffs[SPD] -= 4
        atkr.DR_first_hit_NSP.append(30)

    if "nullC4" in defSkills:
        disableCannotCounter = True
        atkCombatBuffs[ATK] -= 4
        atkCombatBuffs[DEF] -= 4
        defr.DR_first_hit_NSP.append(30)

    if "vantage" in defSkills and defHPCur / defStats[HP] <= 0.75 - (0.25 * (3 - defSkills["vantage"])):
        defr.vantage = True

    if "vantageW" in defSkills and defHPCur / defStats[HP] <= 0.75:
        defr.vantage = True

    if Status.Vantage in defender.statusNeg:
        defr.vantage = True

    # 5 damage reduction from Shield Pulse, etc.
    if "trueDefsvSp" in atkSkills:
        atkr.TDR_on_def_sp += 5

    if "trueDefsvSp" in defSkills:
        defr.TDR_on_def_sp += 5

    # Laguz Friend
    if "laguz_friend" in atkSkills:
        if attacker.specialMax >= 3 and atkSpTriggeredByAttack or attacker.getSpecialType() == "Defense":
            defr.damage_reduction_reduction.append(50)
            atkr.sp_jump_foe_first += 2

    if "laguz_friend" in defSkills:
        if defender.specialMax >= 3 and defSpTriggeredByAttack or defender.getSpecialType() == "Defense":
            atkr.damage_reduction_reduction.append(50)
            defr.sp_jump_foe_first += 2

    # Laguz Loyalty
    if "laguzLoyalty" in atkSkills:
        if attacker.specialMax >= 3 and atkSpTriggeredByAttack or attacker.getSpecialType() == "Defense":
            defr.damage_reduction_reduction.append(50)
            atkr.TDR_stats.append((SPD, 20))
            atkr.sp_jump_foe_first += 2

    if "laguzLoyalty" in defSkills:
        if attacker.specialMax >= 3 and defSpTriggeredByAttack or defender.getSpecialType() == "Defense":
            atkr.damage_reduction_reduction.append(50)
            defr.TDR_stats.append((SPD, 20))
            defr.sp_jump_foe_first += 2
            defr.outspeed_factor -= 10
            defr.true_all_hits += 7

    # Resonance
    if "resonance" in atkSkills:
        base_max_HP = atkStats[HP] - attacker.battle_stat_mods[HP]
        X = max(trunc(0.2 * (base_max_HP - 20)), 0)
        atkr.self_burn_damage += X

        atkr.resonance = atkSkills["resonance"]

    if "resonance" in defSkills:
        defr.resonance = defSkills["resonance"]

    # Momentum
    if "momentum" in atkSkills and spaces_moved_by_atkr > 0:
        atkr.follow_ups_skill += 1
        atkr.true_all_hits += min(spaces_moved_by_atkr * atkSkills["momentum"], 5 * atkSkills["momentum"])

        if atkSkills["momentum"] == 4:
            defCombatBuffs[ATK] -= 4
            defCombatBuffs[DEF] -= 4

    if "momentum" in defSkills and spaces_moved_by_atkr > 0:
        defr.follow_ups_skill += 1
        defr.true_all_hits += min(spaces_moved_by_atkr * defSkills["momentum"], 5 * defSkills["momentum"])

        if defSkills["momentum"] == 4:
            atkCombatBuffs[ATK] -= 4
            atkCombatBuffs[DEF] -= 4

    if "momentumCharge" in atkSkills and spaces_moved_by_atkr > 0 and attacker.getSpecialType() == "Offense":
        if spaces_moved_by_atkr >= 3:
            atkr.sp_jump_first += 2
        else:
            atkr.sp_jump_first += 1

    if "momentumCharge" in defSkills and spaces_moved_by_atkr > 0 and defender.getSpecialType() == "Offense":
        if spaces_moved_by_atkr >= 3:
            defr.sp_jump_first += 2
        else:
            defr.sp_jump_first += 1

    # Speedtaker
    if "speedtaker" in atkSkills:
        atkr.true_stat_damages.append((SPD, atkSkills["speedtaker"]))

        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("great_talent_spd", (atkSkills["speedtaker"] / 5, atkSkills["speedtaker"]), "self", "one"))

        if atkSkills["speedtaker"] == 20:
            atkr.offensive_tempo = True

    if "speedtaker" in defSkills:
        defr.true_stat_damages.append((SPD, defSkills["speedtaker"]))

        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("great_talent_spd", (defSkills["speedtaker"] / 5, defSkills["speedtaker"]), "self", "one"))

        if defSkills["speedtaker"] == 20:
            defr.offensive_tempo = True

    # Blue Skies
    if "blueSkies" in atkSkills:
        atkCombatBuffs[ATK] += 2 * atkSkills["blueSkies"]
        atkCombatBuffs[SPD] += 2 * atkSkills["blueSkies"]

        if atkSkills["blueSkies"] == 1:
            X = min(len(atkAllyWithin3RowsCols), 2)
        elif atkSkills["blueSkies"] == 2:
            X = min(len(atkAllyWithin3RowsCols) * 2, 4)
        elif atkSkills["blueSkies"] == 3:
            X = min(len(atkAllyWithin3RowsCols) * 2, 6)
        else:
            X = min(len(atkAllyWithin3RowsCols) * 2 + 2, 8)

        atkr.true_all_hits += X
        atkr.TDR_first_strikes += X

    if "blueSkies" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 2 * defSkills["blueSkies"]
        defCombatBuffs[SPD] += 2 * defSkills["blueSkies"]

        if defSkills["blueSkies"] == 1:
            X = min(len(defAllyWithin3RowsCols), 2)
        elif defSkills["blueSkies"] == 2:
            X = min(len(defAllyWithin3RowsCols) * 2, 4)
        elif defSkills["blueSkies"] == 3:
            X = min(len(defAllyWithin3RowsCols) * 2, 6)
        else:
            X = min(len(defAllyWithin3RowsCols) * 2 + 2, 8)

        defr.true_all_hits += X
        defr.TDR_first_strikes += X

    # Deadly Miasma
    if "deadlyMiasma" in atkSkills:
        defCombatBuffs = [x - 5 for x in defCombatBuffs]
        defBonusesNeutralized = [True] * 5

    # Breath of Life 4
    if "breath_of_life4" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[DEF] += 4
        atkr.deep_wounds_allowance.append(50)

    if "breath_of_life4" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[DEF] += 4
        defr.deep_wounds_allowance.append(50)

    if "breath_of_life4_f" in atkSkills:
        for i in range(0, atkSkills["breath_of_life4_f"]):
            atkCombatBuffs[DEF] += 4
            atkr.deep_wounds_allowance.append(50)

    if "breath_of_life4_f" in defSkills:
        for i in range(0, defSkills["breath_of_life4_f"]):
            defCombatBuffs[DEF] += 4
            defr.deep_wounds_allowance.append(50)

    # Far Trace Echo
    if "traceEchoDmg" in atkSkills:
        atkr.true_all_hits += 3

    if "traceEchoDmg" in defSkills:
        defr.true_all_hits += 3

    if "traceDmg" in atkSkills:
        atkr.true_all_hits += 7

    if "traceDmg" in defSkills:
        defr.true_all_hits += 7

    # DIVINE VEIN SKILLS

    atkTile = attacker.attacking_tile
    defTile = defender.tile

    # STONE
    if atkTile.divine_vein == DV_STONE and atkTile.divine_vein_turn >= 1 and atkTile.divine_vein_side == attacker.side:
        atkCombatBuffs[DEF] += 6
        atkCombatBuffs[RES] += 6
        atkr.TDR_on_foe_sp += 10

    if defTile.divine_vein == DV_STONE and defTile.divine_vein_turn >= 1 and defTile.divine_vein_side == defender.side:
        defCombatBuffs[DEF] += 6
        defCombatBuffs[RES] += 6
        defr.TDR_on_foe_sp += 10

    # FLAME
    if atkTile.divine_vein == DV_FLAME and atkTile.divine_vein_turn >= 1 and atkTile.divine_vein_side != attacker.side:
        atkr.self_burn_damage += 7

    if defTile.divine_vein == DV_FLAME and defTile.divine_vein_turn >= 1 and defTile.divine_vein_side != defender.side:
        defr.self_burn_damage += 7

    # GREEN
    if atkTile.divine_vein == DV_GREEN and atkTile.divine_vein_turn >= 1 and atkTile.divine_vein_side != attacker.side:
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    if defTile.divine_vein == DV_GREEN and defTile.divine_vein_turn >= 1 and defTile.divine_vein_side != defender.side:
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    # HAZE
    if atkTile.divine_vein == DV_HAZE and atkTile.divine_vein_turn >= 1 and atkTile.divine_vein_side != attacker.side:
        atkCombatBuffs = [x - 5 for x in atkCombatBuffs]
        atkBonusesNeutralized = [True] * 5

    if defTile.divine_vein == DV_HAZE and defTile.divine_vein_turn >= 1 and defTile.divine_vein_side != defender.side:
        defCombatBuffs = [x - 5 for x in defCombatBuffs]
        defBonusesNeutralized = [True] * 5

    # WATER
    if atkTile.divine_vein == DV_WATER and atkTile.divine_vein_turn >= 1 and atkTile.divine_vein_side != attacker.side:
        defr.damage_reduction_reduction.append(50)
        atkCombatBuffs[SPD] -= 5

    if defTile.divine_vein == DV_WATER and defTile.divine_vein_turn >= 1 and defTile.divine_vein_side != defender.side:
        atkr.damage_reduction_reduction.append(50)
        defCombatBuffs[SPD] -= 5

    # GROUP 2
    # Skills within this group can perform the following:
    # - Use stats at start of combat
    # - Use exact values of bonuses/penalties, or if skill uses [Bonus] or [Penalty] keywords
    # - Add combat buffs
    # Cannot perform the following:
    # - Use stats during combat
    # - Neutralize Bonuses/Penalties


    # exact value of buffs after buff neutralization
    atkNeutrBuffsStats = [0, 0, 0, 0, 0]
    defNeutrBuffsStats = [0, 0, 0, 0, 0]

    # exact value of buffs after debuff neutralization
    atkNeutrDebuffsStats = [0, 0, 0, 0, 0]
    defNeutrDebuffsStats = [0, 0, 0, 0, 0]

    # Values of each buff/debuff after neutralization
    for i in range(5):
        if AtkPanicFactor == 1:
            atkNeutrBuffsStats[i] += attacker.buffs[i] * int(not atkBonusesNeutralized[i])
        elif AtkPanicFactor == -1:
            atkNeutrDebuffsStats[i] += attacker.buffs[i] * -1 * int(not atkPenaltiesNeutralized[i])

        if DefPanicFactor == 1:
            defNeutrBuffsStats[i] += defender.buffs[i] * int(not defBonusesNeutralized[i])
        elif DefPanicFactor == -1:
            defNeutrDebuffsStats[i] += defender.buffs[i] * -1 * int(not defPenaltiesNeutralized[i])

        atkNeutrDebuffsStats[i] += attacker.debuffs[i] * int(not atkPenaltiesNeutralized[i])
        defNeutrDebuffsStats[i] += defender.debuffs[i] * int(not defPenaltiesNeutralized[i])

    # [Bonus] and [Penalty] keywords
    atkHasBonus = sum(atkNeutrBuffsStats) > 0 or bool(attacker.statusPos)
    atkHasPenalty = sum(atkNeutrDebuffsStats) < 0 or bool(attacker.statusNeg)

    defHasBonus = sum(defNeutrBuffsStats) > 0 or bool(defender.statusPos)
    defHasPenalty = sum(defNeutrDebuffsStats) < 0 or bool(defender.statusNeg)

    # Sabotage
    if Status.Sabotage in attacker.statusNeg:
        for i in range(1, 5):
            atkCombatBuffs[i] += min(atkNeutrDebuffsStats[i], min([ally.get_total_debuff(i) for ally in atkAllyWithin2Spaces], default=0))

    if Status.Sabotage in defender.statusNeg:
        for i in range(1, 5):
            defCombatBuffs[i] += min(defNeutrDebuffsStats[i], min([ally.get_total_debuff(i) for ally in defAllyWithin2Spaces], default=0))

    if Status.Dominance in attacker.statusPos: atkr.true_all_hits += abs(sum(defNeutrDebuffsStats))
    if Status.Dominance in defender.statusPos: defr.true_all_hits += abs(sum(atkNeutrDebuffsStats))

    if Status.Treachery in attacker.statusPos and Status.Ploy not in attacker.statusNeg: atkr.true_all_hits += abs(sum(atkNeutrBuffsStats))
    if Status.Treachery in defender.statusPos and Status.Ploy not in defender.statusNeg: defr.true_all_hits += abs(sum(defNeutrBuffsStats))

    if Status.DraconicHex in attacker.statusPos:
        for i in range(1, 5):
            defCombatBuffs[i] -= 5 + max(5 - defNeutrDebuffsStats[i], 0)

    if Status.DraconicHex in defender.statusPos:
        for i in range(1, 5):
            atkCombatBuffs[i] -= 5 + max(5 - atkNeutrDebuffsStats[i], 0)

    # Broadleaf Fan(+)
    if "dominance" in atkSkills:
        for i in range(1, 5):
            atkCombatBuffs[ATK] += defNeutrDebuffsStats[i]

    if "dominance" in defSkills:
        for i in range(1, 5):
            defCombatBuffs[ATK] += atkNeutrDebuffsStats[i]

    # Scallop Blade/Big-Catch Bow/Petal Parasol
    if "elibeSummerPenalty" in atkSkills and defHasPenalty:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

    if "elibeSummerPenalty" in defSkills and atkHasPenalty:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Blade Tomes
    if "bladeTome" in atkSkills:
        for i in range(1, 5): atkCombatBuffs[ATK] += atkNeutrBuffsStats[i]
    if "bladeTome" in defSkills:
        for i in range(1, 5): defCombatBuffs[ATK] += defNeutrBuffsStats[i]

    # Spirited Sword/Spear/Axe & Pledged Blade/Huge Fan
    if "spiritedBoost" in atkSkills and atkHasBonus:
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[DEF] += 4
        atkr.spGainWhenAtkd += 1

    if "spiritedBoost" in defSkills and defHasBonus:
        defCombatBuffs[ATK] += 4
        defCombatBuffs[DEF] += 4
        defr.spGainWhenAtkd += 1

    # Plegian Weapons
    if "plegianDebuff" in atkSkills and not atkAdjacentToAlly:
        defCombatBuffs[ATK] -= 5 - defNeutrDebuffsStats[ATK]
        defCombatBuffs[atkSkills["plegianDebuff"]] -= 5 - defNeutrDebuffsStats[atkSkills["plegianDebuff"]]

    if "plegianDebuff" in defSkills and not defAdjacentToAlly:
        atkCombatBuffs[ATK] -= 5 - atkNeutrDebuffsStats[ATK]
        atkCombatBuffs[defSkills["plegianDebuff"]] -= 5 - atkNeutrDebuffsStats[defSkills["plegianDebuff"]]

    # Bridal Orchid/Sunflower
    if "bridalBuffBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5 - atkNeutrBuffsStats[ATK]
        atkCombatBuffs[atkSkills["bridalBuffBoost"]] += 5 - atkNeutrBuffsStats[atkSkills["bridalBuffBoost"]]

    if "bridalBuffBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5 - defNeutrBuffsStats[ATK]
        defCombatBuffs[defSkills["bridalBuffBoost"]] += 5 - defNeutrBuffsStats[defSkills["bridalBuffBoost"]]

    # Defier's Sword/Lance/Axe
    # Victorfish/Sunflower Box
    if "defierBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[DEF] += 5 + defNeutrBuffsStats[DEF]
        defCombatBuffs[DEF] -= 5 - defNeutrBuffsStats[DEF]

    if "defierBoost" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[DEF] += 5 + atkNeutrBuffsStats[DEF]
        atkCombatBuffs[DEF] -= 5 - atkNeutrBuffsStats[DEF]

    # Peachy Parfait
    if "defierBoostRes" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs[RES] += 5 + defNeutrBuffsStats[RES]
        defCombatBuffs[RES] -= 5 - defNeutrBuffsStats[RES]

    if "defierBoostRes" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[RES] += 5 + atkNeutrBuffsStats[RES]
        atkCombatBuffs[RES] -= 5 - atkNeutrBuffsStats[RES]

    # Carrot-Tip Bow/Spear
    if "carrotPenaltyPunisher" in atkSkills and (defHPGreaterEqual75Percent or defHasPenalty):
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        atkr.true_first_hit += abs(sum(defNeutrDebuffsStats[ATK] + defNeutrDebuffsStats[DEF]))

    if "carrotPenaltyPunisher" in defSkills and (atkHPGreaterEqual75Percent or atkHasPenalty):
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        defr.true_first_hit += abs(sum(atkNeutrDebuffsStats[ATK] + atkNeutrDebuffsStats[DEF]))

    # Bridal Blade, Reversal Blade/Lance
    if "bridal2023" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

        for i in range(1, 5):
            defCombatBuffs[i] -= defNeutrBuffsStats[i] * 2

    if "bridal2023" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

        for i in range(1, 5):
            atkCombatBuffs[i] -= atkNeutrBuffsStats[i] * 2

    # Pumpkin Stem, Farmer's Tool, Doubler Sword/Lance/Bow
    if "doublerBoostRes" in atkSkills or "doublerBoost" in atkSkills:
        for i in range(1, 5):
            atkCombatBuffs[i] += 4 + max(atkNeutrBuffsStats[i], max([ally.get_total_buff(i) for ally in atkAllyWithin2Spaces], default=0))

    # Pumpkin Stem, Farmer's Tool, Doubler Sword/Lance/Bow
    if ("doublerBoostRes" in defSkills or "doublerBoost" in defSkills) and defAllyWithin2Spaces:
        for i in range(1, 5):
            defCombatBuffs[i] += 4 + max(defNeutrBuffsStats[i], max([ally.get_total_buff(i) for ally in defAllyWithin2Spaces], default=0))

    # Golden Yule Bow
    if "goldenYuleBow" in atkSkills and atkHPGreaterEqual25Percent:
        X = 3 if defHasPenalty else min(spaces_moved_by_atkr, 3)

        atkCombatBuffs = [x + 4 + X for x in atkCombatBuffs]
        atkr.sp_jump_first += X

    if "goldenYuleBow" in defSkills and defHPGreaterEqual25Percent:
        X = 3 if atkHasPenalty else min(spaces_moved_by_atkr, 3)

        defCombatBuffs = [x + 4 + X for x in defCombatBuffs]
        defr.sp_jump_first += X

    # Osseous Trident
    if "osseousBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        X = max(sum(atkNeutrBuffsStats), max([ally.get_bonus_total() for ally in atkAllyWithin2Spaces], default=0))
        atkr.true_all_hits += X
        atkr.TDR_all_hits += trunc(X * 0.50)

    if "osseousBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        X = max(sum(defNeutrBuffsStats), max([ally.get_bonus_total() for ally in defAllyWithin2Spaces], default=0))
        defr.true_all_hits += X
        defr.TDR_all_hits += trunc(X * 0.50)

    # Tier 4 Sabotage skills
    if "sabotageAtkDef" in atkSkills and atkStats[RES] + atkPhantomStats[RES] > defStats[RES] + defPhantomStats[RES]:
        defCombatBuffs[ATK] += -3 + min(defNeutrDebuffsStats[ATK], min([ally.get_total_debuff(ATK) for ally in defAllyWithin2Spaces], default=0))
        defCombatBuffs[DEF] += -3 + min(defNeutrDebuffsStats[DEF], min([ally.get_total_debuff(DEF) for ally in defAllyWithin2Spaces], default=0))

    if "sabotageAtkDef" in defSkills and defStats[RES] + defPhantomStats[RES] > atkStats[RES] + atkPhantomStats[RES]:
        atkCombatBuffs[ATK] += -3 + min(atkNeutrDebuffsStats[ATK], min([ally.get_total_debuff(ATK) for ally in atkAllyWithin2Spaces], default=0))
        atkCombatBuffs[DEF] += -3 + min(atkNeutrDebuffsStats[DEF], min([ally.get_total_debuff(DEF) for ally in atkAllyWithin2Spaces], default=0))

    if "sabotageAtkRes" in atkSkills and atkStats[RES] + atkPhantomStats[RES] > defStats[RES] + defPhantomStats[RES]:
        defCombatBuffs[ATK] += -3 + min(defNeutrDebuffsStats[ATK], min([ally.get_total_debuff(ATK) for ally in defAllyWithin2Spaces], default=0))
        defCombatBuffs[RES] += -3 + min(defNeutrDebuffsStats[RES], min([ally.get_total_debuff(RES) for ally in defAllyWithin2Spaces], default=0))

    if "sabotageAtkRes" in defSkills and defStats[RES] + defPhantomStats[RES] > atkStats[RES] + atkPhantomStats[RES]:
        atkCombatBuffs[ATK] += -3 + min(atkNeutrDebuffsStats[ATK], min([ally.get_total_debuff(ATK) for ally in atkAllyWithin2Spaces], default=0))
        atkCombatBuffs[RES] += -3 + min(atkNeutrDebuffsStats[RES], min([ally.get_total_debuff(RES) for ally in atkAllyWithin2Spaces], default=0))

    if "sabotageSpdRes" in atkSkills and atkStats[RES] + atkPhantomStats[RES] > defStats[RES] + defPhantomStats[RES]:
        defCombatBuffs[SPD] += -3 + min(defNeutrDebuffsStats[SPD], min([ally.get_total_debuff(SPD) for ally in defAllyWithin2Spaces], default=0))
        defCombatBuffs[RES] += -3 + min(defNeutrDebuffsStats[RES], min([ally.get_total_debuff(RES) for ally in defAllyWithin2Spaces], default=0))

    if "sabotageSpdRes" in defSkills and defStats[RES] + defPhantomStats[RES] > atkStats[RES] + atkPhantomStats[RES]:
        atkCombatBuffs[SPD] += -3 + min(atkNeutrDebuffsStats[SPD], min([ally.get_total_debuff(SPD) for ally in atkAllyWithin2Spaces], default=0))
        atkCombatBuffs[RES] += -3 + min(atkNeutrDebuffsStats[RES], min([ally.get_total_debuff(RES) for ally in atkAllyWithin2Spaces], default=0))

    # Discord Skills
    if "atkResDiscord" in atkSkills:
        afflicted_foes = 0

        if Status.Discord in defender.statusNeg:
            afflicted_foes += 1

        for foe in defAllAllies:
            if Status.Discord in foe.statusNeg:
                afflicted_foes += 1

        defCombatBuffs[ATK] -= min(4 + afflicted_foes * 2, 10)
        defCombatBuffs[RES] -= min(4 + afflicted_foes * 2, 10)
        atkr.true_stat_damages.append((RES, 15))

    if "atkResDiscord" in defSkills:
        afflicted_foes = 0

        if Status.Discord in attacker.statusNeg:
            afflicted_foes += 1

        for foe in atkAllAllies:
            if Status.Discord in foe.statusNeg:
                afflicted_foes += 1

        atkCombatBuffs[ATK] -= min(4 + afflicted_foes * 2, 10)
        atkCombatBuffs[RES] -= min(4 + afflicted_foes * 2, 10)
        defr.true_stat_damages.append((RES, 15))

    if "spdResDiscord" in atkSkills:
        afflicted_foes = 0

        if Status.Discord in defender.statusNeg:
            afflicted_foes += 1

        for foe in defAllAllies:
            if Status.Discord in foe.statusNeg:
                afflicted_foes += 1

        defCombatBuffs[SPD] -= min(4 + afflicted_foes * 2, 10)
        defCombatBuffs[RES] -= min(4 + afflicted_foes * 2, 10)
        atkr.true_stat_damages.append((RES, 15))

    if "spdResDiscord" in defSkills:
        afflicted_foes = 0

        if Status.Discord in attacker.statusNeg:
            afflicted_foes += 1

        for foe in atkAllAllies:
            if Status.Discord in foe.statusNeg:
                afflicted_foes += 1

        atkCombatBuffs[SPD] -= min(4 + afflicted_foes * 2, 10)
        atkCombatBuffs[RES] -= min(4 + afflicted_foes * 2, 10)
        defr.true_stat_damages.append((RES, 15))

    if "defResDiscord" in atkSkills:
        afflicted_foes = 0

        if Status.Discord in defender.statusNeg:
            afflicted_foes += 1

        for foe in defAllAllies:
            if Status.Discord in foe.statusNeg:
                afflicted_foes += 1

        defCombatBuffs[DEF] -= min(4 + afflicted_foes * 2, 10)
        defCombatBuffs[RES] -= min(4 + afflicted_foes * 2, 10)
        atkr.true_stat_damages.append((RES, 15))

    if "defResDiscord" in defSkills:
        afflicted_foes = 0

        if Status.Discord in attacker.statusNeg:
            afflicted_foes += 1

        for foe in atkAllAllies:
            if Status.Discord in foe.statusNeg:
                afflicted_foes += 1

        atkCombatBuffs[DEF] -= min(4 + afflicted_foes * 2, 10)
        atkCombatBuffs[RES] -= min(4 + afflicted_foes * 2, 10)
        defr.true_stat_damages.append((RES, 15))

    # Tier 4 Link Skills
    if "atkSpdLink4" in atkSkills:
        defCombatBuffs[SPD] -= 4
        defCombatBuffs[DEF] -= 2
        defCombatBuffs[RES] -= 2

        ally_total = max([sum(ally.get_total_buff(ATK) + ally.get_total_buff(SPD)) for ally in atkAllAllies if Status.Canto1 in ally.statusPos], default=0)

        atkr.true_all_hits += max(sum(atkNeutrBuffsStats[ATK] + atkNeutrBuffsStats[SPD]), ally_total)

    if "atkSpdLink4" in defSkills:
        atkCombatBuffs[SPD] -= 4
        atkCombatBuffs[DEF] -= 2
        atkCombatBuffs[RES] -= 2

        ally_total = max([sum(ally.get_total_buff(ATK) + ally.get_total_buff(SPD)) for ally in defAllAllies if Status.Canto1 in ally.statusPos], default=0)

        defr.true_all_hits += max(sum(defNeutrBuffsStats[ATK] + defNeutrBuffsStats[SPD]), ally_total)

    if "spdDefLink4" in atkSkills:
        defCombatBuffs[ATK] -= 4
        defCombatBuffs[SPD] -= 4

        ally_total = max([sum(ally.get_total_buff(SPD) + ally.get_total_buff(DEF)) for ally in atkAllAllies if Status.Canto1 in ally.statusPos], default=0)

        atkr.true_all_hits += max(sum(atkNeutrBuffsStats[SPD] + atkNeutrBuffsStats[DEF]), ally_total)

    if "spdDefLink4" in defSkills:
        atkCombatBuffs[ATK] -= 4
        atkCombatBuffs[SPD] -= 4

        ally_total = max([sum(ally.get_total_buff(SPD) + ally.get_total_buff(DEF)) for ally in defAllAllies if Status.Canto1 in ally.statusPos], default=0)

        defr.true_all_hits += max(sum(defNeutrBuffsStats[SPD] + defNeutrBuffsStats[DEF]), ally_total)

    # Creation Pulse
    if "creationPulse" in atkSkills and defHasPenalty:
        atkCombatBuffs[ATK] += 3
        atkCombatBuffs[SPD] += 3
        
        if atkSpTriggeredByAttack:
            atkr.sp_jump_first += min(len(defender.statusNeg), 2)

    if "creationPulse" in defSkills and atkHasPenalty:
        defCombatBuffs[ATK] += 3
        defCombatBuffs[SPD] += 3

        if defSpTriggeredByAttack:
            defr.sp_jump_first += min(len(attacker.statusNeg), 2)

    # Exalted Falchion (Refine Base) - L!Marth
    if "ILOVEBONUSES" in atkSkills and (atkHPGreaterEqual50Percent or atkHasBonus):
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "ILOVEBONUSES" in defSkills and (defHPGreaterEqual50Percent or defHasBonus):
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Tanngrisnir (Base) - WI!Marth
    if "winterMarthBoost" in atkSkills and (sum(atkNeutrBuffsStats) or Status.MobilityUp in attacker.statusPos):
        atkCombatBuffs = [x + 3 for x in atkCombatBuffs]
        atkr.spGainOnAtk += 1

    if "winterMarthBoost" in defSkills and (sum(defNeutrBuffsStats) or Status.MobilityUp in defender.statusPos):
        defCombatBuffs = [x + 3 for x in defCombatBuffs]
        defr.spGainOnAtk += 1

    # Tanngrisnir (Refine Base) - WI!Marth
    if "winterMarthRefine" in atkSkills and (atkHPGreaterEqual50Percent or atkHasBonus):
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "winterMarthRefine" in defSkills and (defHPGreaterEqual50Percent or defHasBonus):
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Tanngrisnir (Refine Eff) - WI!Marth
    if "but maaaaaaaaarrrss" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "but maaaaaaaaarrrss" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Exalted Falchion (Refine Eff) - L!Marth
    if "spectrumUnityMarth" in atkSkills:
        for i in range(1, 5):
            atkCombatBuffs[i] += 4 + atkNeutrDebuffsStats[i] * -2

    if "spectrumUnityMarth" in defSkills and defAllyWithin2Spaces:
        for i in range(1, 5):
            defCombatBuffs[i] += 4 + defNeutrDebuffsStats[i] * -2

    # Brilliant Rapier (Refine Eff) - CH!Marth
    if "play puyopuyotetris" in atkSkills:
        for i in range(1, 5):
            atkCombatBuffs[i] += max(atkNeutrBuffsStats[i], max([ally.get_total_buff(i) for ally in atkAllyWithin2Spaces], default=0))

        atkr.true_stat_damages.append((SPD, 15))

    if "play puyopuyotetris" in defSkills and defAllyWithin2Spaces:
        for i in range(1, 5):
            defCombatBuffs[i] += max(defNeutrBuffsStats[i], max([ally.get_total_buff(i) for ally in defAllyWithin2Spaces], default=0))

        defr.true_stat_damages.append((SPD, 15))

    # Genesis Falchion (Base) - B!Marth
    if "SEGAAAA" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        bonus_total = sum(nlargest(3, [ally.get_bonus_total() for ally in atkAllAllies]))

        if bonus_total >= 10:
            atkr.offensive_NFU = True
            atkr.defensive_NFU = True
        if bonus_total >= 25:
            atkCombatBuffs[ATK] += 5
            atkr.all_hits_heal += 5

    if "SEGAAAA" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        bonus_total = sum(nlargest(3, [ally.get_bonus_total() for ally in defAllAllies]))

        if bonus_total >= 10:
            defr.offensive_NFU = True
            defr.defensive_NFU = True
        if bonus_total >= 25:
            defCombatBuffs[ATK] += 5
            defr.all_hits_heal += 5
        if bonus_total >= 60:
            defr.vantage = True

    # Genesis Falchion (Refine Base) - B!Marth
    if "nintenesis" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        bonus_total = sum(nlargest(3, [ally.get_bonus_total() for ally in atkAllAllies]))

        if bonus_total >= 10:
            atkr.offensive_NFU = True
            atkr.defensive_NFU = True
            atkr.offensive_tempo = True
        if bonus_total >= 25:
            atkCombatBuffs[ATK] += 5
            atkr.all_hits_heal += 7

    if "nintenesis" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        bonus_total = sum(nlargest(3, [ally.get_bonus_total() for ally in defAllAllies]))

        if bonus_total >= 10:
            defr.offensive_NFU = True
            defr.defensive_NFU = True
            defr.offensive_tempo = True
        if bonus_total >= 25:
            defCombatBuffs[ATK] += 5
            defr.all_hits_heal += 7
        if bonus_total >= 60:
            defr.vantage = True

    # Genesis Falchion (Refine Eff) - B!Marth
    if "denesis" in atkSkills and atkHPGreaterEqual25Percent:
        atkr.DR_first_strikes_NSP.append(40)
        for i in range(1, 5):
            atkCombatBuffs[i] += 5 + max(atkNeutrBuffsStats[i], max([ally.get_total_buff(i) for ally in atkAllyWithin2Spaces], default=0))

    if "denesis" in defSkills and defHPGreaterEqual25Percent:
        defr.DR_first_strikes_NSP.append(40)
        for i in range(1, 5):
            defCombatBuffs[i] += 5 + max(defNeutrBuffsStats[i], max([ally.get_total_buff(i) for ally in defAllyWithin2Spaces], default=0))

    # Sword of Peace - FE!Marth
    if "The guy from Smash Bros" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]

        X = max(sum(atkNeutrBuffsStats), max([ally.get_bonus_total() for ally in atkAllyWithin3Spaces], default=0))

        atkr.true_all_hits += X
        atkr.TDR_first_strikes += trunc(0.50 * X)
        atkr.TDR_on_foe_sp += trunc(0.50 * X)

        atkr.sp_jump_first += 1
        atkr.damage_reduction_reduction.append(50)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 10, "self", "one"))

    if "The guy from Smash Bros" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + min(len(defAllyWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]

        X = max(sum(defNeutrBuffsStats), max([ally.get_bonus_total() for ally in defAllyWithin3Spaces], default=0))

        defr.true_all_hits += X
        defr.TDR_first_strikes += trunc(0.50 * X)
        defr.TDR_on_foe_sp += trunc(0.50 * X)

        defr.sp_jump_first += 1
        defr.damage_reduction_reduction.append(50)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 10, "self", "one"))

    if Status.FireEmblem in attacker.statusPos:
        for i in range(1, 5):
            atkCombatBuffs[i] += max(atkNeutrBuffsStats[i], max([ally.get_total_buff(i) for ally in atkAllyWithin2Spaces], default=0))

        atkr.TDR_first_strikes += 10

    if Status.FireEmblem in defender.statusPos:
        for i in range(1, 5):
            defCombatBuffs[i] += max(defNeutrBuffsStats[i], max([ally.get_total_buff(i) for ally in defAllyWithin2Spaces], default=0))

        defr.TDR_first_strikes += 10

    # Shield of Hope - FE!Marth
    if "shieldOfHope" in defSkills:
        bonus_total = sum(nlargest(3, [ally.get_bonus_total() for ally in defAllAllies]))

        if bonus_total >= 40:
            defr.vantage = True
        if bonus_total >= 60:
            disableCannotCounter = True
            if defender.unitCombatInitiates == 0:
                defr.self_desperation = True

    # Wing-Lifted Spear (Base) - L!Caeda
    if "https://www.youtube.com/watch?v=NqDawnpxcgc" in atkSkills or "LCaedaRefine" in atkSkills or "LCaedaRefineEffect" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        for i in range(1, 5):
            atkCombatBuffs[i] += defNeutrBuffsStats[i]
            defCombatBuffs[i] -= defNeutrBuffsStats[i]

    if ("https://www.youtube.com/watch?v=NqDawnpxcgc" in defSkills or "LCaedaRefine" in defSkills or "LCaedaRefineEffect" in defSkills) and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        for i in range(1, 5):
            defCombatBuffs[i] += atkNeutrBuffsStats[i]
            atkCombatBuffs[i] -= atkNeutrBuffsStats[i]

    # Wing-Lifted Spear (Refine Base) - L!Caeda
    if "LCaedaRefine" in atkSkills or "LCaedaRefineEffect" in atkSkills:
        atkr.true_all_hits += min(len(attacker.statusPos + defender.statusNeg) * 5, 25)

    if ("LCaedaRefine" in defSkills or "LCaedaRefineEffect" in defSkills) and defAllyWithin2Spaces:
        atkr.true_all_hits += min(len(attacker.statusPos + defender.statusNeg) * 5, 25)

    # Wing-Lifted Spear (Refine Eff) - L!Caeda
    if "LCaedaRefineEffect" in atkSkills:
        atkCombatBuffs = [x + min(len(atkAllyWithin3Spaces) * 2 + 5, 11) for x in atkCombatBuffs]
        atkr.damage_reduction_reduction.append(50)

    if "LCaedaRefineEffect" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + min(len(defAllyWithin3Spaces) * 2 + 5, 11) for x in defCombatBuffs]
        defr.damage_reduction_reduction.append(50)

    # Faithful Loyalty - L!Caeda
    if "faithfulLoyalty" in atkSkills:
        atkr.offensive_NFU = True
        atkPostCombatEffs[UNCONDITIONAL].append(("status", Status.Vantage, "self", "one"))

    if "faithfulLoyalty" in defSkills:
        if attacker.move == 1 or attacker.move == 3:
            defr.vantage = True

        defr.offensive_NFU = True
        defPostCombatEffs[UNCONDITIONAL].append(("status", Status.Vantage, "self", "one"))

    # Faithful Loyalty II - L!Caeda
    if "faithfulLoyaltyII" in atkSkills:
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))
        atkPostCombatEffs[UNCONDITIONAL].append(("status", Status.Vantage, "self", "one"))

        X = max(sum(atkNeutrBuffsStats), max([ally.get_bonus_total() for ally in atkAllyWithin2Spaces], default=0))

        if defender.move == 1 or defender.move == 3:
            atkr.TDR_first_strikes += X
        else:
            atkr.TDR_first_strikes += trunc(0.40 * X)

    if "faithfulLoyaltyII" in defSkills:
        if attacker.move == 1 or attacker.move == 3:
            defr.vantage = True

        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))
        defPostCombatEffs[UNCONDITIONAL].append(("status", Status.Vantage, "self", "one"))

        X = max(sum(defNeutrBuffsStats), max([ally.get_bonus_total() for ally in defAllyWithin2Spaces], default=0))

        if attacker.move == 1 or attacker.move == 3:
            defr.TDR_first_strikes += X
        else:
            defr.TDR_first_strikes += trunc(0.40 * X)

    # Believe in Love? - X!Caeda
    if "doYouBelieveInLove?" in atkSkills:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.stat_scaling_DR.append((SPD, 50))

        for i in range(1, 5):
            atkCombatBuffs[i] += 4 + atkNeutrDebuffsStats[i] * -2

        X = max(sum(atkNeutrBuffsStats), max([ally.get_bonus_total() for ally in atkAllyWithin2Spaces], default=0))
        if defender.move == 1 or defender.move == 3:
            atkr.TDR_all_hits += X
        else:
            atkr.TDR_first_strikes += trunc(0.40 * X)

    if "doYouBelieveInLove?" in defSkills:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.stat_scaling_DR.append((SPD, 50))

        for i in range(1, 5):
            defCombatBuffs[i] += 4 + defNeutrDebuffsStats[i] * -2

        X = max(sum(defNeutrBuffsStats), max([ally.get_bonus_total() for ally in defAllyWithin2Spaces], default=0))
        if attacker.move == 1 or attacker.move == 3:
            defr.TDR_all_hits += X
        else:
            defr.TDR_first_strikes += trunc(0.40 * X)

    # Winds of Change (Base) - CH!Merric
    if "I hope no instructor steals my gimmick" in atkSkills and (sum(atkNeutrBuffsStats) or atkHPGreaterEqual50Percent):
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "I hope no instructor steals my gimmick" in defSkills and (sum(defNeutrBuffsStats) or defHPGreaterEqual50Percent):
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # Winds of Change (Refine Base) - CH!Merric
    if "chMerricBoost" in atkSkills and (atkHasBonus or atkHPGreaterEqual50Percent):
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.true_stat_damages.append((SPD, 15))

    if "chMerricBoost" in defSkills and (defHasBonus or defHPGreaterEqual50Percent):
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.true_stat_damages.append((SPD, 15))

    # Lightburst Tome - Arlen
    if "arlenBoost" in atkSkills and atkHPGreaterEqual25Percent:
        if atkSpTriggeredByAttack:
            atkr.sp_jump_first += 1

        X = 8 if defender.specialMax == -1 else max(16 - defender.specialMax * 2, 8)
        defCombatBuffs[ATK] -= X
        defCombatBuffs[SPD] -= X
        defCombatBuffs[RES] -= X
        atkr.DR_first_hit_NSP.append(30)
        atkr.retaliatory_reduced += 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "arlenBoost" in defSkills and defHPGreaterEqual25Percent:
        if defSpTriggeredByAttack:
            defr.sp_jump_first += 1

        X = 8 if attacker.specialMax == -1 else max(16 - attacker.specialMax * 2, 8)
        atkCombatBuffs[ATK] -= X
        atkCombatBuffs[SPD] -= X
        atkCombatBuffs[RES] -= X
        defr.DR_first_hit_NSP.append(30)
        defr.retaliatory_reduced += 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Eagle's Egg (Refine Eff) - SP!Est
    if "EST BEST TIME ZONE" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

        if defHasPenalty:
            cannotCounter = True

    if "EST BEST TIME ZONE" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Rowdy Sword (Refine Eff) - Luke
    if "BEAST MODE BABY" in atkSkills and sum(defNeutrBuffsStats) == 0:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[DEF] += 6

    if "BEAST MODE BABY" in defSkills and sum(atkNeutrBuffsStats) == 0:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[DEF] += 6

    # Sneering Axe (Base) - Legion
    if "legionBonusPunisher" in atkSkills:
        for i in range(1, 5): defCombatBuffs[i] -= defNeutrBuffsStats[i] * 2

    if "legionBonusPunisher" in defSkills:
        for i in range(1, 5): atkCombatBuffs[i] -= atkNeutrBuffsStats[i] * 2

    # Divine Mist (Refine Eff) - L!Y!Tiki
    if "LTikiBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defCombatBuffs[ATK] -= trunc(0.75 * (defNeutrBuffsStats[DEF] + defNeutrBuffsStats[RES]))

    if "LTikiBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkCombatBuffs[ATK] -= trunc(0.75 * (atkNeutrBuffsStats[DEF] + atkNeutrBuffsStats[RES]))

    # With Everyone! II - L!Y!Tiki
    if "I love you, and all you guys!" in defSkills and savior_triggered:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Razing Breath - FA!Y!Tiki
    if "Madden '94" in atkSkills and atkHPGreaterEqual25Percent:
        for i in range(1, 5):
            atkCombatBuffs[i] += 4 + atkNeutrBuffsStats[i]

        if atkHasBonus:
            atkr.follow_ups_skill += 1

    if "Madden '94" in defSkills and defHPGreaterEqual25Percent:
        for i in range(1, 5):
            defCombatBuffs[i] += 4 + defNeutrBuffsStats[i]

        if defHasBonus:
            atkr.follow_up_denials -= 1

    # Frostfire Breath (Base) - H!Y!Tiki
    if "hTikiBoost" in atkSkills and atkHasBonus:
        atkCombatBuffs[ATK] += 6 + trunc(1.5 * (atkNeutrBuffsStats[DEF] + atkNeutrBuffsStats[RES]))
        atkCombatBuffs[SPD] += 6

    if "hTikiBoost" in defSkills and defHasBonus:
        defCombatBuffs[ATK] += 6 + trunc(1.5 * (defNeutrBuffsStats[DEF] + defNeutrBuffsStats[RES]))
        defCombatBuffs[SPD] += 6

    # Frostfire Breath (Refine Base) - H!Y!Tiki
    if "hTikiRefine" in atkSkills and atkHasBonus:
        atkCombatBuffs[ATK] += 6 + 2 * max(atkNeutrBuffsStats[DEF] + atkNeutrBuffsStats[RES], max([ally.get_total_buff(DEF) + ally.get_total_buff(RES) for ally in atkAllyWithin2Spaces], default=0))
        atkCombatBuffs[SPD] += 6
        atkCombatBuffs[DEF] += 4
        atkCombatBuffs[RES] += 4
        atkr.TDR_first_strikes += 7
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "hTikiRefine" in defSkills and defHasBonus:
        defCombatBuffs[ATK] += 6 + 2 * max(defNeutrBuffsStats[DEF] + defNeutrBuffsStats[RES], max([ally.get_total_buff(DEF) + ally.get_total_buff(RES) for ally in defAllyWithin2Spaces], default=0))
        defCombatBuffs[SPD] += 6
        defCombatBuffs[DEF] += 4
        defCombatBuffs[RES] += 4
        defr.TDR_first_strikes += 7
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Frostfire Breath (Refine Eff) - H!Y!Tiki
    if "frostfire" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.damage_reduction_reduction.append(50)

    if "frostfire" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.damage_reduction_reduction.append(50)

    # Wizened Breath (Base) - Bantu
    if "bantuBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

        for i in range(1, 5):
            if not defPenaltiesNeutralized[i]:
                defCombatBuffs[i] -= max(6 - defNeutrDebuffsStats[i], 0)

    if "bantuBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

        for i in range(1, 5):
            if not atkPenaltiesNeutralized[i]:
                atkCombatBuffs[i] -= max(6 - atkNeutrDebuffsStats[i], 0)

    # Wizened Breath (Refine Eff)
    if "bantuFUDenial" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defr.follow_up_denials -= 1

    if "bantuFUDenial" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkr.follow_up_denials -= 1

    # Mercurius (Refine Eff) - Astram
    if "yahoo" in atkSkills and atkAllyWithin3Spaces:
        highest_stats = [0] * 5

        for ally in atkAllyWithin3Spaces:
            ally_panic = Status.Panic in ally.statusNeg and Status.NullPanic not in ally.statusPos
            if ally_panic: continue

            i = 1
            while i < 5:
                cur_buff = ally.buffs[i]
                highest_stats[i] = max(highest_stats[i], cur_buff)
                i += 1

        for i in range(1, 5):
            atkCombatBuffs[i] += max(atkNeutrBuffsStats[i], highest_stats[i])

    if "yahoo" in defSkills and defAllyWithin3Spaces:
        highest_stats = [0] * 5

        for ally in defAllyWithin3Spaces:
            ally_panic = Status.Panic in ally.statusNeg and Status.NullPanic not in ally.statusPos
            if ally_panic: continue

            i = 1
            while i < 5:
                cur_buff = ally.buffs[i]
                highest_stats[i] = max(highest_stats[i], cur_buff)
                i += 1

        for i in range(1, 5):
            defCombatBuffs[i] += max(defNeutrBuffsStats[i], highest_stats[i])

    # Thief's Honesty (Refine Eff) - Julian
    if "He is theif" in atkSkills:
        for i in range(1, 5):
            atkCombatBuffs[i] += defNeutrBuffsStats[i] + 4
            defCombatBuffs[i] -= defNeutrBuffsStats[i]

        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "He is theif" in defSkills and defAllyWithin2Spaces:
        for i in range(1, 5):
            defCombatBuffs[i] += atkNeutrBuffsStats[i] + 4
            atkCombatBuffs[i] -= atkNeutrBuffsStats[i]

        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Fell Flambeau (Base) - DE!Katarina
    if "deKatarinaBoost" in atkSkills and not atkAdjacentToAlly:
        for i in range(1, 5):
            defCombatBuffs[i] -= 5 - defNeutrDebuffsStats[i]

    if "deKatarinaBoost" in defSkills and not defAdjacentToAlly:
        for i in range(1, 5):
            atkCombatBuffs[i] -= 5 - atkNeutrDebuffsStats[i]

    # Scepter of Love (Base) - V!Alm
    if "vAlmBoost" in atkSkills and (sum(atkNeutrBuffsStats) or atkHPCur / atkStats[HP] >= 0.70):
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkCombatBuffs[ATK] += trunc(0.25 * defStats[DEF])
        atkCombatBuffs[SPD] += trunc(0.25 * defStats[DEF])
        defCombatBuffs[ATK] -= trunc(0.25 * defStats[RES])
        defCombatBuffs[DEF] -= trunc(0.25 * defStats[RES])

    if "vAlmBoost" in defSkills and (sum(defNeutrBuffsStats) or defHPCur / defStats[HP] >= 0.70):
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defCombatBuffs[ATK] += trunc(0.25 * atkStats[DEF])
        defCombatBuffs[SPD] += trunc(0.25 * atkStats[DEF])
        atkCombatBuffs[ATK] -= trunc(0.25 * atkStats[RES])
        atkCombatBuffs[DEF] -= trunc(0.25 * atkStats[RES])

    # Scepter of Love (Refine Base) - V!Alm
    if "vAlmRefineBoost" in atkSkills and (atkHasBonus or atkHPGreaterEqual25Percent):
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkCombatBuffs[ATK] += trunc(0.25 * defStats[DEF])
        atkCombatBuffs[SPD] += trunc(0.25 * defStats[DEF])
        defCombatBuffs[ATK] -= trunc(0.25 * defStats[RES])
        defCombatBuffs[DEF] -= trunc(0.25 * defStats[RES])

    if "vAlmRefineBoost" in defSkills and (defHasBonus or defHPGreaterEqual25Percent):
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defCombatBuffs[ATK] += trunc(0.25 * atkStats[DEF])
        defCombatBuffs[SPD] += trunc(0.25 * atkStats[DEF])
        atkCombatBuffs[ATK] -= trunc(0.25 * atkStats[RES])
        atkCombatBuffs[DEF] -= trunc(0.25 * atkStats[RES])

    # Snide Bow (Refine Eff) - Python
    if "pythonBonusPunisher" in atkSkills:
        for i in range(2, 4): defCombatBuffs[i] -= 5 + defNeutrBuffsStats[i] * 2

    if "pythonBonusPunisher" in defSkills and defAllyWithin2Spaces:
        for i in range(2, 4): atkCombatBuffs[i] -= 5 + atkNeutrBuffsStats[i] * 2

    # Bright-Shell Egg (Base) - SP!Delthea
    if "spDeltheaBoost" in atkSkills and (atkHasBonus or defHasPenalty):
        defCombatBuffs[SPD] -= 6
        defCombatBuffs[RES] -= 6

        total = sum(atkNeutrBuffsStats) + abs(sum(defNeutrDebuffsStats))

        if total >= 6:
            atkr.offensive_NFU = True
        if total >= 18:
            cannotCounter = True

    if "spDeltheaBoost" in defSkills and (defHasBonus or atkHasPenalty):
        atkCombatBuffs[SPD] -= 6
        atkCombatBuffs[RES] -= 6

        total = sum(defNeutrBuffsStats) + abs(sum(atkNeutrDebuffsStats))

        if total >= 6:
            defr.offensive_NFU = True

    # Thorn Lance (Refine Eff) - V!Rudolf
    if "ohHangOnItJustStopped" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5

        X = trunc(0.50 * max(sum(atkNeutrBuffsStats), max([ally.get_bonus_total() for ally in atkAllyWithin2Spaces], default=0)))

        atkCombatBuffs[ATK] += X
        defCombatBuffs[ATK] -= X
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "ohHangOnItJustStopped" in defSkills and atkHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5

        X = trunc(0.50 * max(sum(defNeutrBuffsStats), max([ally.get_bonus_total() for ally in defAllyWithin2Spaces], default=0)))

        defCombatBuffs[ATK] += X
        atkCombatBuffs[ATK] -= X
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Sparking Tome (Base) - Azelle
    if "azelleBoost" in atkSkills and defHPGreaterEqual50Percent:
        defCombatBuffs[SPD] -= 6 + 2 * atkNeutrBuffsStats[SPD]
        defCombatBuffs[RES] -= 6 + 2 * atkNeutrBuffsStats[RES]

    if "azelleBoost" in defSkills and atkHPGreaterEqual50Percent:
        atkCombatBuffs[SPD] -= 6 + 2 * defNeutrBuffsStats[SPD]
        atkCombatBuffs[RES] -= 6 + 2 * defNeutrBuffsStats[RES]

    # Sparking Tome (Refine Base) - Azelle
    if "azelleRefineBoost" in atkSkills:
        defCombatBuffs[ATK] -= 5 + 2 * atkNeutrBuffsStats[ATK]
        defCombatBuffs[SPD] -= 6 + 2 * atkNeutrBuffsStats[SPD]
        defCombatBuffs[RES] -= 6 + 2 * atkNeutrBuffsStats[RES]
        atkr.offensive_tempo = True
        atkr.defensive_tempo = True

    if "azelleRefineBoost" in defSkills and atkHPGreaterEqual50Percent:
        atkCombatBuffs[ATK] -= 5 + 2 * defNeutrBuffsStats[ATK]
        atkCombatBuffs[SPD] -= 6 + 2 * defNeutrBuffsStats[SPD]
        atkCombatBuffs[RES] -= 6 + 2 * defNeutrBuffsStats[RES]
        defr.offensive_tempo = True
        defr.defensive_tempo = True

    # Sparking Tome (Refine Eff) - Azelle
    if "Spark!" in atkSkills:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[RES] -= 5
        atkr.true_stat_damages.append((SPD, 20))
        atkr.TDR_first_strikes += 7

    if "Spark!" in defSkills and defAllyWithin2Spaces:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[RES] -= 5
        defr.true_stat_damages.append((SPD, 20))
        defr.TDR_first_strikes += 7

    # Violdrake Bow (Refine Eff) - Tanya
    if "tanyaPenaltyPunisher" in atkSkills and (defHPGreaterEqual75Percent or defHasPenalty):
        for i in range(1, 5): defCombatBuffs[i] += -4 + defNeutrDebuffsStats[i]

    if "tanyaPenaltyPunisher" in defSkills and (atkHPGreaterEqual75Percent or atkHasPenalty):
        for i in range(1, 5): atkCombatBuffs[i] += -4 + atkNeutrDebuffsStats[i]

    # Petrify (Refine Eff) - Veld
    if "to stone" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defBonusesNeutralized[ATK] = True
        defBonusesNeutralized[RES] = True
        atkr.true_all_hits += -1 * min(sum(defNeutrDebuffsStats), min([ally.get_penalty_total() for foe in defAllyWithin2Spaces], default=0))
        atkr.DR_all_hits_NSP.append(30)

    if "to stone" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkBonusesNeutralized[ATK] = True
        atkBonusesNeutralized[RES] = True
        defr.true_all_hits += -1 * min(sum(atkNeutrDebuffsStats), min([ally.get_penalty_total() for foe in atkAllyWithin2Spaces], default=0))
        defr.DR_all_hits_NSP.append(30)

    # Blazing Polearms (Base) - GR!Roy
    if "grRoyBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defCombatBuffs = [x - min(trunc(sum(atkNeutrBuffsStats) * 0.50), 6) for x in defCombatBuffs]

    if "grRoyBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkCombatBuffs = [x - min(trunc(sum(defNeutrBuffsStats) * 0.50), 6) for x in atkCombatBuffs]

    # Faith in Humanity - GR!Roy
    if "faithInHumanity" in atkSkills:
        ally_count = 0

        for ally in atkAllAllies:
            if ally.wpnType not in DRAGON_WEAPONS + BEAST_WEAPONS and ally.get_bonus_total() >= 10:
                ally_count += 1

        if ally_count >= 2:
            atkr.offensive_tempo = True
            atkr.defensive_tempo = True

    if "faithInHumanity" in defSkills:
        ally_count = 0

        for ally in defAllAllies:
            if ally.wpnType not in DRAGON_WEAPONS + BEAST_WEAPONS and ally.get_bonus_total() >= 10:
                ally_count += 1

        if ally_count >= 2:
            defr.offensive_tempo = True
            defr.defensive_tempo = True

    # Tome of Reason (Refine Eff) - Lugh
    if "lughBonus" in atkSkills:
        defCombatBuffs[ATK] -= trunc(0.60 * (atkNeutrBuffsStats[DEF] + atkNeutrBuffsStats[RES]))
        defCombatBuffs[RES] -= trunc(0.60 * (atkNeutrBuffsStats[DEF] + atkNeutrBuffsStats[RES]))

    if "lughBonus" in defSkills and defAllyWithin2Spaces:
        atkCombatBuffs[ATK] -= trunc(0.60 * (defNeutrBuffsStats[DEF] + defNeutrBuffsStats[RES]))
        atkCombatBuffs[RES] -= trunc(0.60 * (defNeutrBuffsStats[DEF] + defNeutrBuffsStats[RES]))

    # Icy Maltet (Refine Eff) - Thea
    if "theaBonusDoubler" in atkSkills and atkAllyWithin3Spaces:
        for i in range(1, 5):
            atkCombatBuffs[i] += 4 + atkNeutrBuffsStats[i]

    if "theaBonusDoubler" in defSkills and defAllyWithin3Spaces:
        for i in range(1, 5):
            defCombatBuffs[i] += 4 + defNeutrBuffsStats[i]

    # Sell-Spell Tome (Base) - Hugh
    if "hughBoost" in atkSkills and atkHPGreaterEqual25Percent:
        if attacker.flowers >= 5:
            atkCombatBuffs = [x + 7 for x in atkCombatBuffs]
        elif attacker.flowers == 4:
            atkCombatBuffs = [x + 6 for x in atkCombatBuffs]
        elif attacker.flowers == 3:
            atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        else:
            atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

        if attacker.flowers >= 3:
            for i in range(1, 5):
                atkCombatBuffs[i] += 4 + atkNeutrBuffsStats[i]

    if "hughBoost" in defSkills and defHPGreaterEqual25Percent:
        if defender.flowers >= 5:
            defCombatBuffs = [x + 7 for x in defCombatBuffs]
        elif defender.flowers == 4:
            defCombatBuffs = [x + 6 for x in defCombatBuffs]
        elif defender.flowers == 3:
            defCombatBuffs = [x + 5 for x in defCombatBuffs]
        else:
            defCombatBuffs = [x + 4 for x in defCombatBuffs]

        if defender.flowers >= 3:
            for i in range(1, 5):
                defCombatBuffs[i] += 4 + defNeutrBuffsStats[i]

    # Wildcat Dagger (Base) - Chad
    if "chadBoost" in atkSkills and atkHPGreaterEqual25Percent:
        for i in range(1, 5):
            atkCombatBuffs[i] += 4 + defNeutrBuffsStats[i]
            defCombatBuffs[i] -= defNeutrBuffsStats[i]
            atkr.offensive_tempo = True

    if "chadBoost" in defSkills and defHPGreaterEqual25Percent:
        for i in range(1, 5):
            defCombatBuffs[i] += 4 + atkNeutrBuffsStats[i]
            atkCombatBuffs[i] -= atkNeutrBuffsStats[i]
            defr.offensive_tempo = True

    # Wildcat Dagger (Refine Eff) - Chad
    if "applewhite" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.DR_first_hit_NSP.append(30)
        atkr.true_stat_damages.append((SPD, 10))

    if "applewhite" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.DR_first_hit_NSP.append(30)
        defr.true_stat_damages.append((SPD, 10))

    # Western Axe (Refine Eff) - Echidna
    if "echidnaUnitySpectrum" in atkSkills and defHPGreaterEqual75Percent:
        for i in range(1, 5):
            atkCombatBuffs += 4 + (-2 * atkNeutrDebuffsStats[i])

        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "echidnaUnitySpectrum" in defSkills:
        for i in range(1, 5):
            defCombatBuffs += 4 + (-2 * defNeutrDebuffsStats[i])

        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Aureola (Refine Base) - Guinivere
    if "guinivereRefineBoost" in atkSkills:
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self_and_allies", "within_2_spaces_self"))
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.disable_foe_hexblade = True
        atkr.TDR_first_strikes += trunc(0.40 * max(sum(atkNeutrBuffsStats), max([ally.get_bonus_total() for ally in atkAllyWithin2Spaces], default=0)))

    if "guinivereRefineBoost" in defSkills:
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self_and_allies", "within_2_spaces_self"))

        if defAllyWithin2Spaces:
            atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
            atkr.disable_foe_hexblade = True
            atkr.TDR_first_strikes += trunc(0.40 * max(sum(atkNeutrBuffsStats), max([ally.get_bonus_total() for ally in atkAllyWithin2Spaces], default=0)))

    # Lofty Leaflet (Base) - TH!Cath
    if "thCathBoost" in atkSkills and defHPGreaterEqual50Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.true_stat_damages.append((SPD, 15))

        for i in range(1, 5):
            atkCombatBuffs[i] += defNeutrBuffsStats[i]
            defCombatBuffs[i] -= defNeutrBuffsStats[i]

    if "thCathBoost" in defSkills and atkHPGreaterEqual50Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.true_stat_damages.append((SPD, 15))

        for i in range(1, 5):
            defCombatBuffs[i] += atkNeutrBuffsStats[i]
            atkCombatBuffs[i] -= atkNeutrBuffsStats[i]

    # Runeaxe (Refine +Eff) - Narcian
    if "runeaxeBoost" in atkSkills and defHasPenalty: atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
    if "runeaxeBoost" in defSkills and atkHasPenalty: defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Wyvern Hatchet - Murdock
    if "After he wins BK" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 6 + max(7 - defNeutrDebuffsStats[ATK], 0)
        defCombatBuffs[DEF] -= 6
        atkr.follow_ups_skill += 1

    if "After he wins BK" in defSkills:
        atkCombatBuffs[ATK] -= 6 + max(7 - atkNeutrDebuffsStats[ATK], 0)
        atkCombatBuffs[DEF] -= 6
        defr.follow_ups_skill += 1

    # Eternal Breath (Refine Eff)
    if "faeBonus" in atkSkills and atkHasBonus:
        defCombatBuffs[ATK] -= 4
        defCombatBuffs[RES] -= 4
        atkr.spGainWhenAtkd += 1

    if "faeBonus" in defSkills and defHasBonus:
        atkCombatBuffs[ATK] -= 4
        atkCombatBuffs[RES] -= 4
        defr.spGainWhenAtkd += 1

    # Fellowship Blade - X!Hector
    if "xHectorBoost" in atkSkills and atkAllyWithin3Spaces:
        defCombatBuffs[ATK] -= 6 + trunc(0.20 * atkStats[DEF])
        defCombatBuffs[DEF] -= 6 + trunc(0.20 * atkStats[DEF])

        X = max(sum(atkNeutrBuffsStats), max([ally.get_bonus_total() for ally in atkAllyWithin2Spaces], default=0))

        atkr.true_all_hits += X
        atkr.TDR_all_hits += trunc(0.50 * X)
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "xHectorBoost" in defSkills and defAllyWithin3Spaces:
        atkCombatBuffs[ATK] -= 6 + trunc(0.20 * defStats[DEF])
        atkCombatBuffs[DEF] -= 6 + trunc(0.20 * defStats[DEF])

        X = max(sum(defNeutrBuffsStats), max([ally.get_bonus_total() for ally in defAllyWithin2Spaces], default=0))

        defr.true_all_hits += X
        defr.TDR_all_hits += trunc(0.50 * X)
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Oath of Ostia - X!Hector
    if "oathOfOstia" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 10
        defCombatBuffs[DEF] -= 10
        atkr.sp_jump_foe_first += 2
        atkr.damage_reduction_reduction.append(50)

    if "oathOfOstia" in defSkills:
        atkCombatBuffs[ATK] -= 10
        atkCombatBuffs[DEF] -= 10
        defr.sp_jump_foe_first += 2
        defr.damage_reduction_reduction.append(50)

    # Spy's Dagger (Refine Eff) - Matthew, + others reuse this effect
    if "mthwDominance" in atkSkills:
        for i in range(1, 5): atkCombatBuffs[ATK] += -defNeutrDebuffsStats[i]
    if "mthwDominance" in defSkills:
        for i in range(1, 5): defCombatBuffs[ATK] += -atkNeutrDebuffsStats[i]

    # Rebecca's Bow (Refine Eff) - Rebecca
    if "rebeccaBoost" in atkSkills and sum(atkNeutrBuffsStats):
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
    if "rebeccaBoost" in defSkills and sum(defNeutrBuffsStats):
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Göndul - X!Nino
    if "xNinoBoost" in atkSkills:
        for i in range(1, 5):
            atkCombatBuffs[i] += 5 + max(atkNeutrBuffsStats[i], max([ally.get_total_buff(i) for ally in atkAllyWithin3Spaces], default=0))

        atkr.DR_first_strikes_NSP.append(30)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "xNinoBoost" in defSkills and defAllyWithin2Spaces:
        for i in range(1, 5):
            defCombatBuffs[i] += 5 + max(defNeutrBuffsStats[i], max([ally.get_total_buff(i) for ally in defAllyWithin3Spaces], default=0))

        defr.DR_first_strikes_NSP.append(30)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # The Cleaner
    if "the cleanerrrr" in atkSkills:
        for i in range(1, 5): atkCombatBuffs[ATK] += defNeutrBuffsStats[i]
    if "the cleanerrrr" in defSkills:
        for i in range(1, 5): defCombatBuffs[ATK] += atkNeutrBuffsStats[i]

    # Hurricane Dagger (Base) - Legault
    if "legaultBoost" in atkSkills and (defHPGreaterEqual75Percent or defHasBonus):
        atkCombatBuffs[SPD] += 5
        atkCombatBuffs[ATK] += 5

    if "legaultBoost" in defSkills and (atkHPGreaterEqual75Percent or atkHasBonus):
        atkCombatBuffs[SPD] += 5
        atkCombatBuffs[ATK] += 5

    # Fanged Basilikos
    if "linusBonusPunisher" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[SPD] -= 5 + defNeutrBuffsStats[SPD] * 2
        defCombatBuffs[DEF] -= 5 + defNeutrBuffsStats[DEF] * 2

    if "linusBonusPunisher" in defSkills and atkHPGreaterEqual75Percent:
        atkCombatBuffs[SPD] -= 5 + atkNeutrBuffsStats[SPD] * 2
        atkCombatBuffs[DEF] -= 5 + atkNeutrBuffsStats[DEF] * 2

    # Dead-Fang Axe - FA!Linus
    if "He's eating unlimited burgers" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        for i in range(1, 5):
            defCombatBuffs[i] -= defNeutrBuffsStats[i] * 2

        atkr.true_stat_damages.append((ATK, 10))
        atkr.DR_first_hit_NSP.append(40)

    if "He's eating unlimited burgers" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        for i in range(1, 5):
            atkCombatBuffs[i] -= atkNeutrBuffsStats[i] * 2

        defr.true_stat_damages.append((ATK, 10))
        defr.DR_first_hit_NSP.append(40)

    # Void Tome (Base) - Bramimond
    if "me?" in atkSkills:
        if defStats[ATK] >= 50 or defHasPenalty:
            atkCombatBuffs[ATK] += 5
            atkCombatBuffs[DEF] += 5
            atkCombatBuffs[RES] += 5
        if defStats[SPD] >= 35 or defHasPenalty:
            atkr.follow_ups_skill += 1

    if "me?" in defSkills:
        if atkStats[ATK] >= 50 or atkHasPenalty:
            defCombatBuffs[ATK] += 5
            defCombatBuffs[DEF] += 5
            defCombatBuffs[RES] += 5
        if atkStats[SPD] >= 35 or atkHasPenalty:
            defr.follow_ups_skill += 1

    # Void Tome (Refine Eff) - Bramimond
    if "you?" in atkSkills:
        if defHPGreaterEqual50Percent:
            atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        if defender.special and "slaying" in defSkills and defSkills["slaying"] >= 0:
            atkr.sp_jump_first += 1
        if defStats[ATK] >= 50:
            atkr.true_stat_damages_from_foe.append((ATK, 15))
        if defStats[DEF] >= 35 or defStats[RES] >= 35 or defHasBonus:
            atkr.DR_all_hits_NSP.append(min(max(defStats[DEF], defStats[RES]), 50))

    if "you?" in defSkills:
        if atkHPGreaterEqual50Percent:
            defCombatBuffs = [x + 4 for x in defCombatBuffs]
        if attacker.special and "slaying" in atkSkills and atkSkills["slaying"] >= 0:
            defr.sp_jump_first += 1
        if atkStats[ATK] >= 50:
            defr.true_stat_damages_from_foe.append((ATK, 15))
        if atkStats[DEF] >= 35 or atkStats[RES] >= 35 or atkHasBonus:
            defr.DR_all_hits_NSP.append(min(max(atkStats[DEF], atkStats[RES]), 50))

    # Impenetrable Void - Bramimond
    if "mythicVoid" in atkSkills:
        defCombatBuffs = [x - 5 for x in defCombatBuffs]
        atkr.damage_reduction_reduction.append(50)

    if "mythicVoid" in defSkills:
        atkCombatBuffs = [x - 5 for x in atkCombatBuffs]
        defr.damage_reduction_reduction.append(50)

    # Beyond Reason - Athos
    if "beyondReason" in atkSkills and defHPGreaterEqual75Percent:
        A = len(defender.statusNeg)

        for ally in defAllyWithin3RowsCols:
            A += len(ally.statusNeg)

        atkCombatBuffs[ATK] += min(A, 12) + (2 * abs(atkNeutrDebuffsStats[ATK]))
        atkCombatBuffs[DEF] += min(A, 12) + (2 * abs(atkNeutrDebuffsStats[DEF]))
        atkCombatBuffs[RES] += min(A, 12) + (2 * abs(atkNeutrDebuffsStats[RES]))

    if "beyondReason" in defSkills:
        A = len(attacker.statusNeg)

        for ally in atkAllyWithin3RowsCols:
            A += len(ally.statusNeg)

        defCombatBuffs[ATK] += min(A, 12) + (2 * abs(defNeutrDebuffsStats[ATK]))
        defCombatBuffs[DEF] += min(A, 12) + (2 * abs(defNeutrDebuffsStats[DEF]))
        defCombatBuffs[RES] += min(A, 12) + (2 * abs(defNeutrDebuffsStats[RES]))

    #
    if "braveEphFU" in atkSkills and (sum(atkNeutrBuffsStats) or Status.MobilityUp in attacker.statusPos):
        atkr.follow_ups_skill += 1

    if "braveEphFU" in defSkills and (sum(defNeutrBuffsStats) or Status.MobilityUp in defender.statusPos):
        defr.follow_ups_skill += 1

    if "braveEphFUPlus" in atkSkills and atkHasBonus:
        atkr.follow_ups_skill += 1
        atkr.offensive_NFU = True

    if "braveEphFUPlus" in defSkills and defHasBonus:
        defr.follow_ups_skill += 1
        defr.offensive_NFU = True

    # Reginleif (Refine Base) - Duo Ephraim
    if "what, it's just an ordianary weapon descrip-" in atkSkills and (atkStats[ATK] + atkPhantomStats[ATK] > defStats[ATK] + defPhantomStats[ATK] or atkHasBonus):
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "what, it's just an ordianary weapon descrip-" in defSkills and (defStats[ATK] + defPhantomStats[ATK] > atkStats[ATK] + atkPhantomStats[ATK] or defHasBonus):
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Reginleif (Refine Eff) - Duo Ephraim
    if "OH MY GOODNESS" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

        if atkHasBonus:
            defr.follow_up_denials -= 1

    if "OH MY GOODNESS" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

        if defHasBonus:
            atkr.follow_up_denials -= 1

    # Grado Poleax (Refine Eff) - Amelia
    if "ameliaBoost" in atkSkills and (sum(atkNeutrBuffsStats) or Status.MobilityUp in attacker.statusPos):
        atkCombatBuffs[SPD] += 6
        atkCombatBuffs[DEF] += 6

    if "ameliaBoost" in defSkills and (sum(defNeutrBuffsStats) or Status.MobilityUp in defender.statusPos):
        defCombatBuffs[SPD] += 6
        defCombatBuffs[DEF] += 6

    # Wild Wind Sword - Forde
    if "fordeBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        for i in range(1, 5):
            atkCombatBuffs[i] += atkNeutrDebuffsStats[i] * -2

        atkr.true_all_hits += trunc(1.5 * abs(sum(atkNeutrDebuffsStats)))
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.DR_first_strikes_NSP.append(40)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "fordeBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        for i in range(1, 5):
            defCombatBuffs[i] += defNeutrDebuffsStats[i] * -2

        defr.true_all_hits += trunc(1.5 * abs(sum(defNeutrDebuffsStats)))
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.DR_first_strikes_NSP.append(40)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Weirding Tome (Refine Eff) - Lute
    if "luteBoost" in atkSkills and defHasPenalty:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "luteBoost" in defSkills and atkHasPenalty:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Desert-Tiger Axe (Refine Base) - Gerik
    if "gerikAxe" in atkSkills and atkAllyWithin3Spaces:
        highest_stats = [0] * 5

        for ally in atkAllyWithin3Spaces:
            ally_panic = Status.Panic in ally.statusNeg and Status.NullPanic not in ally.statusPos
            if ally_panic: continue

            i = 1
            while i < 5:
                cur_buff = ally.buffs[i]
                highest_stats[i] = max(highest_stats[i], cur_buff)
                i += 1

        for i in range(1, 5):
            atkCombatBuffs[i] += 4 +  max(atkNeutrBuffsStats[i], max(highest_stats[i]))

        atkr.DR_first_hit_NSP.append(30)
        atkr.offensive_tempo = True

    if "gerikAxe" in defSkills and defAllyWithin3Spaces:
        highest_stats = [0] * 5

        for ally in defAllyWithin3Spaces:
            ally_panic = Status.Panic in ally.statusNeg and Status.NullPanic not in ally.statusPos
            if ally_panic: continue

            i = 1
            while i < 5:
                cur_buff = ally.buffs[i]
                highest_stats[i] = max(highest_stats[i], cur_buff)
                i += 1

        for i in range(1, 5):
            defCombatBuffs[i] += 4 + max(defNeutrBuffsStats[i], max(highest_stats[i]))

        defr.DR_first_hit_NSP.append(30)
        defr.offensive_tempo = True

    # Father's-Son Axe (Refine Eff) - Ross
    if "hisFathersSonsFathersSonsFathersSons" in atkSkills:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.true_stat_damages.append((HP, 15))
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "hisFathersSonsFathersSonsFathersSons" in defSkills and defAllyWithin2Spaces:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.true_stat_damages.append((HP, 15))
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Rapid-Crier Bow (Base) - Neimi
    if "neimiBoost" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkCombatBuffs[ATK] += max([ally.get_total_buff(ATK) + ally.get_total_buff(SPD) for ally in atkAllyWithin3Spaces])

    if "neimiBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defCombatBuffs[ATK] += max([ally.get_total_buff(ATK) + ally.get_total_buff(SPD) for ally in defAllyWithin3Spaces])

    # Revenger Lance (Base) - Cormag
    if "WHY, WHY DID YOU DO THAT?????" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

        if defHPGreaterEqual75Percent:
            atkr.follow_ups_skill += 1

    if "WHY, WHY DID YOU DO THAT?????" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

        if atkHPGreaterEqual75Percent:
            defr.follow_ups_skill += 1

    # Revenger Lance (Refine Eff) - Cormag
    if "cormagBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.offensive_tempo = True
        atkr.TDR_stats.append((DEF, 15))

    if "cormagBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.offensive_tempo = True
        defr.TDR_stats.append((DEF, 15))

    # Tiger-Eye Axe (Refine Eff)
    if "I'mKindToWomen" in atkSkills and (atkHasBonus or defHasPenalty):
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defCombatBuffs[ATK] += min(defNeutrDebuffsStats[ATK], min([ally.get_total_debuff(ATK) for ally in defAllyWithin2Spaces], default=0))
        defCombatBuffs[SPD] += min(defNeutrDebuffsStats[SPD], min([ally.get_total_debuff(SPD) for ally in defAllyWithin2Spaces], default=0))
        defCombatBuffs[DEF] += min(defNeutrDebuffsStats[DEF], min([ally.get_total_debuff(DEF) for ally in defAllyWithin2Spaces], default=0))
        atkr.follow_ups_skill += 1
        atkr.true_stat_damages.append((ATK, 10))

    if "I'mKindToWomen" in defSkills and (defHasBonus or atkHasPenalty):
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkCombatBuffs[ATK] += min(atkNeutrDebuffsStats[ATK], min([ally.get_total_debuff(ATK) for ally in atkAllyWithin2Spaces], default=0))
        atkCombatBuffs[SPD] += min(atkNeutrDebuffsStats[SPD], min([ally.get_total_debuff(SPD) for ally in atkAllyWithin2Spaces], default=0))
        atkCombatBuffs[DEF] += min(atkNeutrDebuffsStats[DEF], min([ally.get_total_debuff(DEF) for ally in atkAllyWithin2Spaces], default=0))
        defr.follow_ups_skill += 1
        defr.true_stat_damages.append((ATK, 10))

    # Cursed Lance (Refine Eff) - Valter
    if "valterBoost" in atkSkills and defHasPenalty:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkCombatBuffs[DEF] += 5
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "valterBoost" in defSkills and atkHasPenalty:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defCombatBuffs[DEF] += 5
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Flame Lance (Refine Eff) - Petrine
    if "petrinePenaltyPunisher" in atkSkills:
        defCombatBuffs[ATK] -= 4 + defNeutrBuffsStats[ATK] * 2
        defCombatBuffs[SPD] -= 4 + defNeutrBuffsStats[SPD] * 2
        defCombatBuffs[RES] -= 4 + defNeutrBuffsStats[RES] * 2
        atkr.DR_first_hit_NSP.append(30)
        atkr.retaliatory_full_damages.append(30)

    if "petrinePenaltyPunisher" in defSkills and len(defAdjacentToAlly) <= 1:
        atkCombatBuffs[ATK] -= 4 + atkNeutrBuffsStats[ATK] * 2
        atkCombatBuffs[SPD] -= 4 + atkNeutrBuffsStats[SPD] * 2
        atkCombatBuffs[RES] -= 4 + atkNeutrBuffsStats[RES] * 2
        defr.DR_first_hit_NSP.append(30)
        defr.retaliatory_full_damages.append(30)

    # Crimean Scepter (Base) - A!Elincia
    if "aElinciaBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6 + trunc(1.5 * max(atkNeutrBuffsStats[ATK], max([ally.get_total_buff(ATK) for ally in atkAllyWithin2Spaces], default=0)))
        atkCombatBuffs[SPD] += 6 + trunc(1.5 * max(atkNeutrBuffsStats[SPD], max([ally.get_total_buff(SPD) for ally in atkAllyWithin2Spaces], default=0)))

    if "aElinciaBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6 + trunc(1.5 * max(defNeutrBuffsStats[ATK], max([ally.get_total_buff(ATK) for ally in defAllyWithin2Spaces], default=0)))
        defCombatBuffs[SPD] += 6 + trunc(1.5 * max(defNeutrBuffsStats[SPD], max([ally.get_total_buff(SPD) for ally in defAllyWithin2Spaces], default=0)))

    # Absolute Amiti - L!Elincia
    if "absAmitiBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        if defender.specialMax != -1:
            atkCombatBuffs[ATK] += max(11 - (defender.specialMax * 2), 3)
            atkCombatBuffs[SPD] += max(11 - (defender.specialMax * 2), 3)
        else:
            atkCombatBuffs[ATK] += 3
            atkCombatBuffs[SPD] += 3

        atkr.offensive_tempo = True

    if "absAmitiBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        if attacker.specialMax != -1:
            defCombatBuffs[ATK] += max(11 - (attacker.specialMax * 2), 3)
            defCombatBuffs[SPD] += max(11 - (attacker.specialMax * 2), 3)
        else:
            defCombatBuffs[ATK] += 3
            defCombatBuffs[SPD] += 3

        atkr.offensive_tempo = True

    # Queenslance (Base) - Geoffrey
    if "geoffreyBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        if not disableSupportEffects:
            for i in range(1, 5):
                max(atkNeutrBuffsStats[i], max([ally.get_total_buff(i) for ally in atkAllAllies if ally.isSupportOf(attacker)], default=0))

        atkr.DR_first_hit_NSP.append(40)

        if atkHasBonus:
            defr.follow_up_denials -= 1

    if "geoffreyBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        if not disableSupportEffects:
            for i in range(1, 5):
                max(defNeutrBuffsStats[i], max([ally.get_total_buff(i) for ally in defAllAllies if ally.isSupportOf(defender)], default=0))

        defr.DR_first_hit_NSP.append(40)

        if defHasBonus:
            atkr.follow_up_denials -= 1

    # Radiant Scrolls - NI!Sanaki
    if "niSanakiBoost" in atkSkills:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[RES] -= 6

        Y = abs(min(sum(defNeutrDebuffsStats), min([ally.get_penalty_total() for foe in defAllyWithin2Spaces], default=0)))

        atkr.true_all_hits += Y
        atkr.damage_reduction_reduction.append(Y * 4)

    if "niSanakiBoost" in defSkills and defAllyWithin2Spaces:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[RES] -= 6

        Y = abs(min(sum(atkNeutrDebuffsStats), min([ally.get_penalty_total() for foe in atkAllyWithin2Spaces], default=0)))

        defr.true_all_hits += Y
        defr.damage_reduction_reduction.append(Y * 4)

    # Light of Dawn (Base) - B!Micaiah
    if "micaiahBrave" in atkSkills:
        for i in range(1, 5):
            atkCombatBuffs[i] += -1 * defNeutrDebuffsStats[i]

    if "micaiahBrave" in defSkills:
        for i in range(1, 5):
            defCombatBuffs[i] += -1 * atkNeutrDebuffsStats[i]

    # Light of Dawn (Refine Base) - B!Micaiah
    if "dawnLight" in atkSkills and (defHPGreaterEqual75Percent or defHasPenalty):
        for i in range(1, 5):
            atkCombatBuffs[i] += 4 + (-1 * defNeutrDebuffsStats[i])

    if "dawnLight" in defSkills and (atkHPGreaterEqual75Percent or atkHasPenalty):
        for i in range(1, 5):
            defCombatBuffs[i] += 4 + (-1 * atkNeutrDebuffsStats[i])

    # Light of Dawn (Refine Eff) - B!Micaiah
    if "BATHED IN RADIANT DAWN" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[RES] += 6
        atkr.follow_ups_skill += 1

    if "BATHED IN RADIANT DAWN" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[RES] += 6
        defr.follow_ups_skill += 1

    # Joyful Vows (Base) - BR!Micaiah
    if "brMicaiahBoost" in atkSkills and atkHasBonus:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[RES] += 6
        defr.follow_up_denials -= 1

    if "brMicaiahBoost" in defSkills and defHasBonus:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[RES] += 6

    # Joyful Vows (Refine Base) - BR!Micaiah
    if "brMicaiahRefine" in atkSkills and (atkHasBonus or defHasPenalty):
        atkCombatBuffs[ATK] += 6 + max(-sum(defNeutrDebuffsStats), max([-ally.get_penalty_total() for foe in defAllyWithin2Spaces], default=0))
        atkCombatBuffs[RES] += 6
        atkr.follow_ups_skill += 1
        defr.follow_up_denials -= 1

    if "brMicaiahRefine" in defSkills and (defHasBonus or atkHasPenalty):
        defCombatBuffs[ATK] += 6 + max(-sum(atkNeutrDebuffsStats), max([-ally.get_penalty_total() for foe in atkAllyWithin2Spaces], default=0))
        defCombatBuffs[RES] += 6
        defr.follow_ups_skill += 1
        atkr.follow_up_denials -= 1

    # Joyful Vows (Refine Eff) - BR!Micaiah
    if "micaiahLove" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[RES] += 5
        atkr.damage_reduction_reduction.append(50)

    if "micaiahLove" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[RES] += 5
        defr.damage_reduction_reduction.append(50)

    # Prescience - L!Micaiah
    if "prescience" in atkSkills: atkr.DR_first_hit_NSP.append(30)
    if "prescience" in defSkills and attacker.wpnType in RANGED_WEAPONS: defr.DR_first_hit_NSP.append(30)

    if "prescienceII" in atkSkills:
        defCombatBuffs[SPD] += min(defNeutrDebuffsStats[SPD], min([ally.get_total_debuff(SPD) for ally in defAllyWithin2Spaces], default=0))
        defCombatBuffs[RES] += min(defNeutrDebuffsStats[RES], min([ally.get_total_debuff(RES) for ally in defAllyWithin2Spaces], default=0))
        atkr.DR_first_hit_NSP.append(30)
        atkr.offensive_tempo = True

    # Prescience II - L!Micaiah
    if "prescienceII" in defSkills:
        atkCombatBuffs[SPD] += min(atkNeutrDebuffsStats[SPD], min([ally.get_total_debuff(SPD) for ally in atkAllyWithin2Spaces], default=0))
        atkCombatBuffs[RES] += min(atkNeutrDebuffsStats[RES], min([ally.get_total_debuff(RES) for ally in atkAllyWithin2Spaces], default=0))
        defr.DR_first_hit_NSP.append(30)
        defr.offensive_tempo = True

    # Yune's Protection - X!Micaiah
    # https://www.reddit.com/r/FireEmblemHeroes/comments/1d9diea/mistranslation_in_attuned_micaiahs_b_skill_its/
    if "yunesProtection" in atkSkills:
        X = abs(min(sum(defNeutrDebuffsStats), min([ally.get_penalty_total() for foe in defAllyWithin2Spaces], default=0)))

        defCombatBuffs[ATK] -= 5 + X
        defCombatBuffs[RES] -= 5 + X
        atkr.damage_reduction_reduction.append(50)

    if "yunesProtection" in defSkills and defAllyWithin2Spaces:
        X = abs(min(sum(atkNeutrDebuffsStats), min([ally.get_penalty_total() for foe in atkAllyWithin2Spaces], default=0)))

        atkCombatBuffs[ATK] -= 5 + X
        atkCombatBuffs[RES] -= 5 + X
        defr.damage_reduction_reduction.append(50)

    # Maiden's Tome - E!Micaiah
    if "eMicaiahBoost" in atkSkills:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]

        X = abs(min(sum(defNeutrDebuffsStats), min([ally.get_penalty_total() for foe in defAllyWithin2Spaces], default=0)))
        atkr.true_all_hits += X
        atkr.TDR_all_hits += 7
        atkr.sp_jump_first += 1

    if "eMicaiahBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + min(len(defAllyWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]

        X = abs(min(sum(atkNeutrDebuffsStats), min([ally.get_penalty_total() for foe in atkAllyWithin2Spaces], default=0)))
        defr.true_all_hits += X
        defr.TDR_all_hits += 7
        defr.sp_jump_first += 1

    # Micaiah Ring
    if "heal us" in atkSkills:
        atkr.true_sp += attacker.specialMax * 4

    if "heal us" in defSkills:
        defr.true_sp += defender.specialMax * 4

    # Silence Ward
    if "driveSilence" in atkSkills:
        atkCombatBuffs[ATK] += atkSkills["driveSilence"]
        atkCombatBuffs[RES] += atkSkills["driveSilence"]

        if "silenceWard4" in atkSkills and atkSpTriggeredByAttack:
            atkr.sp_jump_first += 1

    if "driveSilence" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += defSkills["driveSilence"]
        defCombatBuffs[RES] += defSkills["driveSilence"]
        disableCannotCounter = True

        if "silenceWard4" in defSkills and defSpTriggeredByAttack:
            defr.sp_jump_first += 1

    if "silenceWard4_f" in atkSkills and atkSpTriggeredByAttack:
        atkr.sp_jump_first += atkSkills["silenceWard4_f"]

    if "driveNullC" in defSkills:
        disableCannotCounter = True

        if "silenceWard4_f" in defSkills and defSpTriggeredByAttack:
            defr.sp_jump_first += defSkills["silenceWard4_f"]

    # Chaos Manifest (Base) - Yune
    if "yunePenalty" in atkSkills and defHasPenalty:
        atkCombatBuffs[ATK] += 6
        atkr.follow_ups_skill += 1

    if "yunePenalty" in defSkills and atkHasPenalty:
        defCombatBuffs[ATK] += 6
        defr.follow_ups_skill += 1

    # Chaos Manifest (Refine Eff) - Yune
    if "yuneRefinePenalty" in atkSkills and (defHPGreaterEqual75Percent or defHasPenalty):
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[RES] += 5
        atkr.follow_ups_skill += 1

        highest_penalty_total = 0

        for foe in defAllyWithin2Spaces:
            foe_panic = Status.Panic in foe.statusNeg and Status.NullPanic not in foe.statusPos

            cur_penalty_total = 0

            i = 1
            while i < 5:
                cur_debuff = foe.debuffs[i]
                if foe_panic: cur_debuff += foe.buffs[i] * -1
                cur_penalty_total += cur_debuff

                i += 1

            highest_penalty_total = min(highest_penalty_total, cur_penalty_total)

        cur_penalty_total = 0

        i = 1
        while i < 5:
            cur_debuff = defNeutrDebuffsStats[i]
            cur_penalty_total += cur_debuff
            i += 1

        highest_penalty_total = min(highest_penalty_total, cur_penalty_total)

        atkr.DR_first_hit_NSP.append(-2 * highest_penalty_total)

    if "yuneRefinePenalty" in defSkills and (atkHPGreaterEqual75Percent or atkHasPenalty):
        defCombatBuffs[ATK] += 6
        defCombatBuffs[RES] += 5
        defr.follow_ups_skill += 1

    # Chaos Manifest (Refine Eff) - Yune
    if "yuneDmg" in atkSkills:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[RES] += 5

        highest_penalty_total = 0

        for foe in defAllyWithin2Spaces:
            foe_panic = Status.Panic in foe.statusNeg and Status.NullPanic not in foe.statusPos

            cur_penalty_total = 0

            i = 1
            while i < 5:
                cur_debuff = foe.debuffs[i]
                if foe_panic: cur_debuff += foe.buffs[i] * -1
                cur_penalty_total += cur_debuff

                i += 1

            highest_penalty_total = min(highest_penalty_total, cur_penalty_total)

        cur_penalty_total = 0

        i = 1
        while i < 5:
            cur_debuff = defNeutrDebuffsStats[i]
            cur_penalty_total += cur_debuff
            i += 1

        highest_penalty_total = min(highest_penalty_total, cur_penalty_total)

        atkr.true_all_hits += highest_penalty_total * -1

    if "yuneDmg" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[RES] += 5

        highest_penalty_total = 0

        for foe in atkAllyWithin2Spaces:
            foe_panic = Status.Panic in foe.statusNeg and Status.NullPanic not in foe.statusPos

            cur_penalty_total = 0

            i = 1
            while i < 5:
                cur_debuff = foe.debuffs[i]
                if foe_panic: cur_debuff += foe.buffs[i] * -1
                cur_penalty_total += cur_debuff

                i += 1

            highest_penalty_total = min(highest_penalty_total, cur_penalty_total)

        cur_penalty_total = 0

        i = 1
        while i < 5:
            cur_debuff = atkNeutrDebuffsStats[i]
            cur_penalty_total += cur_debuff
            i += 1

        highest_penalty_total = min(highest_penalty_total, cur_penalty_total)

        defr.true_all_hits += highest_penalty_total * -1

    # Order's Sentence (Base) - Ashera
    if "asheraBoost" in atkSkills and (atkHPGreaterEqual25Percent or atkHasBonus):
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkCombatBuffs[ATK] += max([ally.get_bonus_total() for ally in atkAllyWithin2Spaces], default=0)

    if "asheraBoost" in defSkills and (defHPGreaterEqual25Percent or defHasBonus):
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defCombatBuffs[ATK] += max([ally.get_bonus_total() for ally in defAllyWithin2Spaces], default=0)

    # Order's Sentence (Refine Base) - Ashera
    if "asheraRefineBoost" in atkSkills and (atkHPGreaterEqual25Percent or atkHasBonus):
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkCombatBuffs[ATK] += trunc(1.5 * max([ally.get_bonus_total() for ally in atkAllyWithin3Spaces], default=0))

    if "asheraRefineBoost" in defSkills and (defHPGreaterEqual25Percent or defHasBonus):
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defCombatBuffs[ATK] += trunc(1.5 * max([ally.get_bonus_total() for ally in defAllyWithin3Spaces], default=0))

    if "FOOL" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.TDR_first_strikes += trunc(0.5 * max([ally.get_bonus_total() for ally in atkAllyWithin3Spaces], default=0))
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "FOOL" in defSkills and defender.wpnType in RANGED_WEAPONS:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.TDR_first_strikes += trunc(0.5 * max([ally.get_bonus_total() for ally in atkAllyWithin3Spaces], default=0))
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Order's Restraint+ - Ashera
    if "ordersRestraintPlus" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "ordersRestraintPlus" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Arch-Sage Tome (Base) - B!Soren
    if "bSorenBoost" in atkSkills and atkAllyWithin3Spaces:
        X = max(sum(atkNeutrBuffsStats), max([ally.get_bonus_total() for ally in atkAllyWithin2Spaces], default=0))
        atkCombatBuffs = [x + (5 + X) for x in atkCombatBuffs]
        atkr.stat_scaling_DR.append((RES, 40))

    if "bSorenBoost" in defSkills and defAllyWithin3Spaces:
        X = max(sum(defNeutrBuffsStats), max([ally.get_bonus_total() for ally in defAllyWithin2Spaces], default=0))
        defCombatBuffs = [x + (5 + X) for x in defCombatBuffs]
        defr.stat_scaling_DR.append((RES, 40))

    # Rare Talent
    if "rareTalent" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 7 for x in atkCombatBuffs]
        atkr.disable_foe_hexblade = True

    if "rareTalent" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 7 for x in defCombatBuffs]
        defr.disable_foe_hexblade = True

    # Sealed Falchion (Refine) - Awakening Falchion users + P!Chrom
    if "newSealedFalchion" in atkSkills and (not atkHPEqual100Percent or atkHasBonus):
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

    if "newSealedFalchion" in defSkills and (not defHPEqual100Percent or defHasBonus):
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

    # Randgríðr (Refine Eff) - L!Chrom
    if "OUT OF MY WAY" in atkSkills:
        atkCombatBuffs = [x + 4 + 2 * (len(attacker.statusPos) + len(attacker.statusNeg)) for x in atkCombatBuffs]

        if atkHasBonus:
            atkr.follow_ups_skill += 1
            atkr.DR_first_hit_NSP.append(30)

    if "OUT OF MY WAY" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 4 + 2 * (len(defender.statusPos) + len(defender.statusNeg)) for x in defCombatBuffs]

        if defHasBonus:
            defr.follow_ups_skill += 1
            defr.DR_first_hit_NSP.append(30)

    # Geirdriful (Base/Refine Base) - B!Chrom
    if "OUR BONDS" in atkSkills or "bChromBoost" in atkSkills:
        atkCombatBuffs = [x + 5 + 2 * (len(attacker.statusPos) + len(attacker.statusNeg)) for x in atkCombatBuffs]

        if "OUR BONDS" in atkSkills:
            atkr.DR_first_hit_NSP.append(40)
        else:
            atkr.DR_first_strikes_NSP.append(40)

        if atkHasBonus:
            atkr.spGainOnAtk += 1
            atkr.spGainWhenAtkd += 1

    if ("OUR BONDS" in defSkills or "bChromBoost" in defSkills) and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 + 2 * (len(defender.statusPos) + len(defender.statusNeg)) for x in defCombatBuffs]

        if "OUR BONDS" in defSkills:
            defr.DR_first_hit_NSP.append(40)
        else:
            defr.DR_first_strikes_NSP.append(40)

        if defHasBonus:
            defr.spGainOnAtk += 1
            defr.spGainWhenAtkd += 1

    # Geirdriful (Refine Eff) - B!Chrom
    if "I WILL PIERCE THE SNAKE" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.true_all_hits += min(len(attacker.statusPos) * 4, 16)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "I WILL PIERCE THE SNAKE" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.true_all_hits += min(len(defender.statusPos) * 4, 16)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Arcane Devourer
    if "Ganondorf" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkr.DR_first_hit_NSP.append(40)

    if "Ganondorf" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defr.DR_first_hit_NSP.append(40)

    # Thögn (Refine Eff) - L!Lucina
    if "lucinaPenaltyPunisher" in atkSkills and atkAllyWithin3Spaces:
        for i in range(1, 4): defCombatBuffs[i] += -4 + defNeutrDebuffsStats[i]

    if "lucinaPenaltyPunisher" in defSkills and defAllyWithin3Spaces:
        for i in range(1, 4): atkCombatBuffs[i] += -4 + atkNeutrDebuffsStats[i]


    # Arcane Þrima
    if "thrima" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        for i in range(1, 5):
            defCombatBuffs[i] -= abs(min(defNeutrDebuffsStats[i], min([ally.get_total_debuff(i) for ally in defAllyWithin2Spaces], default=0)))

        atkr.offensive_tempo = True
        atkr.defensive_tempo = True

    if "thrima" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        for i in range(1, 5):
            atkCombatBuffs[i] -= abs(min(atkNeutrDebuffsStats[i], min([ally.get_total_debuff(i) for ally in atkAllyWithin2Spaces], default=0)))

        defr.offensive_tempo = True
        defr.defensive_tempo = True

    # Blade of Favors (Base) - Gregor
    if "gregorSword!" in atkSkills:
        atkr.DR_first_hit_NSP.append(40)
        for i in range(1, 4):
            defCombatBuffs[i] -= 5 + abs(defNeutrDebuffsStats[i])

    if "gregorSword!" in defSkills and defAllyWithin2Spaces:
        defr.DR_first_hit_NSP.append(40)
        for i in range(1, 4):
            atkCombatBuffs[i] -= 5 + abs(atkNeutrDebuffsStats[i])

    # Aversa's Night (Refine Eff) - Aversa
    if "aversaPenaltyPunisher" in atkSkills and (defHPGreaterEqual75Percent or defHasPenalty):
        defCombatBuffs[ATK] -= 4 + defNeutrDebuffsStats[ATK]
        defCombatBuffs[SPD] -= 4 + defNeutrDebuffsStats[SPD]
        defCombatBuffs[RES] -= 4 + defNeutrDebuffsStats[RES]

    if "aversaPenaltyPunisher" in defSkills and (atkHPGreaterEqual75Percent or atkHasPenalty):
        atkCombatBuffs[ATK] -= 4 + atkNeutrDebuffsStats[ATK]
        atkCombatBuffs[SPD] -= 4 + atkNeutrDebuffsStats[SPD]
        atkCombatBuffs[RES] -= 4 + atkNeutrDebuffsStats[RES]

    # Axe of Despair (Base) - FA!F!Morgan / Tome of Despair (Base) - FA!M!Morgan
    if ("axe o' despair" in atkSkills or "tome o' despair" in atkSkills) and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 6

        if "axe o' despair" in atkSkills:
            defCombatBuffs[DEF] -= 6
        else:
            defCombatBuffs[RES] -= 6

        bonus_penalty_total = sum(atkNeutrBuffsStats) + abs(sum(defNeutrDebuffsStats))

        if bonus_penalty_total >= 5:
            defr.follow_up_denials -= 1
        if bonus_penalty_total >= 10:
            atkr.follow_ups_skill += 1
        if bonus_penalty_total >= 15:
            defr.spLossOnAtk -= 1
            defr.spLossWhenAtkd -= 1

    if ("axe o' despair" in defSkills or "tome o' despair" in defSkills) and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 6

        if "axe o' despair" in defSkills:
            atkCombatBuffs[DEF] -= 6
        else:
            atkCombatBuffs[RES] -= 6

        bonus_penalty_total = sum(defNeutrBuffsStats) + abs(sum(atkNeutrDebuffsStats))

        if bonus_penalty_total >= 5:
            atkr.follow_up_denials -= 1
        if bonus_penalty_total >= 10:
            defr.follow_ups_skill += 1
        if bonus_penalty_total >= 15:
            atkr.spLossOnAtk -= 1
            atkr.spLossWhenAtkd -= 1

    # Tome of Despair (Refine Base) - FA!M!Morgan
    if "faMMorganBoost" in atkSkills and atkHPGreaterEqual25Percent:
        X = max(sum(atkNeutrBuffsStats), max([ally.get_bonus_total() for ally in atkAllyWithin2Spaces], default=0))
        Y = abs(min(sum(defNeutrDebuffsStats), min([ally.get_penalty_total() for foe in defAllyWithin2Spaces], default=0)))

        atkr.true_all_hits += Y

        if X + Y >= 5:
            defr.follow_up_denials -= 1
        if X + Y >= 10:
            atkr.follow_ups_skill += 1
        if X + Y >= 15:
            defr.spLossOnAtk -= 1
            defr.spLossWhenAtkd -= 1

    if "faMMorganBoost" in defSkills and defHPGreaterEqual25Percent:
        X = max(sum(defNeutrBuffsStats), max([ally.get_bonus_total() for ally in defAllyWithin2Spaces], default=0))
        Y = abs(min(sum(atkNeutrDebuffsStats), min([ally.get_penalty_total() for foe in atkAllyWithin2Spaces], default=0)))

        defr.true_all_hits += Y

        if X + Y >= 5:
            atkr.follow_up_denials -= 1
        if X + Y >= 10:
            defr.follow_ups_skill += 1
        if X + Y >= 15:
            atkr.spLossOnAtk -= 1
            atkr.spLossWhenAtkd -= 1

    # Tome of Despair (Refine Eff) - FA!M!Morgan
    if "among uhhs" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 6 + trunc(0.10 * atkStats[RES])
        defCombatBuffs[RES] -= 6 + trunc(0.10 * atkStats[RES])
        atkr.TDR_stats.append((RES, 20))

    if "among uhhs" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 6 + trunc(0.10 * defStats[RES])
        atkCombatBuffs[RES] -= 6 + trunc(0.10 * defStats[RES])
        defr.TDR_stats.append((RES, 20))

    # Oracle's Breath (Base) - Nah
    if "nahFUDenial" in atkSkills and sum(atkNeutrBuffsStats):
        defr.follow_up_denials -= 1

    if "nahFUDenial" in defSkills and sum(defNeutrBuffsStats):
        atkr.follow_up_denials -= 1

    # Oracle's Breath (Refine Base) - Nah
    if "nahRefineDenial" in atkSkills and (atkHPGreaterEqual50Percent or atkHasBonus):
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defr.follow_up_denials -= 1

    if "nahRefineDenial" in defSkills and (defHPGreaterEqual50Percent or defHasBonus):
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkr.follow_up_denials -= 1

    # Oracle's Breath (Refine Base) - Nah
    if "nahI'dWin" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

        highest_stats = [0, 0, 0, 0, 0]
        for ally in atkAllyWithin2Spaces:
            ally_panic = Status.Panic in ally.statusNeg and Status.NullPanic not in ally.statusPos
            if ally_panic: continue

            i = 1
            while i < 5:
                cur_buff = ally.buffs[i]
                highest_stats[i] = max(highest_stats[i], cur_buff)
                i += 1

        i = 1
        while i < 5:
            atkCombatBuffs[i] += highest_stats[i]
            i += 1

    if "nahI'dWin" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

        highest_stats = [0, 0, 0, 0, 0]
        for ally in defAllyWithin2Spaces:
            ally_panic = Status.Panic in ally.statusNeg and Status.NullPanic not in ally.statusPos
            if ally_panic: continue

            i = 1
            while i < 5:
                cur_buff = ally.buffs[i]
                highest_stats[i] = max(highest_stats[i], cur_buff)
                i += 1

        i = 1
        while i < 5:
            defCombatBuffs[i] += highest_stats[i]
            i += 1

    # Stone of Delights - H!Nah
    if "hNahBoost" in atkSkills and atkAllyWithin3Spaces:
        Y = min(len(atkAllyWithin3RowsCols) * 3 + 5, 14)

        defCombatBuffs[ATK] -= Y
        defCombatBuffs[DEF] -= Y
        defCombatBuffs[RES] -= Y

        X = max(8, min(atkHPCur - defHPCur, 16))

        atkr.true_all_hits += X
        atkr.TDR_all_hits += X

    if "hNahBoost" in defSkills and defAllyWithin3Spaces:
        Y = 14 if savior_triggered else min(len(defAllyWithin3RowsCols) * 3 + 5, 14)

        atkCombatBuffs[ATK] -= Y
        atkCombatBuffs[DEF] -= Y
        atkCombatBuffs[RES] -= Y

        X = max(8, min(defHPCur - atkHPCur, 16))

        defr.true_all_hits += X
        defr.TDR_all_hits += X

    # Lance of Heroics (Refine Eff) - Cynthia
    if "cynthiaBoost" in atkSkills and atkAllyWithin3Spaces:
        for i in range(1, 5):
            atkCombatBuffs[i] += 4 + atkNeutrDebuffsStats[i] * -2

    if "cynthiaBoost" in defSkills and defAllyWithin3Spaces:
        for i in range(1, 5):
            defCombatBuffs[i] += 4 + defNeutrDebuffsStats[i] * -2

    # Ancient Ragnell - Priam
    if "ancientRagnell" in atkSkills and (atkHPGreaterEqual50Percent or atkHasBonus):
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[DEF] -= 6

    if "ancientRagnell" in defSkills and (defHPGreaterEqual50Percent or defHasBonus):
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[DEF] -= 6

    # Blood & Thunder - Noire
    if "bloodAndThunder" in defSkills and (Status.Anathema in defender.statusPos or atkHasPenalty):
        atkr.special_disabled = True

    # Levin Dagger (Base) - Gangrel
    if "levinDagger" in atkSkills and defHasPenalty:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((RES, 20))

    if "levinDagger" in defSkills and atkHasPenalty:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.true_stat_damages.append((RES, 20))

    # Levin Dagger (Refine Base) - Gangrel
    if "gangrelBoost" in atkSkills and (atkHasBonus or defHasPenalty):
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((RES, 20))

    if "gangrelBoost" in defSkills and (defHasBonus or atkHasPenalty):
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.true_stat_damages.append((RES, 20))

    # Levin Dagger (Refine Eff) - Gangrel
    if "gangrelThe" in atkSkills and atkHPGreaterEqual25Percent:
        atkr.hexblade = True
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.DR_first_hit_NSP.append(30)
        for i in range(1, 5):
            defCombatBuffs[i] += min(defNeutrDebuffsStats[i], min([ally.get_total_debuff(i) for ally in defAllyWithin2Spaces], default=0))

    if "gangrelThe" in defSkills and defHPGreaterEqual25Percent:
        defr.hexblade = True
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.DR_first_hit_NSP.append(30)
        for i in range(1, 5):
            atkCombatBuffs[i] += min(atkNeutrDebuffsStats[i], min([ally.get_total_debuff(i) for ally in atkAllyWithin2Spaces], default=0))

    # Grimleal Text - Validar
    if "validarFINALLY" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 6
        defCombatBuffs[RES] -= 6
        atkr.follow_ups_skill += 1
        atkr.true_all_hits += 4 * (len(defender.statusNeg) + sum(len(ally.statusNeg) for ally in defAllyWithin2Spaces))

    if "validarFINALLY" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 6
        atkCombatBuffs[RES] -= 6
        defr.follow_ups_skill += 1
        defr.true_all_hits += 4 * (len(attacker.statusNeg) + sum(len(ally.statusNeg) for ally in atkAllyWithin2Spaces))

    # Gloom Breath (Refine Eff) - F!Corrin
    if "corrinPenaltyTheft" in atkSkills:
        for i in range(1, 5): atkCombatBuffs[i] += defNeutrDebuffsStats[i] * -1

    if "corrinPenaltyTheft" in defSkills:
        for i in range(1, 5): defCombatBuffs[i] += atkNeutrDebuffsStats[i] * -1

    # Setsuna's Yumi
    if "setsunaBonusBoost" in atkSkills and atkHasBonus:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkPenaltiesNeutralized[ATK] = True
        atkPenaltiesNeutralized[SPD] = True

    if "setsunaBonusBoost" in atkSkills and defHasBonus:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defPenaltiesNeutralized[ATK] = True
        defPenaltiesNeutralized[SPD] = True

    # Arthur's Axe
    if "arthurDebuffer" in atkSkills and (atkHasPenalty or not atkHPEqual100Percent):
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

    if "arthurDebuffer" in defSkills and (defHasPenalty or not defHPEqual100Percent):
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

    if "arthurBonus" in atkSkills and sum(atkNeutrBuffsStats) > 0:
        atkCombatBuffs = [x + 3 for x in atkCombatBuffs]

    if "arthurBonus" in defSkills and sum(defNeutrBuffsStats) > 0:
        defCombatBuffs = [x + 3 for x in defCombatBuffs]

    # Saizo's Star (Refine Eff) - Saizo
    if "saizoBoost" in atkSkills:
        for i in range(1, 5): atkCombatBuffs[i] += -1 * defNeutrDebuffsStats[i]
    if "saizoBoost" in defSkills:
        for i in range(1, 5): defCombatBuffs[i] += -1 * atkNeutrDebuffsStats[i]

    # Sun Dragonstone (Base) - Kana
    if "kanaBoost" in atkSkills and sum(atkNeutrBuffsStats):
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
    if "kanaBoost" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Astral Breath (Refine Base) - Lilith
    if "petah, the horse is here" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(spaces_moved_by_atkr + 4, 8) for x in atkCombatBuffs]
        atkr.true_all_hits += max(sum(atkNeutrBuffsStats), max([ally.get_bonus_total() for ally in atkAllyWithin2Spaces], default=0))
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "petah, the horse is here" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(spaces_moved_by_atkr + 4, 8) for x in defCombatBuffs]
        defr.true_all_hits += max(sum(defNeutrBuffsStats), max([ally.get_bonus_total() for ally in defAllyWithin2Spaces], default=0))
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # Silent Breath - FA!Anankos
    if "THIS IS NOT THE PATH I AM MEANT TO TREAD" in atkSkills and defHPGreaterEqual75Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        for i in range(1, 5):
            defCombatBuffs[i] -= defNeutrBuffsStats[i] * 2

        atkr.true_stat_damages.append((SPD, 20))
        atkr.TDR_first_strikes += 7

    if "THIS IS NOT THE PATH I AM MEANT TO TREAD" in defSkills:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        for i in range(1, 5):
            atkCombatBuffs[i] -= atkNeutrBuffsStats[i] * 2

        defr.true_stat_damages.append((SPD, 20))
        defr.TDR_first_strikes += 7

    # Shadowy Quill (Base) - TH!Nina
    if "thNinaBoost" in atkSkills:
        atkr.hexblade = True
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

        for i in range(1, 5):
            atkr.true_all_hits += max(atkNeutrBuffsStats[i], abs(defNeutrDebuffsStats[i]))

    if "thNinaBoost" in defSkills and defAllyWithin2Spaces:
        defr.hexblade = True
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

        for i in range(1, 5):
            defr.true_all_hits += max(defNeutrBuffsStats[i], abs(atkNeutrDebuffsStats[i]))

    # Retainer's Report (Base) - Hubert
    if "hubertBoost" in atkSkills and (defHPGreaterEqual75Percent or defHasPenalty):
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1

    if "hubertBoost" in defSkills and (atkHPGreaterEqual75Percent or atkHasPenalty):
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.follow_ups_skill += 1

    # Retainer's Report (Refine Eff) - Hubert
    if "hubertRuse" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]

    if "hubertRuse" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]

    # Persecution Bow (Base) - Bernadetta
    if "bernieBoost" in atkSkills and (atkHasPenalty or not atkHPEqual100Percent):
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.self_desperation = True

    if "bernieBoost" in defSkills and (defHasPenalty or not defHPEqual100Percent):
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

    # Persecution Bow (Refine Base) - Bernadetta
    if "bernieRefineBoost" in atkSkills and (atkHasPenalty or not atkHPEqual100Percent):
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.follow_ups_skill += 1
        atkr.self_desperation = True

    if "bernieRefineBoost" in defSkills and (defHasPenalty or not defHPEqual100Percent):
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.follow_ups_skill += 1

    # Persecution Bow (Refine Eff) - Bernadetta
    if "rock" in atkSkills:
        atkCombatBuffs[ATK] += min((atkStats[HP] - atkHPCur) * 2 + 5, 15)
        atkCombatBuffs[SPD] += min((atkStats[HP] - atkHPCur) * 2 + 5, 15)
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "rock" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += min((defStats[HP] - defHPCur) * 2 + 5, 15)
        defCombatBuffs[SPD] += min((defStats[HP] - defHPCur) * 2 + 5, 15)
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Hrist (Refine Base) - WI!Bernadetta
    if "wiBernieRefine" in atkSkills and (not atkHPEqual100Percent or atkHasPenalty):
        atkCombatBuffs[ATK] += 6 + trunc(0.10 * atkStats[SPD])
        atkCombatBuffs[SPD] += 6 + trunc(0.10 * atkStats[SPD])
        atkr.true_stat_damages.append((SPD, 20))
        atkr.DR_first_strikes_NSP.append(30)

    if "wiBernieRefine" in defSkills and (not defHPEqual100Percent or defHasPenalty):
        defCombatBuffs[ATK] += 6 + trunc(0.10 * defStats[SPD])
        defCombatBuffs[SPD] += 6 + trunc(0.10 * defStats[SPD])
        defr.true_stat_damages.append((SPD, 20))
        defr.DR_first_strikes_NSP.append(30)

    # Hrist (Refine Eff) - WI!Bernadetta
    if "merryBernie" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkr.bernie_resonance = True
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "merryBernie" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defr.bernie_resonance = True
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # The Inexhaustible - B!Bernadetta
    if "bBernieBoost" in atkSkills:
        atkCombatBuffs = [x + 5 + trunc(0.15 * atkStats[SPD]) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))
        atkr.damage_reduction_reduction.append(50)

    if "bBernieBoost" in defSkills and defHasBonus:
        defCombatBuffs = [x + 5 + trunc(0.15 * defStats[SPD]) for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))
        defr.damage_reduction_reduction.append(50)

    # Paranoia - B!Bernadetta
    if "paranoia" in atkSkills and not atkHPEqual100Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.offensive_tempo = True

    if "paranoia" in defSkills and not defHPEqual100Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.offensive_tempo = True

    if Status.Paranoia in attacker.statusPos and not atkHPEqual100Percent:
        atkCombatBuffs[ATK] += 5
        atkr.self_desperation = True

    if Status.Paranoia in defender.statusPos and not defHPEqual100Percent:
        atkCombatBuffs[ATK] += 5

        if (attacker.getRange() == defender.getRange()) or len(attacker.statusNeg) >= 3:
            defr.vantage = True

    # Sevenfold Gifts (Base) - WI!Dorothea
    if "wiDorotheaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

    if "wiDorotheaBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

    # Stoutheart Lance (Base) - Ferdinand
    if "ferdinandBoost" in atkSkills and atkHPGreaterEqual25Percent:
        for i in range(1, 5):
            atkCombatBuffs[i] += 4 + (-2 * atkNeutrDebuffsStats[i])

        if atkHPGreaterEqual50Percent:
            atkr.follow_ups_skill += 1
            if atkHPGreaterEqual75Percent:
                atkr.true_all_hits += 7

    if "ferdinandBoost" in defSkills and defHPGreaterEqual25Percent:
        for i in range(1, 5):
            defCombatBuffs[i] += 4 + (-2 * defNeutrDebuffsStats[i])

        if defHPGreaterEqual50Percent:
            defr.follow_ups_skill += 1
            if defHPGreaterEqual75Percent:
                defr.true_all_hits += 7

    # Stoutheart Lance (Refine Eff) - Ferdinand
    if "RIP Billy" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.DR_first_hit_NSP.append(30)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "RIP Billy" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.DR_first_hit_NSP.append(30)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Divine Sea Spear (Base) - SU!Ashe
    if "suAsheBoost" in atkSkills:
        atkCombatBuffs[ATK] += 3 + defNeutrBuffsStats[ATK]
        defCombatBuffs[ATK] -= defNeutrBuffsStats[ATK]
        atkCombatBuffs[SPD] += 3 + defNeutrBuffsStats[SPD]
        defCombatBuffs[SPD] -= defNeutrBuffsStats[SPD]
        atkCombatBuffs[DEF] += 3 + defNeutrBuffsStats[DEF]
        defCombatBuffs[DEF] -= defNeutrBuffsStats[DEF]

    if "suAsheBoost" in defSkills and atkHPGreaterEqual75Percent:
        atkCombatBuffs[ATK] += 3 + defNeutrBuffsStats[ATK]
        defCombatBuffs[ATK] -= defNeutrBuffsStats[ATK]
        atkCombatBuffs[SPD] += 3 + defNeutrBuffsStats[SPD]
        defCombatBuffs[SPD] -= defNeutrBuffsStats[SPD]
        atkCombatBuffs[DEF] += 3 + defNeutrBuffsStats[DEF]
        defCombatBuffs[DEF] -= defNeutrBuffsStats[DEF]

    # Just Bow
    if "asheBoost" in atkSkills:
        atkCombatBuffs = [x + 5 + trunc(0.15 * atkStats[SPD]) for x in atkCombatBuffs]
        atkr.true_all_hits += 7
        atkr.offensive_tempo = True
        atkr.sp_pierce_DR = True

        atkr.sp_jump_first += 1
        if defSpTriggeredByAttack:
            defr.sp_jump_first -= 1

    if "asheBoost" in defSkills and defAllyWithin3RowsCols:
        defCombatBuffs = [x + 5 + trunc(0.15 * defStats[SPD]) for x in defCombatBuffs]
        defr.true_all_hits += 7
        defr.offensive_tempo = True
        defr.sp_pierce_DR = True

    if "asheBoost_f" in atkSkills and defSpTriggeredByAttack:
        defr.sp_jump_first -= atkSkills["asheBoost_f"]

    # Cunning Bow (Base) - Claude
    if "claudeDebuff" in atkSkills and sum(atkNeutrBuffsStats) + abs(sum(defNeutrDebuffsStats)) >= 10:
        defCombatBuffs = [x - 5 for x in defCombatBuffs]

    if "claudeDebuff" in defSkills and sum(defNeutrBuffsStats) + abs(sum(atkNeutrDebuffsStats)) >= 10:
        atkCombatBuffs = [x - 5 for x in atkCombatBuffs]

    # Cunning Bow (Refine Base) - Claude
    if "claudeRefineDebuff" in atkSkills:
        if atkHasBonus or defHasPenalty:
            defCombatBuffs = [x - 5 for x in defCombatBuffs]

        stat_total = sum(atkNeutrBuffsStats) + abs(sum(defNeutrDebuffsStats))

        atkr.DR_first_hit_NSP.append(min(stat_total * 3, 60))

        if stat_total > 10: atkr.offensive_NFU = True

    if "claudeRefineDebuff" in defSkills:
        if defHasBonus or atkHasPenalty:
            atkCombatBuffs = [x - 5 for x in atkCombatBuffs]

        stat_total = sum(defNeutrBuffsStats) + abs(sum(atkNeutrDebuffsStats))

        if stat_total > 10: defr.offensive_NFU = True

    # Cunning Bow (Refine Eff) - Claude
    if "three houses discourse" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5

        atkCombatBuffs[ATK] += atkNeutrBuffsStats[ATK]
        defCombatBuffs[DEF] += defNeutrDebuffsStats[DEF]

    if "three houses discourse" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5

        defCombatBuffs[ATK] += defNeutrBuffsStats[ATK]
        atkCombatBuffs[DEF] += atkNeutrDebuffsStats[DEF]

    # Wind Parthia (Base) - B!Claude
    if "claudeWind" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.surge_heal += trunc(atkStats[HP] * 0.50)

    if "claudeWind" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.surge_heal += trunc(atkStats[HP] * 0.50)

    # Wind Parthia (Refine Base) - B!Claude
    if "claudeRefineWind" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.surge_heal += trunc(atkStats[HP] * 0.50)
        atkr.deep_wounds_allowance.append(60)

    if "claudeRefineWind" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.surge_heal += trunc(atkStats[HP] * 0.50)
        defr.deep_wounds_allowance.append(60)

    # Wind Parthia (Refine Eff) - B!Claude
    if "o heck I never learned how to twirl my arrow guys lol uhh GANG SIGN(????)" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.offensive_NFU = True
        atkr.offensive_tempo = True
        if atkHasBonus:
            atkr.DR_first_hit_NSP.append(30)

    if "o heck I never learned how to twirl my arrow guys lol uhh GANG SIGN(????)" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.offensive_NFU = True
        defr.offensive_tempo = True
        if defHasBonus:
            defr.DR_first_hit_NSP.append(30)

    # Frozen Delight (Base) - SU!Claude
    if "suClaudeBoost" in atkSkills:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6

        if sum(atkNeutrBuffsStats) + abs(sum(defNeutrDebuffsStats)) >= 12:
            atkr.brave = True

    if "suClaudeBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6

    # Mastermind - T!Lysithea
    if "mastermind" in atkSkills:
        atkCombatBuffs[ATK] += 9
        atkCombatBuffs[SPD] += 9

        X = trunc(0.80 * max(sum(atkNeutrBuffsStats), max([ally.get_bonus_total() for ally in atkAllyWithin2Spaces], default=0)))
        Y = trunc(0.80 * abs(min(sum(defNeutrDebuffsStats), min([ally.get_penalty_total() for foe in defAllyWithin2Spaces], default=0))))

        atkr.true_all_hits += X + Y

    if "mastermind" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 9
        defCombatBuffs[SPD] += 9

        X = trunc(0.80 * max(sum(defNeutrBuffsStats), max([ally.get_bonus_total() for ally in defAllyWithin2Spaces], default=0)))
        Y = trunc(0.80 * abs(min(sum(atkNeutrDebuffsStats), min([ally.get_penalty_total() for foe in atkAllyWithin2Spaces], default=0))))

        defr.true_all_hits += X + Y

    # Asclepius (Base) - Cornelia
    if "there is a camera and microphone in this device" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[RES] += 6
        atkr.true_all_hits += abs(sum(defNeutrDebuffsStats))

    if "there is a camera and microphone in this device" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[RES] += 6
        defr.true_all_hits += abs(sum(defNeutrDebuffsStats))

    # Warrior's Sword (Base) - Holst
    if "I think that enemy got THE POINT" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        for i in range(1, 5):
            atkCombatBuffs[i] += atkNeutrBuffsStats[i]

        defr.spLossWhenAtkd -= 1
        defr.spLossOnAtk -= 1

    if "I think that enemy got THE POINT" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        for i in range(1, 5):
            defCombatBuffs[i] += defNeutrBuffsStats[i]

        atkr.spLossWhenAtkd -= 1
        atkr.spLossOnAtk -= 1

    # Partnership Bow - SU!Shamir
    if "the two" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        defCombatBuffs[SPD] -= min((len(defender.statusPos) + len(defender.statusNeg)) * 4, 16)
        defCombatBuffs[DEF] -= min((len(defender.statusPos) + len(defender.statusNeg)) * 4, 16)

        if defHasPenalty or defHasBonus:
            atkr.offensive_tempo = True
            atkr.offensive_NFU = True

    if "the two" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        atkCombatBuffs[SPD] -= min((len(attacker.statusPos) + len(attacker.statusNeg)) * 4, 16)
        atkCombatBuffs[DEF] -= min((len(attacker.statusPos) + len(attacker.statusNeg)) * 4, 16)

        if atkHasPenalty or atkHasBonus:
            defr.offensive_tempo = True
            defr.offensive_NFU = True

    # Scythe of Sariel (Base) - Death Knight
    if "oh boy I hope there's no magic babies outside my house today" in atkSkills and (sum(defNeutrBuffsStats) or Status.MobilityUp in defender.statusPos):
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defr.follow_up_denials -= 1

    if "oh boy I hope there's no magic babies outside my house today" in defSkills and (sum(atkNeutrBuffsStats) or Status.MobilityUp in attacker.statusPos):
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkr.follow_up_denials -= 1

    # Scythe of Sariel (Refine Base) - Death Knight
    if "scytheRef" in atkSkills and (defHasBonus or defHPGreaterEqual75Percent):
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        defr.follow_up_denials -= 1

    if "scytheRef" in defSkills and (atkHasBonus or atkHPGreaterEqual75Percent):
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        atkr.follow_up_denials -= 1

    # Scythe of Sariel (Refine Eff) - Death Knight
    if "deathScythe" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1

    if "deathScythe" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.follow_ups_skill += 1

    # Icebound Tome - Ivy
    if "ivyBoost" in atkSkills:
        atkCombatBuffs = [x + min(max(5, trunc(0.25 * defStats[ATK]) - 4), 14) for x in atkCombatBuffs]
        atkr.offensive_tempo = True
        atkr.DR_all_hits_NSP.append(min(20 + spaces_moved_by_atkr * 10, 70))
        atkr.follow_up_heal += 7

    if "ivyBoost" in defSkills and defender.wpnType in RANGED_WEAPONS:
        defCombatBuffs = [x + min(max(5, trunc(0.25 * atkStats[ATK]) - 4), 14) for x in defCombatBuffs]
        defr.offensive_tempo = True
        defr.DR_all_hits_NSP.append(min(20 + spaces_moved_by_atkr * 10, 70))
        defr.follow_up_heal += 7

    # Obsession - Ivy
    if "https://www.youtube.com/watch?v=x5cdtS1HDq4" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 9 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        defr.follow_up_denials -= 1
        atkr.pierce_DR_FU = True

    if "https://www.youtube.com/watch?v=x5cdtS1HDq4" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 9 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        atkr.follow_up_denials -= 1
        defr.pierce_DR_FU = True

    # Divine Draught - SU!Ivy
    if "suIvyBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        cond_count = 1

        if defHasPenalty:
            cond_count += 1
        if any([ally.isSupportOf(attacker) for ally in atkAllyWithin2Spaces]) and not disableSupportEffects:
            cond_count += 1

        if cond_count >= 2:
            atkr.brave = True

    if "suIvyBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        cond_count = 1

        if atkHasPenalty:
            cond_count += 1
        if any([ally.isSupportOf(defender) for ally in defAllyWithin2Spaces]) and not disableSupportEffects:
            cond_count += 1

        if cond_count >= 2:
            defr.brave = True

    # Arcane Charmer
    if "charmer" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkr.true_all_hits += 7

    if "charmer" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defr.true_all_hits += 7

    # Glittering Anima - Hortensia
    if "glitteringAnima" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.offensive_tempo = True

    if "glitteringAnima" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.offensive_tempo = True

    # Snowman Staff - WI!Hortensia
    if "wiHortensiaBoost" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 6 + trunc(0.20 * atkStats[SPD])
        atkCombatBuffs[SPD] += 6 + trunc(0.20 * atkStats[SPD])
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.true_stat_damages.append((SPD, 20))

    if "wiHortensiaBoost" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 6 + trunc(0.20 * defStats[SPD])
        defCombatBuffs[SPD] += 6 + trunc(0.20 * defStats[SPD])
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.true_stat_damages.append((SPD, 20))

    # Twinkling Anima - WI!Hortensia
    if "twinklingAnima" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.offensive_tempo = True
        atkr.damage_reduction_reduction.append(50)

    if "twinklingAnima" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.offensive_tempo = True
        defr.damage_reduction_reduction.append(50)

    # Axe of Adoration - Rosado
    if "GGs, Donkey Kong got thisss" in atkSkills and atkHPGreaterEqual25Percent:
        X = 8 if defender.specialMax == -1 else max(16 - defender.specialMax * 2, 8)

        defCombatBuffs[ATK] -= X
        defCombatBuffs[SPD] -= X
        defCombatBuffs[DEF] -= X
        atkr.DR_first_strikes_NSP.append(40)
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

        if defStats[DEF] >= defStats[RES]:
            atkr.damage_reduction_reduction.append(70)
        else:
            atkr.damage_reduction_reduction.append(30)

        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "GGs, Donkey Kong got thisss" in defSkills and defHPGreaterEqual25Percent:
        X = 8 if attacker.specialMax == -1 else max(16 - attacker.specialMax * 2, 8)

        atkCombatBuffs[ATK] -= X
        atkCombatBuffs[SPD] -= X
        atkCombatBuffs[DEF] -= X
        defr.DR_first_strikes_NSP.append(40)
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

        if atkStats[DEF] >= atkStats[RES]:
            defr.damage_reduction_reduction.append(70)
        else:
            defr.damage_reduction_reduction.append(30)

        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Diva-Pair Parasol - SU!Goldmary
    if "suGoldmaryBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 3 + 5, 14) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((ATK, 15))
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "suGoldmaryBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(len(defAllyWithin3RowsCols) * 3 + 5, 14) for x in defCombatBuffs]
        defr.true_stat_damages.append((ATK, 15))
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "goldmaryDebuff_f" in atkSkills:
        atkCombatBuffs[ATK] -= trunc(0.15 * atkStats[ATK]) * atkSkills["goldmaryDebuff_f"]
        atkCombatBuffs[SPD] -= trunc(0.15 * atkStats[ATK]) * atkSkills["goldmaryDebuff_f"]
        atkBonusesNeutralized = [True] * 5

    if "goldmaryDebuff_f" in defSkills:
        defCombatBuffs[ATK] -= trunc(0.15 * defStats[ATK]) * defSkills["goldmaryDebuff_f"]
        defCombatBuffs[SPD] -= trunc(0.15 * defStats[ATK]) * defSkills["goldmaryDebuff_f"]
        defBonusesNeutralized = [True] * 5

    # Packleader Tome - Zephia
    if "zephiaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= abs(defNeutrDebuffsStats[ATK]) + 5
        defCombatBuffs[SPD] -= abs(defNeutrDebuffsStats[SPD]) + 5
        defCombatBuffs[RES] -= abs(defNeutrDebuffsStats[RES]) + 5
        atkr.offensive_tempo = True

    if "zephiaBoost" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= abs(atkNeutrDebuffsStats[ATK]) + 5
        atkCombatBuffs[SPD] -= abs(atkNeutrDebuffsStats[SPD]) + 5
        atkCombatBuffs[RES] -= abs(atkNeutrDebuffsStats[RES]) + 5

    # Nova - Griss
    if "grissBoost" in atkSkills and (atkHasBonus or atkHasPenalty or defHasBonus or defHasPenalty):
        atkCombatBuffs[ATK] += 6 + trunc(0.20 * atkStats[RES])
        atkCombatBuffs[RES] += 6 + trunc(0.20 * atkStats[RES])

    if "grissBoost" in defSkills and (atkHasBonus or atkHasPenalty or defHasBonus or defHasPenalty):
        defCombatBuffs[ATK] += 6 + trunc(0.20 * defStats[RES])
        defCombatBuffs[RES] += 6 + trunc(0.20 * defStats[RES])

    # Blizzard (Refine Eff) - Gunnthrá
    if "gunnPenaltyPunisher" in atkSkills and atkHPGreaterEqual25Percent:
        for i in range(1, 5): defCombatBuffs[i] += -4 + defNeutrDebuffsStats[i]

    if "gunnPenaltyPunisher" in defSkills and defHPGreaterEqual25Percent:
        for i in range(1, 5): atkCombatBuffs[i] += -4 + atkNeutrDebuffsStats[i]

    # Hikami (Refine Eff) - NY!Gunnthrá
    if "beeeg debuff" in atkSkills:
        defCombatBuffs[ATK] -= 4
        defCombatBuffs[SPD] -= 4
        defCombatBuffs[DEF] -= 4

        atkCombatBuffs[ATK] += sum(defNeutrBuffsStats) * -1

    if "beeeg debuff" in defSkills and defAllyWithin2Spaces:
        atkCombatBuffs[ATK] -= 4
        atkCombatBuffs[SPD] -= 4
        atkCombatBuffs[DEF] -= 4

        defCombatBuffs[ATK] += sum(defNeutrBuffsStats) * -1

    # Gjöll (Base) - Hríd
    if "ICE UPON YOU" in atkSkills and defHasPenalty:
        atkr.follow_ups_skill += 1
        defr.follow_up_denials -= 1

    if "ICE UPON YOU" in defSkills and atkHasPenalty:
        defr.follow_ups_skill += 1
        atkr.follow_up_denials -= 1

    # Gjöll (Refine Base) - Hríd
    if "FREEZE NOW" in atkSkills and (atkHPGreaterEqual25Percent or defHasPenalty):
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5

    if "FREEZE NOW" in defSkills and (defHPGreaterEqual25Percent or atkHasPenalty):
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5

    # Gjöll (Refine Eff) - Hríd
    if "Minecraft Gaming" in atkSkills:
        for i in range(1, 5):
            defCombatBuffs[i] += -5 + defNeutrBuffsStats[i] * -2

    if "Minecraft Gaming" in defSkills and defAllyWithin2Spaces:
        for i in range(1, 5):
            atkCombatBuffs[i] += -5 + atkNeutrBuffsStats[i] * -2

    # Prince's Lance - SU!Hríd
    if "suHridBoost" in atkSkills:
        atkCombatBuffs = [x + max(5, min(trunc(0.25 * defStats[ATK]) - 4, 14)) for x in atkCombatBuffs]
        atkr.DR_all_hits_NSP.append(40)
        atkr.surge_heal += trunc(atkStats[HP] * min(0.10 + 0.20 * attacker.specialMax, 1))

        for i in range(1, 5):
            defCombatBuffs[i] -= 5 + defNeutrBuffsStats[i] * 2

    if "suHridBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs = [x + max(5, min(trunc(0.25 * atkStats[ATK]) - 4, 14)) for x in defCombatBuffs]
        defr.DR_all_hits_NSP.append(40)
        defr.surge_heal += trunc(defStats[HP] * min(0.10 + 0.20 * defender.specialMax, 1))

        for i in range(1, 5):
            atkCombatBuffs[i] -= 5 + atkNeutrBuffsStats[i] * 2

    # Ice Prince's Seal - SU!Hríd
    if "icePrinceSeal" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.follow_ups_skill += 1
        atkr.true_stat_damages.append((SPD, 20))
        atkr.TDR_stats.append((SPD, 20))

    if "icePrinceSeal" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.follow_ups_skill += 1
        defr.true_stat_damages.append((SPD, 20))
        defr.TDR_stats.append((SPD, 20))

    # Sandfort Spade/Shoreline Rake
    if "heroesSummerBonusDef" in atkSkills and sum(atkBonusesNeutralized):
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[DEF] += 4

    if "heroesSummerBonusDef" in defSkills and sum(defBonusesNeutralized):
        defCombatBuffs[ATK] += 4
        defCombatBuffs[DEF] += 4

    if "heroesSummerBonusDef" in atkSkills and sum(atkBonusesNeutralized):
        atkCombatBuffs[ATK] += 4
        atkCombatBuffs[RES] += 4

    if "heroesSummerBonusDef" in defSkills and sum(defBonusesNeutralized):
        defCombatBuffs[ATK] += 4
        defCombatBuffs[RES] += 4

    # Laevatein (Refine Eff) - Laevatein
    if "laevBoost" in atkSkills and (atkHasBonus or atkHPGreaterEqual50Percent):
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5

    if "laevBoost" in defSkills and (defHasBonus or atkHPGreaterEqual50Percent):
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5

    # Twin Star Axe (Base) - NI!Laevatein
    if "laevNinja" in atkSkills:
        atkCombatBuffs[ATK] += trunc(0.50 * sum(atkNeutrBuffsStats))

    if "laevNinja" in defSkills:
        defCombatBuffs[ATK] += trunc(0.50 * sum(defNeutrBuffsStats))

    # Twin Star Axe (Refine Base) - NI!Laevatein
    if "laevNinjaRefine" in atkSkills:
        atkr.brave = True
        atkr.follow_ups_skill += 1
        atkCombatBuffs[ATK] += max(sum(atkNeutrBuffsStats), max([ally.get_bonus_total() for ally in atkAllyWithin3Spaces], default=0))
        defCombatBuffs[ATK] -= max(sum(atkNeutrBuffsStats), max([ally.get_bonus_total() for ally in atkAllyWithin3Spaces], default=0))

    if "laevNinjaRefine" in defSkills:
        defr.brave = True
        defr.follow_ups_skill += 1
        defCombatBuffs[ATK] += max(sum(defNeutrBuffsStats), max([ally.get_bonus_total() for ally in defAllyWithin3Spaces], default=0))
        atkCombatBuffs[ATK] -= max(sum(defNeutrBuffsStats), max([ally.get_bonus_total() for ally in defAllyWithin3Spaces], default=0))

    # Twin Star Axe (Refine Eff) - NI!Laevatein
    if "wolf back air" in atkSkills and atkAllyWithin3Spaces:
        atkCombatBuffs[ATK] += 6
        defCombatBuffs[ATK] -= 6
        atkr.damage_reduction_reduction.append(50)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "wolf back air" in defSkills and defAllyWithin3Spaces:
        defCombatBuffs[ATK] += 6
        atkCombatBuffs[ATK] -= 6
        defr.damage_reduction_reduction.append(50)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Níu (Base) - Laegjarn
    if "GiveMeYourBonuses" in atkSkills:
        totalBonuses = 0

        for i in range(1, 5): totalBonuses += defNeutrBuffsStats[i]

        atkCombatBuffs = [x + totalBonuses // 2 for x in atkCombatBuffs]

    if "GiveMeYourBonuses" in defSkills:
        totalBonuses = 0

        for i in range(1, 5): totalBonuses += atkNeutrBuffsStats[i]

        defCombatBuffs = [x + totalBonuses // 2 for x in defCombatBuffs]

    # Níu (Refine Base) - Leagjarn
    if "ILoveBonusesAndWomenAndI'mAllOutOfBonuses" in atkSkills:
        tempAtkBonuses = 0
        tempDefBonuses = 0

        for i in range(1, 5): tempAtkBonuses += atkNeutrBuffsStats[i]
        for i in range(1, 5): tempDefBonuses += defNeutrBuffsStats[i]

        tempTotalBonuses = min(10, math.trunc((tempAtkBonuses + tempDefBonuses) * 0.4))
        atkCombatBuffs = [x + tempTotalBonuses for x in atkCombatBuffs]

    if "ILoveBonusesAndWomenAndI'mAllOutOfBonuses" in defSkills:
        tempAtkBonuses = 0
        tempDefBonuses = 0

        for i in range(1, 5): tempAtkBonuses += atkNeutrBuffsStats[i]
        for i in range(1, 5): tempDefBonuses += defNeutrBuffsStats[i]

        tempTotalBonuses = min(10, math.trunc((tempAtkBonuses + tempDefBonuses) * 0.4))
        defCombatBuffs = [x + tempTotalBonuses for x in defCombatBuffs]

    # Worldsea Wave (Refine Base) - SU!Laegjarn
    if "jk largjarnDesp" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[SPD] += 5
        atkr.self_desperation = True

    if "jk largjarnDesp" in atkSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[SPD] += 5
        defr.self_desperation = True

    # Worldsea Wave (Refine Eff) - SU!Laegjarn
    if "summerLaegjarnBoost" in atkSkills:
        atkCombatBuffs[ATK] += 5 + min(trunc(0.40 * (sum(atkNeutrBuffsStats) + sum(defNeutrBuffsStats))), 10)
        atkCombatBuffs[SPD] += 5 + min(trunc(0.40 * (sum(atkNeutrBuffsStats) + sum(defNeutrBuffsStats))), 10)

    if "summerLaegjarnBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5 + min(trunc(0.40 * (sum(atkNeutrBuffsStats) + sum(defNeutrBuffsStats))), 10)
        defCombatBuffs[SPD] += 5 + min(trunc(0.40 * (sum(atkNeutrBuffsStats) + sum(defNeutrBuffsStats))), 10)

    # Flame of Múspell (Base) - A!Laegjarn
    if "aLaegjarnBoost" in atkSkills and atkHasBonus:
        atkCombatBuffs[ATK] += 6
        atkCombatBuffs[SPD] += 6
        atkCombatBuffs = [x + min(trunc(0.50 * (sum(atkNeutrBuffsStats) + sum(defNeutrBuffsStats))), 12) for x in atkCombatBuffs]

        if sum(atkNeutrBuffsStats) + sum(defNeutrBuffsStats) >= 10:
            atkr.offensive_NFU = True

    if "aLaegjarnBoost" in defSkills and defHasBonus:
        defCombatBuffs[ATK] += 6
        defCombatBuffs[SPD] += 6
        defCombatBuffs = [x + min(trunc(0.50 * (sum(atkNeutrBuffsStats) + sum(defNeutrBuffsStats))), 12) for x in defCombatBuffs]

        if sum(atkNeutrBuffsStats) + sum(defNeutrBuffsStats) >= 10:
            atkr.offensive_NFU = True

    # Flamefrost Bow (Base) - NI!Laegjarn
    if "niLaegjarnBoost" in atkSkills:
        atkr.brave = True
        X = trunc(0.70 * max(sum(defNeutrBuffsStats), max([ally.get_bonus_total() for ally in atkAllyWithin2Spaces], default=0)))
        atkCombatBuffs[ATK] += X
        atkCombatBuffs[DEF] += X
        atkCombatBuffs[RES] += X

    if "niLaegjarnBoost" in defSkills:
        defr.brave = True
        X = trunc(0.70 * max(sum(atkNeutrBuffsStats), max([ally.get_bonus_total() for ally in defAllyWithin2Spaces], default=0)))
        defCombatBuffs[ATK] += X
        defCombatBuffs[DEF] += X
        defCombatBuffs[RES] += X

    # Hel's Reaper (Refine Eff) - Hel
    if "DEATH" in atkSkills and (atkHPGreaterEqual25Percent or defHasPenalty):
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))
        atkr.DR_first_hit_NSP.append(40)

    if "DEATH" in defSkills and (defHPGreaterEqual25Percent or atkHasPenalty):
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))
        defr.DR_first_hit_NSP.append(40)

    # Deadly Balance - Líf
    if "deadlyBalance" in atkSkills and (atkHPGreaterEqual50Percent or atkHasPenalty):
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.spGainWhenAtkd += 1

    if "deadlyBalance" in defSkills and (defHPGreaterEqual50Percent or defHasPenalty):
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.spGainWhenAtkd += 1

    if "deadlyBalancePlus" in atkSkills and (atkHPGreaterEqual25Percent or atkHasPenalty):
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkr.sp_pierce_DR = True

    if "deadlyBalancePlus" in defSkills and (defHPGreaterEqual25Percent or defHasPenalty):
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defr.sp_pierce_DR = True

    # Killing Intent(+) - Thrasir
    if "killingIntent" in atkSkills and (not defHPEqual100Percent or defHasPenalty):
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[RES] -= 5
        atkr.self_desperation = True

    if "killingIntent" in defSkills and (not atkHPEqual100Percent or atkHasPenalty):
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[RES] -= 5

    # Flower of Ease (Base) - Mirabilis
    if "zzzzZZZZzzzzz_f" in atkSkills and atkHasPenalty:
        atkCombatBuffs[ATK] -= atkSkills["zzzzZZZZzzzzz_f"]
        atkCombatBuffs[DEF] -= atkSkills["zzzzZZZZzzzzz_f"]
        atkCombatBuffs[RES] -= atkSkills["zzzzZZZZzzzzz_f"]

    if "zzzzZZZZzzzzz_f" in defSkills and defHasPenalty:
        defCombatBuffs[ATK] -= defSkills["zzzzZZZZzzzzz_f"]
        defCombatBuffs[DEF] -= defSkills["zzzzZZZZzzzzz_f"]
        defCombatBuffs[RES] -= defSkills["zzzzZZZZzzzzz_f"]

    # Flower of Ease (Refine Base) - Mirabilis
    if "zzzzzzzzzzzzzzzz" in atkSkills and (defHPGreaterEqual75Percent or defHasPenalty):
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5

    if "zzzzzzzzzzzzzzzz" in defSkills and (atkHPGreaterEqual75Percent or atkHasPenalty):
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5

    if "zzzzzzzzzzzzzzzz_f" in atkSkills and atkHasPenalty:
        atkCombatBuffs[ATK] -= atkSkills["zzzzzzzzzzzzzzzz_f"]
        atkCombatBuffs[DEF] -= atkSkills["zzzzzzzzzzzzzzzz_f"]
        atkCombatBuffs[RES] -= atkSkills["zzzzzzzzzzzzzzzz_f"]

    if "zzzzzzzzzzzzzzzz_f" in defSkills and defHasPenalty:
        defCombatBuffs[ATK] -= defSkills["zzzzzzzzzzzzzzzz_f"]
        defCombatBuffs[DEF] -= defSkills["zzzzzzzzzzzzzzzz_f"]
        defCombatBuffs[RES] -= defSkills["zzzzzzzzzzzzzzzz_f"]

    # Flower of Ease (Refine Eff) - Mirabilis
    if "sleepy head" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.follow_ups_skill += 1
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.Flash, "foe_and_foes_allies", "within_3_columns_self"))

    if "sleepy head" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.follow_ups_skill += 1
        defPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.Flash, "foe_and_foes_allies", "within_3_columns_self"))

    if "sleepy head" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.follow_ups_skill += 1

    # Dreamflake (Base) - WI!Mirabilis
    if "wiMirabilisField_f" in atkSkills and atkHasPenalty: atkCombatBuffs[ATK] -= atkSkills["wiMirabilisField_f"]
    if "wiMirabilisField_f" in defSkills and defHasPenalty: defCombatBuffs[ATK] -= defSkills["wiMirabilisField_f"]

    # Daydream Egg - SP!Mirabilis
    if "daydream_egg" in atkSkills and (defHPGreaterEqual75Percent or defHasPenalty):
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        atkCombatBuffs[RES] += 5
        atkr.TDR_stats.append((RES, 20))

    if "daydream_egg" in defSkills and (atkHPGreaterEqual75Percent or atkHasPenalty):
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        defCombatBuffs[RES] += 5
        defr.TDR_stats.append((RES, 20))

    if "spMirabilisField_f" in atkSkills and atkHasPenalty:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        atkCombatBuffs[RES] -= 5
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    if "spMirabilisField_f" in defSkills and defHasPenalty:
        atkCombatBuffs[ATK] -= defSkills["spMirabilisField_f"]
        atkCombatBuffs[DEF] -= defSkills["spMirabilisField_f"]
        atkCombatBuffs[RES] -= defSkills["spMirabilisField_f"]
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Binding Necklace - Freyja
    if "bindingNecklace" in atkSkills and not atkAdjacentToAlly:
        atkCombatBuffs = [x + 2 for x in atkCombatBuffs]
        defCombatBuffs = [x - 2 for x in defCombatBuffs]

        for i in range(1, 5):
            atkCombatBuffs[i] += defNeutrBuffsStats[i]
            defCombatBuffs[i] -= defNeutrBuffsStats[i]

    if "bindingNecklace" in defSkills and not defAdjacentToAlly:
        defCombatBuffs = [x + 2 for x in defCombatBuffs]
        atkCombatBuffs = [x - 2 for x in atkCombatBuffs]

        for i in range(1, 5):
            defCombatBuffs[i] += atkNeutrBuffsStats[i]
            atkCombatBuffs[i] -= atkNeutrBuffsStats[i]

    # Binding Necklace+ - Freyja
    if "bindingNecklacePlus" in atkSkills and len(atkAdjacentToAlly) <= 1:
        atkCombatBuffs = [x + 3 for x in atkCombatBuffs]
        defCombatBuffs = [x - 3 for x in defCombatBuffs]
        atkr.offensive_tempo = True

        for i in range(1, 5):
            atkCombatBuffs[i] += defNeutrBuffsStats[i]
            defCombatBuffs[i] -= defNeutrBuffsStats[i]

    if "bindingNecklacePlus" in defSkills and len(defAdjacentToAlly) <= 1:
        defCombatBuffs = [x + 3 for x in defCombatBuffs]
        atkCombatBuffs = [x - 3 for x in atkCombatBuffs]
        defr.offensive_tempo = True

        for i in range(1, 5):
            defCombatBuffs[i] += atkNeutrBuffsStats[i]
            atkCombatBuffs[i] -= atkNeutrBuffsStats[i]

    # Arcane Nihility
    if "curseOfNihility" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        for i in range(1, 5):
            atkCombatBuffs[i] += defNeutrBuffsStats[i]
            defCombatBuffs[i] -= defNeutrBuffsStats[i]

        atkr.true_stat_damages.append((SPD, 15))

    if "curseOfNihility" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        for i in range(1, 5):
            defCombatBuffs[i] += atkNeutrBuffsStats[i]
            atkCombatBuffs[i] -= atkNeutrBuffsStats[i]

        defr.true_stat_damages.append((SPD, 15))

    # Power of Nihility - Eitr
    if "powerOfNihility" in atkSkills and len(atkAdjacentToAlly) <= 1:
        atkCombatBuffs = [x + 9 for x in atkCombatBuffs]
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkr.surge_heal += trunc(atkStats[HP] * min(0.10 + 0.20 * attacker.specialMax, 1))

    if "powerOfNihility" in defSkills and len(defAdjacentToAlly) <= 1:
        defCombatBuffs = [x + 9 for x in defCombatBuffs]
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defr.surge_heal += trunc(defStats[HP] * min(0.10 + 0.20 * defender.specialMax, 1))

    # Petaldream Horn - SP!Eitr
    if "spEitrBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + min(len(atkAllyWithin3RowsCols) * 3 , 9) for x in atkCombatBuffs]
        atkr.true_stat_damages.append((SPD, 20))
        atkr.TDR_first_stats.append((SPD, 20))
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "spEitrBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + min(len(defAllyWithin3RowsCols) * 3 , 9) for x in defCombatBuffs]
        defr.true_stat_damages.append((SPD, 20))
        defr.TDR_first_stats.append((SPD, 20))
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "spEitrField_f" in atkSkills:
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

        for i in range(1, 5):
            defCombatBuffs[i] += atkSkills["spEitrField_f"] * atkNeutrBuffsStats[i]
            atkCombatBuffs[i] -= atkSkills["spEitrField_f"] * (5 + atkNeutrBuffsStats[i])

    if "spEitrField_f" in defSkills:
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

        for i in range(1, 5):
            atkCombatBuffs[i] += defSkills["spEitrField_f"] * defNeutrBuffsStats[i]
            defCombatBuffs[i] -= defSkills["spEitrField_f"] * (5 + defNeutrBuffsStats[i])

    # Nihility's Undoing - SP!Eitr
    if "nihilitysUndoing" in atkSkills and (attacker.transformed or defHPGreaterEqual75Percent):
        X = min(spaces_moved_by_atkr, 3)

        atkCombatBuffs = [x + 8 + X for x in atkCombatBuffs]
        atkr.TDR_all_hits += X * 4
        atkr.TDR_on_foe_sp += X * 4

        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkr.damage_reduction_reduction.append(50)

    if "nihilitysUndoing" in defSkills and (defender.transformed or atkHPGreaterEqual75Percent):
        X = min(spaces_moved_by_atkr, 3)

        defCombatBuffs = [x + 8 + X for x in defCombatBuffs]
        defr.TDR_all_hits += X * 4
        defr.TDR_on_foe_sp += X * 4

        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defr.damage_reduction_reduction.append(50)

    # Arcane Void
    if "arcaneVoid" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        for i in range(1, 5):
            defCombatBuffs[i] -= abs(min(defNeutrDebuffsStats[i], min([ally.get_total_debuff(ATK) for ally in defAllyWithin2Spaces], default=0)))

        atkr.follow_ups_skill += 1
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "arcaneVoid" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        for i in range(1, 5):
            atkCombatBuffs[i] -= abs(min(atkNeutrDebuffsStats[i], min([ally.get_total_debuff(ATK) for ally in atkAllyWithin2Spaces], default=0)))

        defr.follow_ups_skill += 1
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Rulers of Nihility - Ginnungagap
    if "arcaneVoid" in atkSkills and (defHPGreaterEqual75Percent or defHasPenalty):
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        if atkSpTriggeredByAttack:
            atkr.sp_jump_first += 1

    if "arcaneVoid" in defSkills and (atkHPGreaterEqual75Percent or atkHasPenalty):
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        if defSpTriggeredByAttack:
            defr.sp_jump_first += 1

    # Auto-Lofnheiðr (Refine Eff) - Ótr
    if "F Tier Banner Sales" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[DEF] += 5
        atkCombatBuffs[RES] += 5
        defCombatBuffs[ATK] -= atkNeutrDebuffsStats[ATK] * 2
        defCombatBuffs[DEF] -= atkNeutrDebuffsStats[DEF] * 2
        atkr.true_stat_damages.append((DEF, 20))

    if "F Tier Banner Sales" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[DEF] += 5
        defCombatBuffs[RES] += 5
        atkCombatBuffs[ATK] -= defNeutrDebuffsStats[ATK] * 2
        defCombatBuffs[DEF] -= defNeutrDebuffsStats[DEF] * 2
        defr.true_stat_damages.append((DEF, 20))

    # Skinfaxi (Base/Refine Base) - Dagr
    if ("dagrBoost" in atkSkills or "dagrRefineBoost" in atkSkills) and atkHPGreaterEqual25Percent:
        for i in range(1, 5):
            atkCombatBuffs[i] += 5 + atkNeutrDebuffsStats[i] * -2

    if ("dagrBoost" in defSkills or "dagrRefineBoost" in defSkills) and defHPGreaterEqual25Percent:
        for i in range(1, 5):
            defCombatBuffs[i] += 5 + defNeutrDebuffsStats[i] * -2

    # Skinfaxi (Refine Eff) - Dagr
    if "dagrAwesome" in atkSkills:
        defCombatBuffs[ATK] -= 4 + defNeutrBuffsStats[ATK] * 2
        defCombatBuffs[SPD] -= 4 + defNeutrBuffsStats[SPD] * 2
        defCombatBuffs[DEF] -= 4 + defNeutrBuffsStats[DEF] * 2
        atkr.true_stat_damages.append((ATK, 10))
        atkr.DR_first_strikes_NSP.append(40)

    if "dagrAwesome" in defSkills and defAllyWithin2Spaces:
        atkCombatBuffs[ATK] -= 4 + atkNeutrBuffsStats[ATK] * 2
        atkCombatBuffs[SPD] -= 4 + atkNeutrBuffsStats[SPD] * 2
        atkCombatBuffs[DEF] -= 4 + atkNeutrBuffsStats[DEF] * 2
        defr.true_stat_damages.append((ATK, 10))
        defr.DR_first_strikes_NSP.append(40)

    # Sun-Twin Wing - Dagr
    if "sunTwinWing" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "sunTwinWing" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # Sun-Twin Wing+ - Dagr
    if "sunTwinWingPlus" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        atkr.true_stat_damages.append((SPD, 20))
        atkr.damage_reduction_reduction.append(50)

    if "sunTwinWingPlus" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        defr.true_stat_damages.append((SPD, 20))
        defr.damage_reduction_reduction.append(50)

    # Jötnar Bow (Base) - NY!Dagr
    if "nyDagrBoost" in atkSkills:
        defCombatBuffs[ATK] -= 5 + atkNeutrBuffsStats[ATK] * 2
        defCombatBuffs[SPD] -= 5 + atkNeutrBuffsStats[SPD] * 2
        defCombatBuffs[DEF] -= 5 + atkNeutrBuffsStats[DEF] * 2

    if "nyDagrBoost" in defSkills and defAllyWithin2Spaces:
        atkCombatBuffs[ATK] -= 5 + defNeutrBuffsStats[ATK] * 2
        atkCombatBuffs[SPD] -= 5 + defNeutrBuffsStats[SPD] * 2
        atkCombatBuffs[DEF] -= 5 + defNeutrBuffsStats[DEF] * 2

    # Fujin Uchiwa - FF!Dagr
    if "Villager News" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]

        for i in range(1, 5):
            atkCombatBuffs[i] += max(atkNeutrBuffsStats[i], defNeutrBuffsStats[i])
            defCombatBuffs[i] -= defNeutrBuffsStats[i]

        atkr.DR_first_hit_NSP.append(40)
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "Villager News" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]

        for i in range(1, 5):
            defCombatBuffs[i] += max(atkNeutrBuffsStats[i], defNeutrBuffsStats[i])
            atkCombatBuffs[i] -= atkNeutrBuffsStats[i]

        defr.DR_first_hit_NSP.append(40)
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Twin-Sky Wing - FF!Dagr
    if "twinSkyWing" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "twinSkyWing" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # Veðrfölnir's Edge - AI!Dagr
    if "aiDagrBoost" in atkSkills:
        X = max(sum(atkNeutrBuffsStats), max([ally.get_bonus_total() for ally in atkAllyWithin3Spaces], default=0))

        atkr.true_all_hits += trunc(0.50 * X)
        atkr.TDR_first_strikes += trunc(0.50 * X)
        atkr.TDR_on_foe_sp += trunc(0.50 * X)

    if "aiDagrBoost" in defSkills and defAllyWithin3RowsCols:
        X = max(sum(defNeutrBuffsStats), max([ally.get_bonus_total() for ally in defAllyWithin3Spaces], default=0))

        defr.true_all_hits += trunc(0.50 * X)
        defr.TDR_first_strikes += trunc(0.50 * X)
        defr.TDR_on_foe_sp += trunc(0.50 * X)

    # Veðrfölnir's Wing - AI!Dagr
    if "veðrfolnirsWing" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5 + defNeutrBuffsStats[ATK] * 2
        defCombatBuffs[SPD] -= 5 + defNeutrBuffsStats[SPD] * 2
        defCombatBuffs[DEF] -= 5 + defNeutrBuffsStats[DEF] * 2
        atkr.damage_reduction_reduction.append(50)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "veðrfolnirsWing" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5 + atkNeutrBuffsStats[ATK] * 2
        atkCombatBuffs[SPD] -= 5 + atkNeutrBuffsStats[SPD] * 2
        atkCombatBuffs[DEF] -= 5 + atkNeutrBuffsStats[DEF] * 2
        defr.damage_reduction_reduction.append(50)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Hrímfaxi (Base) - Nótt
    if "the moon" in atkSkills and atkHPGreaterEqual25Percent:
        for i in range(1, 5): atkCombatBuffs[i] += 5 + atkNeutrBuffsStats[i]

    if "the moon" in defSkills and defHPGreaterEqual25Percent:
        for i in range(1, 5): defCombatBuffs[i] += 5 + defNeutrBuffsStats[i]

    # Hrímfaxi (Refine Base) - Nótt
    if "nottRefine" in atkSkills and atkHPGreaterEqual25Percent:
        for i in range(1, 5): atkCombatBuffs[i] +=  5 + max(atkNeutrBuffsStats[i], max([ally.get_total_buff(i) for ally in atkAllyWithin2Spaces], default=0))

    if "nottRefine" in defSkills and defHPGreaterEqual25Percent:
        for i in range(1, 5): defCombatBuffs[i] +=  5 + max(defNeutrBuffsStats[i], max([ally.get_total_buff(i) for ally in defAllyWithin2Spaces], default=0))

    # Hrímfaxi (Refine Eff) - Nótt
    if "nóte" in atkSkills and defHPGreaterEqual75Percent:
        defCombatBuffs[ATK] -= 4 - min(defNeutrDebuffsStats[ATK], min([ally.get_total_debuff(ATK) for ally in defAllyWithin2Spaces], default=0))
        defCombatBuffs[SPD] -= 4 - min(defNeutrDebuffsStats[SPD], min([ally.get_total_debuff(SPD) for ally in defAllyWithin2Spaces], default=0))
        defCombatBuffs[DEF] -= 4 - min(defNeutrDebuffsStats[DEF], min([ally.get_total_debuff(DEF) for ally in defAllyWithin2Spaces], default=0))
        atkr.TDR_first_strikes += 7
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "nóte" in defSkills:
        atkCombatBuffs[ATK] -= 4 - min(atkNeutrDebuffsStats[ATK], min([ally.get_total_debuff(ATK) for ally in atkAllyWithin2Spaces], default=0))
        atkCombatBuffs[SPD] -= 4 - min(atkNeutrDebuffsStats[SPD], min([ally.get_total_debuff(SPD) for ally in atkAllyWithin2Spaces], default=0))
        atkCombatBuffs[DEF] -= 4 - min(atkNeutrDebuffsStats[DEF], min([ally.get_total_debuff(DEF) for ally in atkAllyWithin2Spaces], default=0))
        defr.TDR_first_strikes += 7
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Moon-Twin Wing - Nótt
    if "moonTwinWing" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[SPD] -= 5
        atkr.stat_scaling_DR.append((SPD, 40))

    if "moonTwinWing" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[SPD] -= 5
        defr.stat_scaling_DR.append((SPD, 40))

    # Moon-Twin Wing+ - Nótt
    if "moonTwinWingPlus" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[SPD] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.true_stat_damages.append((ATK, 10))
        atkr.stat_scaling_DR.append((SPD, 50))
        atkr.damage_reduction_reduction.append(50)

    if "moonTwinWingPlus" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[SPD] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.true_stat_damages.append((ATK, 10))
        defr.stat_scaling_DR.append((SPD, 50))
        defr.damage_reduction_reduction.append(50)

    # Körmt (Base) - Letizia
    if "letiziaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] += 6
        defCombatBuffs[ATK] -= 6
        atkr.follow_ups_skill += 1

        conditions_met = 0

        if atkAllyWithin3Spaces:
            conditions_met += 1
        if defAllyWithin2Spaces:
            conditions_met += 1
        if atkHasBonus:
            conditions_met += 1
        if defHasPenalty:
            conditions_met += 1

        defCombatBuffs = [x - min(3 * conditions_met, 9) for x in defCombatBuffs]

    if "letiziaBoost" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs[ATK] += 6
        atkCombatBuffs[ATK] -= 6
        defr.follow_ups_skill += 1

        conditions_met = 0

        if defAllyWithin3Spaces:
            conditions_met += 1
        if atkAllyWithin2Spaces:
            conditions_met += 1
        if defHasBonus:
            conditions_met += 1
        if atkHasPenalty:
            conditions_met += 1

        atkCombatBuffs = [x - min(3 * conditions_met, 9) for x in atkCombatBuffs]

    # Goddess Temari - Seiðr
    if "nySeiðrBoost" in atkSkills and atkHPGreaterEqual25Percent:
        cur_turn = 4 if Status.TimesGate in attacker.statusPos or Status.TimesGrip in defender.statusNeg else turn

        atkCombatBuffs = [x + 5 + min(cur_turn * 2, 8) for x in atkCombatBuffs]

        if cur_turn >= 3:
            atkr.true_all_hits += max(sum(atkNeutrBuffsStats), max([ally.get_bonus_total() for ally in atkAllyWithin2Spaces], default=0))

    if "nySeiðrBoost" in defSkills and defHPGreaterEqual25Percent:
        cur_turn = 4 if Status.TimesGate in defender.statusPos or Status.TimesGrip in attacker.statusNeg else turn

        defCombatBuffs = [x + 5 + min(cur_turn * 2, 8) for x in defCombatBuffs]

        if cur_turn >= 3:
            defr.true_all_hits += max(sum(defNeutrBuffsStats), max([ally.get_bonus_total() for ally in defAllyWithin2Spaces], default=0))

    # Future-Sighted - NY!Seiðr
    if "futureSighted" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.follow_ups_skill += 1
        atkr.DR_first_hit_NSP.append(30)

    if "futureSighted" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.follow_ups_skill += 1
        defr.DR_first_hit_NSP.append(30)

    if Status.TimesGrip in attacker.statusPos:
        atkCombatBuffs = [x - 4 for x in atkCombatBuffs]

    if Status.TimesGrip in defender.statusPos:
        defCombatBuffs = [x - 4 for x in defCombatBuffs]

    # The Cycle's Turn (Base) - B!Gullveig
    if "bGullveigBoost" in atkSkills:
        atkCombatBuffs = [x + 5 for x in atkCombatBuffs]
        atkCombatBuffs[ATK] += min(turn * 2, 10)
        atkCombatBuffs[SPD] += min(turn * 2, 10)
        atkr.true_stat_damages.append((SPD, 20))
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "bGullveigBoost" in defSkills and defHasBonus:
        defCombatBuffs = [x + 5 for x in defCombatBuffs]
        defCombatBuffs[ATK] += min(turn * 2, 10)
        defCombatBuffs[SPD] += min(turn * 2, 10)
        defr.true_stat_damages.append((SPD, 20))
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # Gold Unwinding - B!Gullveig
    if "goldUnwinding" in atkSkills and atkHPGreaterEqual50Percent: atkr.DR_first_hit_NSP.append(60)
    if "goldUnwinding" in defSkills and defHPGreaterEqual50Percent: defr.DR_first_hit_NSP.append(60)

    # Quieting Antler - Eikþyrnir
    if "eikBoost" in atkSkills:
        defCombatBuffs[ATK] -= 6 + trunc(0.20 * defStats[DEF])
        defCombatBuffs[DEF] -= 6 + trunc(0.20 * defStats[DEF])

        X = max(sum(atkNeutrBuffsStats), max([ally.get_bonus_total() for ally in atkAllyWithin3Spaces], default=0))
        atkr.true_all_hits += X
        atkr.TDR_all_hits += trunc(0.50 * X)

    if "eikBoost" in defSkills:
        atkCombatBuffs[ATK] -= 6 + trunc(0.20 * atkStats[DEF])
        atkCombatBuffs[DEF] -= 6 + trunc(0.20 * atkStats[DEF])

        X = max(sum(defNeutrBuffsStats), max([ally.get_bonus_total() for ally in defAllyWithin3Spaces], default=0))
        defr.true_all_hits += X
        defr.TDR_all_hits += trunc(0.50 * X)

    # Divine Strength - Eikþyrnir
    if "divineStrength" in atkSkills:
        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.follow_ups_skill += 1
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

        if atkStats[ATK] + atkPhantomStats[ATK] >= defStats[ATK] + defPhantomStats[ATK] - 5:
            defCombatBuffs[ATK] -= 6
            defCombatBuffs[DEF] -= 6

        if atkStats[DEF] + atkPhantomStats[DEF] >= defStats[DEF] + defPhantomStats[DEF] - 5:
            defCombatBuffs[ATK] -= 6
            defCombatBuffs[DEF] -= 6

    if "divineStrength" in defSkills:
        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.follow_ups_skill += 1
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

        if defStats[ATK] + defPhantomStats[ATK] >= atkStats[ATK] + atkPhantomStats[ATK] - 5:
            defCombatBuffs[ATK] -= 6
            defCombatBuffs[DEF] -= 6

        if defStats[DEF] + defPhantomStats[DEF] >= atkStats[DEF] + atkPhantomStats[DEF] - 5:
            defCombatBuffs[ATK] -= 6
            defCombatBuffs[DEF] -= 6

    # Delivering Antler - WI!Eikþyrnir
    if "wiEikBoost" in atkSkills:
        X = max(sum(atkNeutrBuffsStats), max([ally.get_bonus_total() for ally in atkAllyWithin3Spaces], default=0))
        atkr.true_all_hits += X

    if "wiEikBoost" in defSkills and defAllyWithin2Spaces:
        X = max(sum(defNeutrBuffsStats), max([ally.get_bonus_total() for ally in defAllyWithin3Spaces], default=0))
        defr.true_all_hits += X

    # Ocean-Fit Antler - SU!Eikþyrnir
    if "suEikBoost" in atkSkills:
        atkCombatBuffs[ATK] += min(len(atkAllyWithin3RowsCols) * 3 + 5, 14)
        atkCombatBuffs[DEF] += min(len(atkAllyWithin3RowsCols) * 3 + 5, 14)
        atkCombatBuffs[RES] += min(len(atkAllyWithin3RowsCols) * 3 + 5, 14)

        X = max(sum(atkNeutrBuffsStats), max([ally.get_bonus_total() for ally in atkAllyWithin3Spaces], default=0))
        atkr.true_all_hits += X
        atkr.TDR_all_hits += trunc(X * 0.50)
        atkr.sp_jump_first += trunc(X / 12)

    if "suEikBoost" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += min(len(defAllyWithin3RowsCols) * 3 + 5, 14)
        defCombatBuffs[DEF] += min(len(defAllyWithin3RowsCols) * 3 + 5, 14)
        defCombatBuffs[RES] += min(len(defAllyWithin3RowsCols) * 3 + 5, 14)

        X = max(sum(defNeutrBuffsStats), max([ally.get_bonus_total() for ally in defAllyWithin3Spaces], default=0))
        defr.true_all_hits += X
        defr.TDR_all_hits += trunc(X * 0.50)
        defr.sp_jump_first += trunc(X / 12)

    # Divine Brawn - SU!Eikþyrnir
    if "divineBrawn" in atkSkills:
        if atkStats[ATK] + atkPhantomStats[ATK] >= defStats[ATK] + defPhantomStats[ATK] - 5:
            defCombatBuffs[ATK] -= 7
            defCombatBuffs[DEF] -= 7

        if atkStats[DEF] + atkPhantomStats[DEF] >= defStats[DEF] + defPhantomStats[DEF] - 5:
            defCombatBuffs[ATK] -= 7
            defCombatBuffs[DEF] -= 7

        defCombatBuffs[ATK] -= 5
        defCombatBuffs[DEF] -= 5
        atkr.damage_reduction_reduction.append(50)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "divineBrawn" in defSkills:
        if defStats[ATK] + defPhantomStats[ATK] >= atkStats[ATK] + atkPhantomStats[ATK] - 5:
            atkCombatBuffs[ATK] -= 7
            atkCombatBuffs[DEF] -= 7

        if defStats[DEF] + defPhantomStats[DEF] >= atkStats[DEF] + atkPhantomStats[DEF] - 5:
            atkCombatBuffs[ATK] -= 7
            atkCombatBuffs[DEF] -= 7

        atkCombatBuffs[ATK] -= 5
        atkCombatBuffs[DEF] -= 5
        defr.damage_reduction_reduction.append(50)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    # Font of Wisdom - Rune
    if "fontOfWisdom" in atkSkills:
        defCombatBuffs[ATK] -= 5 + abs(min(atkNeutrDebuffsStats[ATK], min([ally.get_total_debuff(ATK) for ally in atkAllyWithin2Spaces], default=0)))
        defCombatBuffs[SPD] -= 5 + abs(min(atkNeutrDebuffsStats[SPD], min([ally.get_total_debuff(SPD) for ally in atkAllyWithin2Spaces], default=0)))
        defCombatBuffs[RES] -= 5 + abs(min(atkNeutrDebuffsStats[RES], min([ally.get_total_debuff(RES) for ally in atkAllyWithin2Spaces], default=0)))

        atkr.true_stat_damages.append((RES, 20))
        atkr.damage_reduction_reduction.append(50)
        atkr.TDR_first_strikes += 7

    if "fontOfWisdom" in defSkills:
        atkCombatBuffs[ATK] -= 5 + abs(min(defNeutrDebuffsStats[ATK], min([ally.get_total_debuff(ATK) for ally in defAllyWithin2Spaces], default=0)))
        atkCombatBuffs[SPD] -= 5 + abs(min(defNeutrDebuffsStats[SPD], min([ally.get_total_debuff(SPD) for ally in defAllyWithin2Spaces], default=0)))
        atkCombatBuffs[RES] -= 5 + abs(min(defNeutrDebuffsStats[RES], min([ally.get_total_debuff(RES) for ally in defAllyWithin2Spaces], default=0)))

        defr.true_stat_damages.append((RES, 20))
        defr.damage_reduction_reduction.append(50)
        defr.TDR_first_strikes += 7

    # Divine Deceit - Loki
    if "divineDeceit" in atkSkills and defHasPenalty:
        atkCombatBuffs[ATK] += 5
        atkCombatBuffs[RES] += 5

    if "divineDeceit" in defSkills and atkHasPenalty:
        defCombatBuffs[ATK] += 5
        defCombatBuffs[RES] += 5

    # oops! all bonus doubler
    if "bonusDoublerW" in atkSkills:
        for i in range(1, 5):
            atkCombatBuffs[i] += math.trunc(atkNeutrBuffsStats[i] * (0.25 * atkSkills["bonusDoublerW"] + 0.25))

    if "bonusDoublerW" in defSkills:
        for i in range(1, 5):
            defCombatBuffs[i] += math.trunc(defNeutrBuffsStats[i] * (0.25 * defSkills["bonusDoublerW"] + 0.25))

    if "bonusDoublerSk" in atkSkills:
        for i in range(1, 5):
            atkCombatBuffs[i] += math.trunc(atkNeutrBuffsStats[i] * (0.25 * atkSkills["bonusDoublerSk"] + 0.25))

    if "bonusDoublerSk" in defSkills:
        for i in range(1, 5):
            defCombatBuffs[i] += math.trunc(defNeutrBuffsStats[i] * (0.25 * defSkills["bonusDoublerSk"] + 0.25))

    if "bonusDoublerSe" in atkSkills:
        for i in range(1, 5):
            atkCombatBuffs[i] += math.trunc(atkNeutrBuffsStats[i] * (0.25 * atkSkills["bonusDoublerSe"] + 0.25))

    if "bonusDoublerSe" in defSkills:
        for i in range(1, 5):
            defCombatBuffs[i] += math.trunc(defNeutrBuffsStats[i] * (0.25 * defSkills["bonusDoublerSe"] + 0.25))

    if Status.BonusDoubler in attacker.statusPos and Status.Ploy not in attacker.statusNeg:
        for i in range(1, 5):
            atkCombatBuffs[i] += atkNeutrBuffsStats[i]

    if Status.BonusDoubler in defender.statusPos  and Status.Ploy not in defender.statusNeg:
        for i in range(1, 5):
            defCombatBuffs[i] += defNeutrBuffsStats[i]

    if Status.FoePenaltyDoubler in atkSkills:
        for i in range(1, 5):
            defCombatBuffs[i] += defNeutrDebuffsStats[i]

    if Status.FoePenaltyDoubler in defSkills:
        for i in range(1, 5):
            atkCombatBuffs[i] += atkNeutrDebuffsStats[i]

    if "bonusDoubler4" in atkSkills and (atkHasBonus or atkAllyWithin2Spaces):
        for i in range(1, 5):
            atkCombatBuffs[i] += 4 + max(atkNeutrBuffsStats[i], max([ally.get_total_buff(i) for ally in atkAllyWithin2Spaces], default=0))

    if "bonusDoubler4" in defSkills and (defHasBonus or defAllyWithin2Spaces):
        for i in range(1, 5):
            defCombatBuffs[i] += 4 + max(defNeutrBuffsStats[i], max([ally.get_total_buff(i) for ally in defAllyWithin2Spaces], default=0))

    if "dcBonusDoubler" in atkSkills:
        for i in range(1, 5):
            atkCombatBuffs[i] += max(atkNeutrBuffsStats[i], max([ally.get_total_buff(i) for ally in atkAllyWithin2Spaces], default=0))

    if "dcBonusDoubler" in defSkills:
        for i in range(1, 5):
            defCombatBuffs[i] += max(defNeutrBuffsStats[i], max([ally.get_total_buff(i) for ally in defAllyWithin2Spaces], default=0))

    # Ylgr Combat Field
    if atkYlgrStats[0]:
        i = 0
        while i < len(atkYlgrStats[0]):
            atkCombatBuffs[ATK] -= max(atkYlgrStats[ATK - 1][i], -atkNeutrDebuffsStats[ATK])
            atkCombatBuffs[SPD] -= max(atkYlgrStats[SPD - 1][i], -atkNeutrDebuffsStats[SPD])
            atkCombatBuffs[DEF] -= max(atkYlgrStats[DEF - 1][i], -atkNeutrDebuffsStats[DEF])
            atkCombatBuffs[RES] -= max(atkYlgrStats[RES - 1][i], -atkNeutrDebuffsStats[RES])

            i += 1

    if defYlgrStats[0]:
        i = 0
        while i < len(defYlgrStats[0]):
            defCombatBuffs[ATK] -= max(defYlgrStats[ATK - 1][i], -defNeutrDebuffsStats[ATK])
            defCombatBuffs[SPD] -= max(defYlgrStats[SPD - 1][i], -defNeutrDebuffsStats[SPD])
            defCombatBuffs[DEF] -= max(defYlgrStats[DEF - 1][i], -defNeutrDebuffsStats[DEF])
            defCombatBuffs[RES] -= max(defYlgrStats[RES - 1][i], -defNeutrDebuffsStats[RES])

            i += 1

    # Kaden Combat Field
    if atkKadenStats[0]:
        i = 0
        while i < len(atkKadenStats[0]):
            atkCombatBuffs[ATK] += atkKadenStats[ATK - 1][i]
            atkCombatBuffs[SPD] += atkKadenStats[SPD - 1][i]
            atkCombatBuffs[DEF] += atkKadenStats[DEF - 1][i]
            atkCombatBuffs[RES] += atkKadenStats[RES - 1][i]

            i += 1

    if defKadenStats[0]:
        i = 0
        while i < len(defKadenStats[0]):
            defCombatBuffs[ATK] += defKadenStats[ATK - 1][i]
            defCombatBuffs[SPD] += defKadenStats[SPD - 1][i]
            defCombatBuffs[DEF] += defKadenStats[DEF - 1][i]
            defCombatBuffs[RES] += defKadenStats[RES - 1][i]

            i += 1

    # Sylgr (Refine Eff) - Ylgr
    if "stupid dumb idiot field I cant code easily" in atkSkills:
        i = 1
        while i < 5:
            defCombatBuffs[i] -= max(atkNeutrBuffsStats[i], -defNeutrDebuffsStats[i])
            i += 1

    if "stupid dumb idiot field I cant code easily" in defSkills:
        i = 1
        while i < 5:
            atkCombatBuffs[i] -= max(defNeutrBuffsStats[i], -atkNeutrDebuffsStats[i])
            i += 1

    # UNITY SKILLS
    if "unityAtkSpd" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[ATK] += 5 + atkNeutrDebuffsStats[ATK] * -2
        atkCombatBuffs[SPD] += 5 + atkNeutrDebuffsStats[SPD] * -2

    if "unityAtkSpd" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5 + defNeutrDebuffsStats[ATK] * -2
        defCombatBuffs[SPD] += 5 + defNeutrDebuffsStats[SPD] * -2

    if "unityAtkDef" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[ATK] += 5 + atkNeutrDebuffsStats[ATK] * -2
        atkCombatBuffs[DEF] += 5 + atkNeutrDebuffsStats[DEF] * -2

    if "unityAtkDef" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5 + defNeutrDebuffsStats[ATK] * -2
        defCombatBuffs[DEF] += 5 + defNeutrDebuffsStats[DEF] * -2

    if "unityAtkDefW" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[ATK] += 5 + atkNeutrDebuffsStats[ATK] * -2
        atkCombatBuffs[DEF] += 5 + atkNeutrDebuffsStats[DEF] * -2

    if "unityAtkDefW" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5 + defNeutrDebuffsStats[ATK] * -2
        defCombatBuffs[DEF] += 5 + defNeutrDebuffsStats[DEF] * -2

    if "unityAtkRes" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[ATK] += 5 + atkNeutrDebuffsStats[ATK] * -2
        atkCombatBuffs[RES] += 5 + atkNeutrDebuffsStats[RES] * -2

    if "unityAtkRes" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5 + defNeutrDebuffsStats[ATK] * -2
        defCombatBuffs[RES] += 5 + defNeutrDebuffsStats[RES] * -2

    if "unityAtkResW" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[ATK] += 5 + atkNeutrDebuffsStats[ATK] * -2
        atkCombatBuffs[RES] += 5 + atkNeutrDebuffsStats[RES] * -2

    if "unityAtkResW" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[ATK] += 5 + defNeutrDebuffsStats[ATK] * -2
        defCombatBuffs[RES] += 5 + defNeutrDebuffsStats[RES] * -2

    if "unitySpdDef" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[SPD] += 5 + atkNeutrDebuffsStats[SPD] * -2
        atkCombatBuffs[DEF] += 5 + atkNeutrDebuffsStats[DEF] * -2

    if "unitySpdDef" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[SPD] += 5 + defNeutrDebuffsStats[SPD] * -2
        defCombatBuffs[DEF] += 5 + defNeutrDebuffsStats[DEF] * -2

    if "unityDefRes" in atkSkills and atkAllyWithin2Spaces:
        atkCombatBuffs[DEF] += 5 + atkNeutrDebuffsStats[DEF] * -2
        atkCombatBuffs[RES] += 5 + atkNeutrDebuffsStats[RES] * -2

    if "unityDefRes" in defSkills and defAllyWithin2Spaces:
        defCombatBuffs[DEF] += 5 + defNeutrDebuffsStats[DEF] * -2
        defCombatBuffs[RES] += 5 + defNeutrDebuffsStats[RES] * -2

    if Status.GrandStrategy in attacker.statusPos and Status.Ploy not in attacker.statusNeg:
        for i in range(1, 5):
            atkCombatBuffs[i] += atkNeutrDebuffsStats[i] * -2

    if Status.GrandStrategy in defender.statusPos and Status.Ploy not in defender.statusNeg:
        for i in range(1, 5):
            defCombatBuffs[i] += defNeutrDebuffsStats[i] * -2

    # Part of the Plan - L!M!Robin
    if "partODaPlan" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 8
        defCombatBuffs[SPD] -= 8
        defCombatBuffs[RES] -= 8

        for i in range(1, 5):
            atkCombatBuffs[i] += atkNeutrDebuffsStats[i] * -2

        atkr.follow_ups_skill += 1

    if "partODaPlan" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 8
        atkCombatBuffs[SPD] -= 8
        atkCombatBuffs[RES] -= 8

        for i in range(1, 5):
            defCombatBuffs[i] += defNeutrDebuffsStats[i] * -2

        defr.follow_ups_skill += 1

    # Chaos Ragnell (Base) - FA!Ike
    if "penaltyReverse" in atkSkills:
        for i in range(1, 5):
            atkCombatBuffs[i] += atkNeutrDebuffsStats[i] * -2

    if "penaltyReverse" in defSkills:
        for i in range(1, 5):
            defCombatBuffs[i] += defNeutrDebuffsStats[i] * -2

    # Chaos Ragnell (Refine Base) - FA!Ike
    if "refineFallenIke" in atkSkills:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.offensive_tempo = True

    if "refineFallenIke" in defSkills:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.offensive_tempo = True

    # Chaos Ragnell (Refine Eff) - FA!Ike
    if "HATE, HATE!" in atkSkills and atkHPGreaterEqual25Percent:
        atkCombatBuffs = [x + 4 for x in atkCombatBuffs]
        atkr.TDR_first_strikes += 7
        atkr.sp_pierce_DR = True

        if atkSpTriggeredByAttack:
            atkr.sp_jump_first -= 2

    if "HATE, HATE!" in defSkills and defHPGreaterEqual25Percent:
        defCombatBuffs = [x + 4 for x in defCombatBuffs]
        defr.TDR_first_strikes += 7
        defr.sp_pierce_DR = True

        if defSpTriggeredByAttack:
            defr.sp_jump_first -= 2

    # IDEAL
    if atkHasBonus or atkHPEqual100Percent:
        if "atkIdeal" in atkSkills: atkCombatBuffs[ATK] += atkSkills["atkIdeal"]
        if "spdIdeal" in atkSkills: atkCombatBuffs[SPD] += atkSkills["spdIdeal"]
        if "defIdeal" in atkSkills: atkCombatBuffs[DEF] += atkSkills["defIdeal"]
        if "resIdeal" in atkSkills: atkCombatBuffs[RES] += atkSkills["resIdeal"]

        if atkHasBonus and atkHPEqual100Percent:
            if "atk4Ideal" in atkSkills: atkCombatBuffs[ATK] += 2
            if "spd4Ideal" in atkSkills: atkCombatBuffs[SPD] += 2
            if "def4Ideal" in atkSkills: atkCombatBuffs[DEF] += 2
            if "res4Ideal" in atkSkills: atkCombatBuffs[RES] += 2

    if defHasBonus or defHPEqual100Percent:
        if "atkIdeal" in defSkills: defCombatBuffs[ATK] += defSkills["atkIdeal"]
        if "spdIdeal" in defSkills: defCombatBuffs[SPD] += defSkills["spdIdeal"]
        if "defIdeal" in defSkills: defCombatBuffs[DEF] += defSkills["defIdeal"]
        if "resIdeal" in defSkills: defCombatBuffs[RES] += defSkills["resIdeal"]

        if defHasBonus and defHPEqual100Percent:
            if "atk4Ideal" in defSkills: defCombatBuffs[ATK] += 2
            if "spd4Ideal" in defSkills: defCombatBuffs[SPD] += 2
            if "def4Ideal" in defSkills: defCombatBuffs[DEF] += 2
            if "res4Ideal" in defSkills: defCombatBuffs[RES] += 2

    # CATCH
    if defHasPenalty or defHPEqual100Percent:
        if "atkCatch" in atkSkills: atkCombatBuffs[ATK] += atkSkills["atkCatch"]
        if "spdCatch" in atkSkills: atkCombatBuffs[SPD] += atkSkills["spdCatch"]
        if "defCatch" in atkSkills: atkCombatBuffs[DEF] += atkSkills["defCatch"]
        if "resCatch" in atkSkills: atkCombatBuffs[RES] += atkSkills["resCatch"]

        if defHasPenalty and defHPEqual100Percent:
            if "atk4Catch" in atkSkills: atkCombatBuffs[ATK] += 2
            if "spd4Catch" in atkSkills: atkCombatBuffs[SPD] += 2
            if "def4Catch" in atkSkills: atkCombatBuffs[DEF] += 2
            if "res4Catch" in atkSkills: atkCombatBuffs[RES] += 2

    if atkHasPenalty or atkHPEqual100Percent:
        if "atkCatch" in defSkills: defCombatBuffs[ATK] += defSkills["atkCatch"]
        if "spdCatch" in defSkills: defCombatBuffs[SPD] += defSkills["spdCatch"]
        if "defCatch" in defSkills: defCombatBuffs[DEF] += defSkills["defCatch"]
        if "resCatch" in defSkills: defCombatBuffs[RES] += defSkills["resCatch"]

        if atkHasPenalty and atkHPEqual100Percent:
            if "atk4Catch" in defSkills: defCombatBuffs[ATK] += 2
            if "spd4Catch" in defSkills: defCombatBuffs[SPD] += 2
            if "def4Catch" in defSkills: defCombatBuffs[DEF] += 2
            if "res4Catch" in defSkills: defCombatBuffs[RES] += 2

    # MASTERY
    if "atkSpdMastery" in atkSkills and defHPGreaterEqual50Percent:
        atkCombatBuffs[ATK] += 7
        atkCombatBuffs[SPD] += 7

        tile_cond = False
        for tile in atkr.tile.tilesWithinNSpaces(2):
            if (tile.terrain == 1 or tile.terrain == 3) or (tile.divine_vein_turn > 0):
                tile_cond = True
                break

        if tile_cond:
            atkCombatBuffs[ATK] += 4
            atkCombatBuffs[SPD] += 4

    if "atkSpdMastery" in defSkills and atkHPGreaterEqual50Percent:
        defCombatBuffs[ATK] += 7
        defCombatBuffs[SPD] += 7

        tile_cond = False
        for tile in defr.tile.tilesWithinNSpaces(2):
            if (tile.terrain == 1 or tile.terrain == 3) or (tile.divine_vein_turn > 0):
                tile_cond = True
                break

        if tile_cond:
            defCombatBuffs[ATK] += 4
            defCombatBuffs[SPD] += 4

    # TRAMPLE
    if "trample" in atkSkills:
        atkCombatBuffs[ATK] += 7
        atkCombatBuffs[SPD] += 7
        atkr.self_desperation = True

        tile_cond = False
        for tile in atkr.tile.tilesWithinNSpaces(2):
            if (tile.terrain == 1 or tile.terrain == 3) or (tile.divine_vein_turn > 0):
                tile_cond = True
                break

        if tile_cond or defender.move == 0 or defender.move == 3:
            atkCombatBuffs[ATK] += 3
            atkCombatBuffs[SPD] += 3
            atkr.true_all_hits += 5

    if "trample" in defSkills and atkHPGreaterEqual75Percent:
        defCombatBuffs[ATK] += 7
        defCombatBuffs[SPD] += 7

        tile_cond = False
        for tile in defr.tile.tilesWithinNSpaces(2):
            if (tile.terrain == 1 or tile.terrain == 3) or (tile.divine_vein_turn > 0):
                tile_cond = True
                break

        if tile_cond or attacker.move == 0 or attacker.move == 3:
            defCombatBuffs[ATK] += 3
            defCombatBuffs[SPD] += 3
            defr.true_all_hits += 5

    # HEXBLADE SKILLS
    if atkHasBonus:
        if "hexbladeAtk" in atkSkills: atkCombatBuffs[ATK] += 7
        if "hexbladeSpd" in atkSkills: atkCombatBuffs[SPD] += 7
        if "hexbladeDef" in atkSkills: atkCombatBuffs[DEF] += 7
        if "hexbladeRes" in atkSkills: atkCombatBuffs[RES] += 7

    if defHasBonus:
        if "hexbladeAtk" in defSkills: defCombatBuffs[ATK] += 7
        if "hexbladeSpd" in defSkills: defCombatBuffs[SPD] += 7
        if "hexbladeDef" in defSkills: defCombatBuffs[DEF] += 7
        if "hexbladeRes" in defSkills: defCombatBuffs[RES] += 7

    # HEXEDGE SKILLS
    if Status.Anathema in attacker.statusPos:
        if "hexedgeAtk" in atkSkills: atkCombatBuffs[ATK] += 7
        if "hexedgeSpd" in atkSkills: atkCombatBuffs[SPD] += 7

        if "hexedgeSkill" in atkSkills:
            atkr.true_all_hits += 5
            atkr.damage_reduction_reduction.append(50)

    if Status.Anathema in defender.statusPos:
        if "hexedgeAtk" in defSkills: defCombatBuffs[ATK] += 7
        if "hexedgeSpd" in defSkills: defCombatBuffs[SPD] += 7

        if "hexedgeSkill" in defSkills:
            defr.true_all_hits += 5
            defr.damage_reduction_reduction.append(50)

    # PRIME SKILLS
    if atkHasBonus:
        if "atkPrime" in atkSkills: atkCombatBuffs[ATK] += min(len(attacker.statusPos) * 2 + 1 + 2 * ((atkSkills["atkPrime"] - 1) // 2), atkSkills["atkPrime"] * 2 + 1)
        if "spdPrime" in atkSkills: atkCombatBuffs[SPD] += min(len(attacker.statusPos) * 2 + 1 + 2 * ((atkSkills["spdPrime"] - 1) // 2), atkSkills["spdPrime"] * 2 + 1)
        if "defPrime" in atkSkills: atkCombatBuffs[DEF] += min(len(attacker.statusPos) * 2 + 1 + 2 * ((atkSkills["defPrime"] - 1) // 2), atkSkills["defPrime"] * 2 + 1)
        if "resPrime" in atkSkills: atkCombatBuffs[RES] += min(len(attacker.statusPos) * 2 + 1 + 2 * ((atkSkills["resPrime"] - 1) // 2), atkSkills["resPrime"] * 2 + 1)

        if "atkPrimeSe" in atkSkills: atkCombatBuffs[ATK] += min(len(attacker.statusPos) * 2 + 1 + 2 * ((atkSkills["atkPrimeSe"] - 1) // 2), atkSkills["atkPrimeSe"] * 2 + 1)
        if "spdPrimeSe" in atkSkills: atkCombatBuffs[SPD] += min(len(attacker.statusPos) * 2 + 1 + 2 * ((atkSkills["spdPrimeSe"] - 1) // 2), atkSkills["spdPrimeSe"] * 2 + 1)
        if "defPrimeSe" in atkSkills: atkCombatBuffs[DEF] += min(len(attacker.statusPos) * 2 + 1 + 2 * ((atkSkills["defPrimeSe"] - 1) // 2), atkSkills["defPrimeSe"] * 2 + 1)
        if "resPrimeSe" in atkSkills: atkCombatBuffs[RES] += min(len(attacker.statusPos) * 2 + 1 + 2 * ((atkSkills["resPrimeSe"] - 1) // 2), atkSkills["resPrimeSe"] * 2 + 1)


    if defHasBonus:
        if "atkPrime" in defSkills: defCombatBuffs[ATK] += min(len(defender.statusPos) * 2 + 1 + 2 * ((defSkills["atkPrime"] - 1) // 2), defSkills["atkPrime"] * 2 + 1)
        if "spdPrime" in defSkills: defCombatBuffs[SPD] += min(len(defender.statusPos) * 2 + 1 + 2 * ((defSkills["spdPrime"] - 1) // 2), defSkills["spdPrime"] * 2 + 1)
        if "defPrime" in defSkills: defCombatBuffs[DEF] += min(len(defender.statusPos) * 2 + 1 + 2 * ((defSkills["defPrime"] - 1) // 2), defSkills["defPrime"] * 2 + 1)
        if "resPrime" in defSkills: defCombatBuffs[RES] += min(len(defender.statusPos) * 2 + 1 + 2 * ((defSkills["resPrime"] - 1) // 2), defSkills["resPrime"] * 2 + 1)

        if "atkPrimeSe" in defSkills: defCombatBuffs[ATK] += min(len(defender.statusPos) * 2 + 1 + 2 * ((defSkills["atkPrimeSe"] - 1) // 2), defSkills["atkPrimeSe"] * 2 + 1)
        if "spdPrimeSe" in defSkills: defCombatBuffs[SPD] += min(len(defender.statusPos) * 2 + 1 + 2 * ((defSkills["spdPrimeSe"] - 1) // 2), defSkills["spdPrimeSe"] * 2 + 1)
        if "defPrimeSe" in defSkills: defCombatBuffs[DEF] += min(len(defender.statusPos) * 2 + 1 + 2 * ((defSkills["defPrimeSe"] - 1) // 2), defSkills["defPrimeSe"] * 2 + 1)
        if "resPrimeSe" in defSkills: defCombatBuffs[RES] += min(len(defender.statusPos) * 2 + 1 + 2 * ((defSkills["resPrimeSe"] - 1) // 2), defSkills["resPrimeSe"] * 2 + 1)

        if "primeCounter" in defSkills and len(defender.statusPos) >= 4:
            ignore_range = True

    # TIER 4 SEALS
    if "sealAtk4" in atkSkills:
        defCombatBuffs[ATK] -= 4

        if not defPenaltiesNeutralized[ATK]:
            defCombatBuffs[ATK] -= max(7 + defNeutrDebuffsStats[ATK], 0)
        else:
            defr.spLossOnAtk -= 1
            defr.spLossWhenAtkd -= 1

    if "sealAtk4" in defSkills:
        atkCombatBuffs[ATK] -= 4

        if not atkPenaltiesNeutralized[ATK]:
            atkCombatBuffs[ATK] -= max(7 + atkNeutrDebuffsStats[ATK], 0)
        else:
            atkr.spLossOnAtk -= 1
            atkr.spLossWhenAtkd -= 1

    if "sealSpd4" in atkSkills:
        defCombatBuffs[SPD] -= 4

        if not defPenaltiesNeutralized[SPD]:
            defCombatBuffs[SPD] -= max(7 + defNeutrDebuffsStats[SPD], 0)
        else:
            defr.spLossOnAtk -= 1
            defr.spLossWhenAtkd -= 1

    if "sealSpd4" in defSkills:
        atkCombatBuffs[SPD] -= 4

        if not atkPenaltiesNeutralized[SPD]:
            atkCombatBuffs[SPD] -= max(7 + atkNeutrDebuffsStats[SPD], 0)
        else:
            atkr.spLossOnAtk -= 1
            atkr.spLossWhenAtkd -= 1

    if "sealDef4" in atkSkills:
        defCombatBuffs[DEF] -= 4

        if not defPenaltiesNeutralized[DEF]:
            defCombatBuffs[DEF] -= max(7 + defNeutrDebuffsStats[DEF], 0)
        else:
            defr.spLossOnAtk -= 1
            defr.spLossWhenAtkd -= 1

    if "sealDef4" in defSkills:
        atkCombatBuffs[DEF] -= 4

        if not atkPenaltiesNeutralized[DEF]:
            atkCombatBuffs[DEF] -= max(7 + atkNeutrDebuffsStats[DEF], 0)
        else:
            atkr.spLossOnAtk -= 1
            atkr.spLossWhenAtkd -= 1

    if "sealRes4" in atkSkills:
        defCombatBuffs[RES] -= 4

        if not defPenaltiesNeutralized[RES]:
            defCombatBuffs[RES] -= max(7 + defNeutrDebuffsStats[RES], 0)
        else:
            defr.spLossOnAtk -= 1
            defr.spLossWhenAtkd -= 1

    if "sealRes4" in defSkills:
        atkCombatBuffs[RES] -= 4

        if not atkPenaltiesNeutralized[RES]:
            atkCombatBuffs[RES] -= max(7 + atkNeutrDebuffsStats[RES], 0)
        else:
            atkr.spLossOnAtk -= 1
            atkr.spLossWhenAtkd -= 1

    if "sealAtkRes" in atkSkills:
        defCombatBuffs[ATK] -= 3 + max(6 + defender.get_total_debuff(ATK), 0)
        defCombatBuffs[RES] -= 3 + max(6 + defender.get_total_debuff(RES), 0)

        if defender.get_total_debuff(ATK) or defender.get_total_debuff(RES):
            defr.spLossOnAtk -= 1
            defr.spLossWhenAtkd -= 1

    if "sealAtkRes" in defSkills:
        atkCombatBuffs[ATK] -= 3 + max(6 + attacker.get_total_debuff(ATK), 0)
        atkCombatBuffs[RES] -= 3 + max(6 + attacker.get_total_debuff(RES), 0)

        if attacker.get_total_debuff(ATK) or attacker.get_total_debuff(RES):
            atkr.spLossOnAtk -= 1
            atkr.spLossWhenAtkd -= 1

    if "sealSpdDef" in atkSkills:
        defCombatBuffs[SPD] -= 3
        defCombatBuffs[DEF] -= 3

        defCombatBuffs[SPD] -= max(6 + defender.get_total_debuff(SPD), 0)
        defCombatBuffs[DEF] -= max(6 + defender.get_total_debuff(DEF), 0)

        if defender.get_total_debuff(SPD) or defender.get_total_debuff(DEF):
            defr.spLossOnAtk -= 1
            defr.spLossWhenAtkd -= 1

    if "sealSpdDef" in defSkills:
        atkCombatBuffs[SPD] -= 3
        atkCombatBuffs[DEF] -= 3

        atkCombatBuffs[SPD] -= max(6 + attacker.get_total_debuff(SPD), 0)
        atkCombatBuffs[DEF] -= max(6 + attacker.get_total_debuff(DEF), 0)

        if attacker.get_total_debuff(SPD) or attacker.get_total_debuff(DEF):
            atkr.spLossOnAtk -= 1
            atkr.spLossWhenAtkd -= 1

    if "sealSpdRes" in atkSkills:
        defCombatBuffs[SPD] -= 3
        defCombatBuffs[RES] -= 3

        defCombatBuffs[SPD] -= max(6 + defender.get_total_debuff(SPD), 0)
        defCombatBuffs[RES] -= max(6 + defender.get_total_debuff(RES), 0)

        if defender.get_total_debuff(SPD) or defender.get_total_debuff(RES):
            defr.spLossOnAtk -= 1
            defr.spLossWhenAtkd -= 1

    if "sealSpdRes" in defSkills:
        atkCombatBuffs[SPD] -= 3
        atkCombatBuffs[RES] -= 3

        atkCombatBuffs[SPD] -= max(6 + attacker.get_total_debuff(SPD), 0)
        atkCombatBuffs[RES] -= max(6 + attacker.get_total_debuff(RES), 0)

        if attacker.get_total_debuff(SPD) or attacker.get_total_debuff(RES):
            atkr.spLossOnAtk -= 1
            atkr.spLossWhenAtkd -= 1

    if "sealDefRes" in atkSkills:
        defCombatBuffs[DEF] -= 3
        defCombatBuffs[RES] -= 3

        defCombatBuffs[DEF] -= max(6 + defender.get_total_debuff(DEF), 0)
        defCombatBuffs[RES] -= max(6 + defender.get_total_debuff(RES), 0)

        if defender.get_total_debuff(DEF) or defender.get_total_debuff(RES):
            defr.spLossOnAtk -= 1
            defr.spLossWhenAtkd -= 1

    if "sealDefRes" in defSkills:
        atkCombatBuffs[DEF] -= 3
        atkCombatBuffs[RES] -= 3

        atkCombatBuffs[DEF] -= max(6 + attacker.get_total_debuff(DEF), 0)
        atkCombatBuffs[RES] -= max(6 + attacker.get_total_debuff(RES), 0)

        if attacker.get_total_debuff(DEF) or attacker.get_total_debuff(RES):
            atkr.spLossOnAtk -= 1
            atkr.spLossWhenAtkd -= 1

    # WHERE BONUSES AND PENALTIES ARE FULLY NEUTRALIZED
    for i in range(1, 5):
        atkCombatBuffs[i] -= atkPenaltiesNeutralized[i] * (attacker.debuffs[i] + min(attacker.buffs[i] * AtkPanicFactor, 0))
        atkCombatBuffs[i] -= atkBonusesNeutralized[i] * max(attacker.buffs[i] * AtkPanicFactor, 0)

        defCombatBuffs[i] -= defPenaltiesNeutralized[i] * (defender.debuffs[i] + min(defender.buffs[i] * DefPanicFactor, 0))
        defCombatBuffs[i] -= defBonusesNeutralized[i] * max(defender.buffs[i] * DefPanicFactor, 0)

    # add combat buffs to stats

    i = 0
    while i < 5:
        atkStats[i] += atkCombatBuffs[i]
        defStats[i] += defCombatBuffs[i]
        i += 1

    i = 0
    while i < 5:
        atkPhantomStats[i] += atkStats[i]
        defPhantomStats[i] += defStats[i]
        i += 1

    # From this point on, use atkStats/defStats for getting direct values in combat
    # Use atkPhantomStats/defPhantomStats for comparisons
    # END OF STAT MODIFICATION SKILLS, NO MORE SHOULD EXIST BENEATH THIS LINE

    # Except Igrene because FEH worded her weapon incorrectly so they just fixed it so that it works after everyone else's effects trigger
    # https://feheroes.fandom.com/wiki/Regarding_an_Issue_with_the_Description_of_the_Guardian%27s_Bow_Skill_and_How_It_Will_Be_Addressed_(Notification)
    if "what the hell????" in atkSkills and atkPhantomStats[SPD] > defPhantomStats[SPD] and not atkIgreneTriggered:
        defStats[ATK] = max(defStats[ATK] - 5, 0)
        defStats[SPD] = max(defStats[SPD] - 5, 0)
        defStats[DEF] = max(defStats[DEF] - 5, 0)

        defPhantomStats[ATK] = max(defPhantomStats[ATK] - 5, 0)
        defPhantomStats[SPD] = max(defPhantomStats[SPD] - 5, 0)
        defPhantomStats[DEF] = max(defPhantomStats[DEF] - 5, 0)

    if "what the hell????" in defSkills and defPhantomStats[SPD] > atkPhantomStats[SPD] and not defIgreneTriggered:
        atkStats[ATK] = max(atkStats[ATK] - 5, 0)
        atkStats[SPD] = max(atkStats[SPD] - 5, 0)
        atkStats[DEF] = max(atkStats[DEF] - 5, 0)

        atkPhantomStats[ATK] = max(atkPhantomStats[ATK] - 5, 0)
        atkPhantomStats[SPD] = max(atkPhantomStats[SPD] - 5, 0)
        atkPhantomStats[DEF] = max(atkPhantomStats[DEF] - 5, 0)

    # OK FOR REAL NO MORE CHANGES TO THE STATS, I'M SURE FEH LEARNED THEIR LESSON
    if Status.SpecialCharge in attacker.statusPos or "fastCharge" in atkSkills:
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if Status.SpecialCharge in defender.statusPos or "fastCharge" in defSkills:
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    if "iBreath_f" in defSkills:
        defr.spGainOnAtk += defSkills["iBreath_f"]
        defr.spGainWhenAtkd += defSkills["iBreath_f"]

    # Heavy Blade, Skill
    if "heavyBlade" in atkSkills and atkPhantomStats[ATK] > defPhantomStats[ATK] + max(-2 * atkSkills["heavyBlade"] + 7, 1):
        atkr.spGainOnAtk += 1
    if "heavyBlade" in defSkills and defPhantomStats[ATK] > atkPhantomStats[ATK] + max(-2 * defSkills["heavyBlade"] + 7, 1):
        defr.spGainOnAtk += 1

    # Heavy Blade, Weapon
    if "heavyBladeW" in atkSkills and atkPhantomStats[ATK] > defPhantomStats[ATK] + max(-2 * atkSkills["heavyBladeW"] + 7, 1):
        atkr.spGainOnAtk += 1
    if "heavyBladeW" in defSkills and defPhantomStats[ATK] > atkPhantomStats[ATK] + max(-2 * defSkills["heavyBladeW"] + 7, 1):
        defr.spGainOnAtk += 1

    # Heavy Blade, Seal
    if "heavyBladeSe" in atkSkills and atkPhantomStats[ATK] > defPhantomStats[ATK] + max(-2 * atkSkills["heavyBladeSe"] + 7, 1):
        atkr.spGainOnAtk += 1
    if "heavyBladeSe" in defSkills and defPhantomStats[ATK] > atkPhantomStats[ATK] + max(-2 * defSkills["heavyBladeSe"] + 7, 1):
        defr.spGainOnAtk += 1

    # Flashing Blade, Skill
    if "flashingBlade" in atkSkills and atkPhantomStats[SPD] > defPhantomStats[SPD] + max(-2 * atkSkills["flashingBlade"] + 7, 1):
        atkr.spGainOnAtk += 1

        if "flashingBladeDmg" in atkSkills:
            atkr.true_all_hits += 5

    if "flashingBlade" in defSkills and defPhantomStats[SPD] > atkPhantomStats[SPD] + max(-2 * defSkills["flashingBlade"] + 7, 1):
        defr.spGainOnAtk += 1

        if "flashingBladeDmg" in defSkills:
            defr.true_all_hits += 5

    # Flashing Blade, Weapon
    if "flashingBladeW" in atkSkills and atkPhantomStats[SPD] > defPhantomStats[SPD] + max(-2 * atkSkills["flashingBladeW"] + 7, 1):
        atkr.spGainOnAtk += 1
    if "flashingBladeW" in defSkills and defPhantomStats[SPD] > atkPhantomStats[SPD] + max(-2 * defSkills["flashingBladeW"] + 7, 1):
        defr.spGainOnAtk += 1

    # Flash Sparrow
    if "flashSparrow" in atkSkills and atkPhantomStats[SPD] >= defPhantomStats[SPD] - 5:
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "flashSparrow" in defSkills and defPhantomStats[SPD] >= atkPhantomStats[SPD] - 5:
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Infantry Rush
    if "iRush1" in atkSkills and atkPhantomStats[ATK] >= defPhantomStats[ATK] + 5: atkr.spGainOnAtk += 1
    if "iRush2" in atkSkills and atkPhantomStats[ATK] >= defPhantomStats[ATK] + 3: atkr.spGainOnAtk += 1
    if "iRush3" in atkSkills and atkPhantomStats[ATK] >= defPhantomStats[ATK] + 1: atkr.spGainOnAtk += 1

    if "iRush1" in defSkills and defPhantomStats[ATK] >= atkPhantomStats[ATK] + 5: atkr.spGainOnAtk += 1
    if "iRush2" in defSkills and defPhantomStats[ATK] >= atkPhantomStats[ATK] + 3: atkr.spGainOnAtk += 1
    if "iRush3" in defSkills and defPhantomStats[ATK] >= atkPhantomStats[ATK] + 1: atkr.spGainOnAtk += 1

    # Infantry Flash
    if "iFlash1" in atkSkills and atkPhantomStats[SPD] >= defPhantomStats[SPD] + 5: atkr.spGainOnAtk += 1
    if "iFlash2" in atkSkills and atkPhantomStats[SPD] >= defPhantomStats[SPD] + 3: atkr.spGainOnAtk += 1
    if "iFlash3" in atkSkills and atkPhantomStats[SPD] >= defPhantomStats[SPD] + 1: atkr.spGainOnAtk += 1

    if "iFlash1" in defSkills and defPhantomStats[SPD] >= atkPhantomStats[SPD] + 5: atkr.spGainOnAtk += 1
    if "iFlash2" in defSkills and defPhantomStats[SPD] >= atkPhantomStats[SPD] + 3: atkr.spGainOnAtk += 1
    if "iFlash3" in defSkills and defPhantomStats[SPD] >= atkPhantomStats[SPD] + 1: atkr.spGainOnAtk += 1

    # Null Follow-Up
    if "NFU" in atkSkills and atkHPCur/atkStats[HP] >= 1.5 - 0.5 * atkSkills["NFU"]:
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True

    if "NFU" in defSkills and defHPCur/defStats[HP] >= 1.5 - 0.5 * defSkills["NFU"]:
        defr.defensive_NFU = True
        defr.offensive_NFU = True

    if "NFUSe" in atkSkills and atkHPCur/atkStats[HP] >= 1.5 - 0.5 * atkSkills["NFUSe"]:
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True

    if "NFUSe" in defSkills and defHPCur/defStats[HP] >= 1.5 - 0.5 * defSkills["NFUSe"]:
        defr.defensive_NFU = True
        defr.offensive_NFU = True

    # Phys/Magic Null Follow
    if "uncondHalfDR" in atkSkills: atkr.damage_reduction_reduction.append(50)
    if "uncondHalfDR" in defSkills: defr.damage_reduction_reduction.append(50)

    if "speedNFU" in atkSkills and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True

    if "speedNFU" in defSkills and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        defr.defensive_NFU = True
        defr.offensive_NFU = True

    # Sea Tambourine
    if "seaTembourine" in atkSkills and atkHPGreaterEqual25Percent and atkPhantomStats[SPD] >= defPhantomStats[SPD] - 5:
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True

    if "seaTembourine" in defSkills and defHPGreaterEqual25Percent and defPhantomStats[SPD] >= atkPhantomStats[SPD] - 5:
        defr.defensive_NFU = True
        defr.offensive_NFU = True

    # Tropical Conch
    if "tropicalConch" in atkSkills and atkHPGreaterEqual25Percent and atkPhantomStats[DEF] >= defPhantomStats[DEF] - 5:
        atkr.offensive_tempo = True
        atkr.defensive_tempo = True

    if "tropicalConch" in defSkills and defHPGreaterEqual25Percent and defPhantomStats[DEF] >= atkPhantomStats[DEF] - 5:
        defr.offensive_tempo = True
        defr.defensive_tempo = True

    # Even Atk Wave N
    if "waveNearDmg" in atkSkills and atkPhantomStats[ATK] >= defPhantomStats[ATK] - 5:
        atkr.true_all_hits += 5
        atkr.all_hits_heal += 5

    if "waveNearDmg" in defSkills and defPhantomStats[ATK] >= atkPhantomStats[ATK] - 5:
        defr.true_all_hits += 5
        defr.all_hits_heal += 5

    # Odd Spd Wave 4
    if "premiumOddSpd" in atkSkills and atkPhantomStats[SPD] >= defPhantomStats[SPD] - 5:
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True

    if "premiumOddSpd" in defSkills and defPhantomStats[SPD] >= atkPhantomStats[SPD] - 5:
        defr.defensive_NFU = True
        defr.offensive_NFU = True

    # Odd Def Wave 4
    if "premiumOddDef" in atkSkills and atkPhantomStats[DEF] >= defPhantomStats[DEF] - 5:
        atkr.offensive_tempo = True
        atkr.defensive_tempo = True

    if "premiumOddDef" in defSkills and defPhantomStats[DEF] >= atkPhantomStats[DEF] - 5:
        defr.offensive_tempo = True
        defr.defensive_tempo = True

    # Null Blade/Spear
    if "nullWeapon" in atkSkills and atkHPGreaterEqual25Percent and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True
        atkr.true_all_hits += 5

    if "nullWeapon" in defSkills and defHPGreaterEqual25Percent and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        defr.defensive_NFU = True
        defr.offensive_NFU = True
        defr.true_all_hits += 5

    # Teatime Set
    if "teatimeSet" in atkSkills and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True

    if "teatimeSet" in defSkills and defAllyWithin2Spaces and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        defr.defensive_NFU = True
        defr.offensive_NFU = True

    # Dragon's Stone
    if "dragonsStone" in atkSkills and atkHPGreaterEqual25Percent:
        atkr.TDR_first_strikes += trunc(0.20 * atkStats[SPD])

        if atkPhantomStats[SPD] > defPhantomStats[SPD]:
            atkr.offensive_NFU = True
            atkr.defensive_NFU = True

    if "dragonsStone" in defSkills and defHPGreaterEqual25Percent:
        defr.TDR_first_strikes += trunc(0.20 * defStats[SPD])

        if defPhantomStats[SPD] > atkPhantomStats[SPD]:
            defr.offensive_NFU = True
            defr.defensive_NFU = True

    # SPEED NFU
    if atkr.speed_NFU and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True

    if defr.speed_NFU and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        defr.defensive_NFU = True
        defr.offensive_NFU = True

    # Arcane Lúin
    if "when the weapon that slowly kills you if you lack a crest can be given to everyone bottom text" in atkSkills and atkHPGreaterEqual25Percent and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True

    if "when the weapon that slowly kills you if you lack a crest can be given to everyone bottom text" in defSkills and defHPGreaterEqual25Percent and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        defr.defensive_NFU = True
        defr.offensive_NFU = True

    # Arcane Thunder
    if "arcaneThunder" in atkSkills and atkHPGreaterEqual25Percent and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True

    if "arcaneThunder" in defSkills and defHPGreaterEqual25Percent and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        defr.defensive_NFU = True
        defr.offensive_NFU = True

    # Arcane Nihility
    if "curseOfNihility" in atkSkills and atkHPGreaterEqual25Percent and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True

    if "curseOfNihility" in defSkills and defHPGreaterEqual25Percent and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        defr.defensive_NFU = True
        defr.offensive_NFU = True

    # Arcane Devourer
    if "Ganondorf" in atkSkills and atkHPGreaterEqual25Percent and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True

    if "Ganondorf" in defSkills and defHPGreaterEqual25Percent and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        defr.defensive_NFU = True
        defr.offensive_NFU = True

    # Arcane
    if "thrima" in atkSkills and atkHPGreaterEqual25Percent and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True

    if "thrima" in defSkills and defHPGreaterEqual25Percent and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        defr.defensive_NFU = True
        defr.offensive_NFU = True

    # Beast Agility
    if "beastAgility" in atkSkills and atkPhantomStats[SPD] >= defPhantomStats[SPD] + atkSkills["beastAgility"]:
        atkr.offensive_NFU = True

    if "beastAgility" in defSkills and defPhantomStats[SPD] >= atkPhantomStats[SPD] + defSkills["beastAgility"]:
        defr.offensive_NFU = True

    if "beastAgility4" in atkSkills and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True
        atkr.true_all_hits += trunc(0.10 * atkStats[SPD])

    if "beastAgility4" in defSkills and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        defr.defensive_NFU = True
        defr.offensive_NFU = True
        defr.true_all_hits += trunc(0.10 * defStats[SPD])

    # Bestial Assault
    if "definitelyNotBeastAssault" in atkSkills and (attacker.transformed or atkHPGreaterEqual25Percent):
        defCombatBuffs[SPD] -= 4
        defCombatBuffs[DEF] -= 4
        atkr.damage_reduction_reduction.append(50)

    if "definitelyNotBeastAssault" in defSkills and (defender.transformed or defHPGreaterEqual25Percent):
        atkCombatBuffs[SPD] -= 4
        atkCombatBuffs[DEF] -= 4
        defr.damage_reduction_reduction.append(50)

    # Bestial Agility
    if "bestialAgility" in atkSkills and (attacker.transformed or atkHPGreaterEqual25Percent):
        defCombatBuffs[SPD] -= 4
        defCombatBuffs[DEF] -= 4
        atkr.true_all_hits += trunc(0.20 * max(atkStats[SPD], atkStats[DEF]))

        if atkPhantomStats[SPD] > defPhantomStats[SPD]:
            atkr.defensive_NFU = True
            atkr.offensive_NFU = True

    if "bestialAgility" in defSkills and (defender.transformed or defHPGreaterEqual25Percent):
        atkCombatBuffs[SPD] -= 4
        atkCombatBuffs[DEF] -= 4
        defr.true_all_hits += trunc(0.20 * max(defStats[SPD], defStats[DEF]))

        if defPhantomStats[SPD] > atkPhantomStats[SPD]:
            defr.defensive_NFU = True
            defr.offensive_NFU = True

    # Beast Follow-Up
    if "beastFU" in atkSkills and atkHPCur / atkStats[HP] >= 1.5 - 0.5 * atkSkills["beastFU"]:
        atkr.follow_ups_skill += 1

    if "beastFU" in defSkills and defHPCur / defStats[HP] >= 1.5 - 0.5 * defSkills["beastFU"]:
        defr.follow_ups_skill += 1

    # Beast Assault
    if "beastAssault" in atkSkills: atkr.damage_reduction_reduction.append(atkSkills["beastAssault"])
    if "beastAssault" in defSkills: defr.damage_reduction_reduction.append(defSkills["beastAssault"])

    # Professorial Text (Base) - L!M!Byleth
    if "LMBylethBoost" in atkSkills and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True

    if "LMBylethBoost" in defSkills and defAllyWithin2Spaces and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        defr.defensive_NFU = True
        defr.offensive_NFU = True

    # Professorial Text (Refine Base) - L!M!Byleth
    if "LMBylethRefine" in atkSkills and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True

    if "LMBylethRefine" in defSkills and defAllyWithin3RowsCols and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        defr.defensive_NFU = True
        defr.offensive_NFU = True

    # Asura Blades (Base) - L!F!Shez
    if "LFShezBoost" in atkSkills and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "LFShezBoost" in defSkills and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Null Follow-Up Status
    if Status.NullFollowUp in attacker.statusPos and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if Status.NullFollowUp in defender.statusPos and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # Dragon's Ire
    if "dragonNFU" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 4
        defCombatBuffs[RES] -= 4
        atkr.follow_ups_skill += 1

    if "dragonNFU" in defSkills and defHPCur/defStats[HP] >= 1.25 - 0.25 * defSkills["dragonNFU"]:
        defr.follow_ups_skill += 1
        defr.offensive_NFU = True

        if defSkills["dragonNFU"] == 4:
            atkCombatBuffs[ATK] -= 4
            atkCombatBuffs[RES] -= 4

    # Counter Roar
    if "counterRoar" in atkSkills:
        atkr.DR_first_hit_NSP.append(atkSkills["counterRoar"])
        atkr.retaliatory_full_damages.append(atkSkills["counterRoar"])

    if "counterRoar" in defSkills:
        defr.DR_first_hit_NSP.append(defSkills["counterRoar"])
        defr.retaliatory_full_damages.append(defSkills["counterRoar"])

    if "counterRoar4" in atkSkills:
        atkr.DR_first_strikes_NSP.append(30)
        atkr.retaliatory_full_damages.append(30)
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "counterRoar4" in defSkills:
        defr.DR_first_strikes_NSP.append(30)
        defr.retaliatory_full_damages.append(30)
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 7, "self", "one"))

    if "wyvernRift" in atkSkills and atkStats[SPD] + atkStats[DEF] >= defStats[SPD] + defStats[DEF] - 10:
        X = min(max(0, (attacker.getStats() + attacker.buffs[DEF] * AtkPanicFactor + attacker.debuffs[DEF]) - 35), 7)
        atkr.true_all_hits += X
        atkr.TDR_first_strikes += X
        atkr.follow_ups_skill += 1
        defr.follow_up_denials -= 1
        defr.outspeed_factor += 20

    if "wyvernRift" in defSkills and defStats[SPD] + defStats[DEF] >= atkStats[SPD] + atkStats[DEF] - 10:
        X = min(max(0, (defender.getStats() + defender.buffs[DEF] * DefPanicFactor + defender.debuffs[DEF]) - 35), 7)
        defr.true_all_hits += X
        defr.TDR_first_strikes += X
        defr.follow_ups_skill += 1
        defr.follow_up_denials -= 1
        atkr.outspeed_factor += 20

    if "pegasusRift" in atkSkills and atkStats[SPD] + atkStats[DEF] >= defStats[SPD] + defStats[DEF] - 10:
        X = min(max(0, (attacker.getStats() + attacker.buffs[RES] * AtkPanicFactor + attacker.debuffs[RES]) - 35), 7)
        atkr.true_all_hits += X
        atkr.TDR_first_strikes += X
        atkr.follow_ups_skill += 1
        defr.follow_up_denials -= 1
        defr.outspeed_factor += 20

    if "pegasusRift" in defSkills and defStats[SPD] + defStats[DEF] >= atkStats[SPD] + atkStats[DEF] - 10:
        X = min(max(0, (defender.getStats() + defender.buffs[RES] * DefPanicFactor + defender.debuffs[RES]) - 35), 7)
        defr.true_all_hits += X
        defr.TDR_first_strikes += X
        defr.follow_ups_skill += 1
        defr.follow_up_denials -= 1
        atkr.outspeed_factor += 20

    # Binding Shield II
    if "bindingShieldII" in atkSkills and (atkPhantomStats[SPD] >= defPhantomStats[SPD] + 5 or defender.wpnType in DRAGON_WEAPONS):
        atkr.follow_ups_skill += 1
        defr.follow_up_denials -= 1
        cannotCounter = True

    if "bindingShieldII" in defSkills and (defPhantomStats[SPD] >= atkPhantomStats[SPD] + 5 or attacker.wpnType in DRAGON_WEAPONS):
        defr.follow_ups_skill += 1
        atkr.follow_up_denials -= 1

    # Tanngrisnir (Refine Eff) - WI!Marth
    if "but maaaaaaaaarrrss" in defSkills and defAllyWithin3Spaces and defender.wpnType in RANGED_WEAPONS and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        defr.vantage = True
        defr.self_desperation = True

    # Assured Rebirth - Medeus
    if "assuredRebirth" in atkSkills:
        if atkPhantomStats[RES] > defPhantomStats[RES]:
            atkr.follow_ups_skill += 1

        num_target_allies = len([ally for ally in atkAllyWithin3Spaces if ally.wpnType in DRAGON_WEAPONS + ["Staff"]])

        atkr.DR_all_hits_NSP.append(min(min(4 * max(atkPhantomStats[RES] - defPhantomStats[RES], 0), 40) + (num_target_allies * 20), 60))

    if "assuredRebirth" in defSkills:
        if defPhantomStats[RES] > atkPhantomStats[RES]:
            defr.follow_ups_skill += 1

        num_target_allies = len([ally for ally in defAllyWithin3Spaces if ally.wpnType in DRAGON_WEAPONS + ["Staff"]])

        defr.DR_all_hits_NSP.append(min(min(4 * max(defPhantomStats[RES] - atkPhantomStats[RES], 0), 40) + (num_target_allies * 20), 60))

    # Luna Arc (Refine Eff) - L!Alm
    if "legendAlmSweep" in atkSkills and atkHPGreaterEqual25Percent and (defender.wpnType in PHYSICAL_WEAPONS or atkPhantomStats[SPD] > defPhantomStats[SPD] + 5):
        cannotCounter = True

    # Dracofalchion (Refine Eff) - B!Alm
    if "sweeeeeeep" in atkSkills and atkHPGreaterEqual25Percent and defender.wpnType in PHYSICAL_WEAPONS and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.offensive_NFU = True
        cannotCounter = True

    if "sweeeeeeep" in defSkills and defHPGreaterEqual25Percent:
        defr.offensive_NFU = True

    # Whirling Grace (Base) - CF!Larcei
    if "cfLarceiBoost" in atkSkills and atkHPGreaterEqual25Percent and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.offensive_tempo = True

    if "cfLarceiBoost" in defSkills and defHPGreaterEqual25Percent and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        defr.offensive_tempo = True

    # Bow of Verdane (Refine Eff) - Jamke
    if "jamkeEffects" in atkSkills and atkHPGreaterEqual25Percent:
        if atkPhantomStats[SPD] - defPhantomStats[SPD] >= 3:
            atkr.follow_ups_skill += 1

        if atkPhantomStats[SPD] - defPhantomStats[SPD] >= 7:
            atkr.self_desperation = True

    # Thunder's Mjölnir (Base) - A!Ishtar
    if "aIshtarBoost" in atkSkills and atkHPGreaterEqual25Percent and atkPhantomStats[SPD] > defPhantomStats[SPD] + 10:
        atkr.brave = True

    # Constant Dagger (Refine Eff) - Leila
    if "leilaRefineSwap" in atkSkills and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        cannotCounter = True

    # Soothing Scent (Base) - TH!Leila
    if "thLeilaBoost" in atkSkills and atkHPGreaterEqual25Percent and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        cannotCounter = True

    # Lunar Brace - L!Eirika
    if "foeDefSpDamage" in atkSkills: atkr.true_sp += trunc(defStats[DEF] * 0.5)
    if "foeDefSpDamage" in defSkills: defr.true_sp += trunc(atkStats[DEF] * 0.5)

    if "lunarBraceII" in atkSkills:
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True
        atkr.true_stat_damages_from_foe.append((DEF, 15))

    if "lunarBraceII" in defSkills:
        defr.defensive_NFU = True
        defr.offensive_NFU = True
        defr.true_stat_damages_from_foe.append((DEF, 15))

    # Moonlight Bangle - B!Eirika
    if "moonlightBangle" in atkSkills:
        atkr.offensive_tempo = True
        atkr.true_sp += trunc(defStats[DEF] * (0.20 + 0.10 * attacker.specialMax))

    if "moonlightBangle" in defSkills:
        defr.offensive_tempo = True
        defr.true_sp += trunc(atkStats[DEF] * (0.20 + 0.10 * defender.specialMax))

    # Festive Siegmund (Refine Eff) - WI!Ephraim
    if "twoTurtleDoves" in defSkills and defHPGreaterEqual25Percent and defPhantomStats[ATK] > atkPhantomStats[ATK]:
        defr.brave = True

    # Reginleif (Base) - Duo Ephraim
    if "two guys" in atkSkills and (atkPhantomStats[ATK] > defPhantomStats[ATK] or Status.MobilityUp in attacker.statusPos):
        atkr.follow_ups_skill += 1

    if "two guys" in defSkills and (defPhantomStats[ATK] > atkPhantomStats[ATK] or Status.MobilityUp in defender.statusPos):
        defr.follow_ups_skill += 1

    if "what, it's just an ordianary weapon descrip-" in atkSkills and (atkPhantomStats[ATK] > defPhantomStats[ATK] or atkHasBonus):
        atkr.follow_ups_skill += 1

    if "what, it's just an ordianary weapon descrip-" in defSkills and (defPhantomStats[ATK] > atkPhantomStats[ATK] or defHasBonus):
        defr.follow_ups_skill += 1

    # Great Flame (Base/Refine Base) - Myrrh
    if "myrrhFollow" in atkSkills and atkPhantomStats[DEF] >= defPhantomStats[DEF] + atkSkills["myrrhFollow"]:
        atkr.follow_ups_skill += 1

    if "myrrhFollow" in defSkills and defPhantomStats[DEF] >= atkPhantomStats[DEF] + defSkills["myrrhFollow"]:
        defr.follow_ups_skill += 1

    # Tome of Storms (Refine Base) - SS!Selena
    if "selenaRefineBoost" in atkSkills and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        cannot_counter = True

    # Wanderer Blade
    if "wandererer" in atkSkills and defHPGreaterEqual75Percent and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "wandererer" in defSkills and atkHPGreaterEqual75Percent and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Airborne Spear (Refine Eff) - Fiora
    if "FIORAAAAAA" in atkSkills and atkHPGreaterEqual25Percent and atkStats[SPD] + atkStats[RES] >= defStats[SPD] + defStats[RES] - 5 and atkSpTriggeredByAttack:
        atkr.sp_jump_first += 2

    if "FIORAAAAAA" in defSkills and defHPGreaterEqual25Percent and defStats[SPD] + defStats[RES] >= atkStats[SPD] + atkStats[RES] - 5 and defSpTriggeredByAttack:
        defr.sp_jump_first += 2

    # Vassal-Saint Steel - A!Fir
    if "godSword?" in atkSkills and atkHPGreaterEqual25Percent and atkPhantomStats[SPD] >= defPhantomStats[SPD] + 5:
        atkr.offensive_tempo = True

    if "godSword?" in defSkills and defHPGreaterEqual25Percent and defPhantomStats[SPD] >= atkPhantomStats[SPD] + 5:
        defr.offensive_tempo = True

    # Dryblade Lance (Base) - DE!Karla
    if "hey squidward" in atkSkills and atkHPGreaterEqual25Percent:
        atkr.true_sp += trunc(atkStats[SPD] * (0.20 + 0.10 * attacker.specialMax))

    if "hey squidward" in defSkills and defHPGreaterEqual25Percent:
        defr.true_sp += trunc(defStats[SPD] * (0.20 + 0.10 * defender.specialMax))

    # Dryblade Lance (Base) - DE!Karla
    if "DK, are you gonna eat BK after you win this?" in atkSkills:
        atkr.true_sp += trunc(atkStats[SPD] * (0.20 + 0.10 * attacker.specialMax))

    if "DK, are you gonna eat BK after you win this?" in defSkills and defAllyWithin2Spaces:
        defr.true_sp += trunc(defStats[SPD] * (0.20 + 0.10 * defender.specialMax))

    # Heired Forseti (Base) - A!Ced
    if "ascCedBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkr.true_sp += trunc(atkStats[SPD] * (0.20 + 0.10 * attacker.specialMax))

    if "ascCedBoost" in defSkills and defHPGreaterEqual25Percent:
        defr.true_sp += trunc(defStats[SPD] * (0.20 + 0.10 * defender.specialMax))

    # Large War Axe (Base) - CH!Boyd
    if "chBoydBoost" in atkSkills and turn % 2 == 1:
        atkr.true_first_hit += trunc(atkStats[ATK] * 0.15)

    if "chBoydBoost" in defSkills and turn % 2 == 1:
        defr.true_first_hit += trunc(defStats[ATK] * 0.15)

    # Raven King Claw (Refine Eff) - Naesala
    if "naesalaStuff" in atkSkills and (defHPGreaterEqual75Percent or attacker.transformed):
        if atkPhantomStats[SPD] - defPhantomStats[SPD] >= 1:
            atkr.spGainOnAtk += 1

        if atkPhantomStats[SPD] - defPhantomStats[SPD] >= 7:
            atkr.offensive_NFU = True

    if "naesalaStuff" in defSkills and (atkHPGreaterEqual75Percent or defender.transformed):
        if defPhantomStats[SPD] - atkPhantomStats[SPD] >= 1:
            defr.spGainOnAtk += 1

        if defPhantomStats[SPD] - atkPhantomStats[SPD] >= 7:
            defr.offensive_NFU = True

    # Polished Fang (Base) - NY!Kyza
    if "nyKyzaBoost" in atkSkills and defHPGreaterEqual75Percent and atkPhantomStats[DEF] > defPhantomStats[DEF]:
        atkr.spGainWhenAtkd += 1
        atkr.true_all_hits += 5

    if "nyKyzaBoost" in defSkills and atkHPGreaterEqual75Percent and defPhantomStats[DEF] > atkPhantomStats[DEF]:
        defr.spGainWhenAtkd += 1
        defr.true_all_hits += 5

    # Sparkling Fang (Base) - NY!Lyre
    if "nyLyreBoost" in atkSkills and defHPGreaterEqual75Percent and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.spGainWhenAtkd += 1
        atkr.true_all_hits += 5

    if "nyLyreBoost" in defSkills and atkHPGreaterEqual75Percent and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        defr.spGainWhenAtkd += 1
        defr.true_all_hits += 5

    # Taguel Fang (Refine Eff) - Panne
    if "panneStuff" in atkSkills and atkHPGreaterEqual25Percent:
        if atkPhantomStats[SPD] - defPhantomStats[SPD] >= 1:
            atkr.follow_ups_skill += 1

        if atkPhantomStats[SPD] - defPhantomStats[SPD] >= 5:
            atkr.true_all_hits += 7

    if "panneStuff" in defSkills and defHPGreaterEqual25Percent:
        if defPhantomStats[SPD] - atkPhantomStats[SPD] >= 1:
            defr.follow_ups_skill += 1

        if defPhantomStats[SPD] - atkPhantomStats[SPD] >= 5:
            defr.true_all_hits += 7

    # Keen Rabbit Fang (Base) - NY!Panne
    if "nyPanneBoost" in atkSkills and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1

    if "nyPanneBoost" in defSkills and not defAdjacentToAlly and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1

    # Divine Breath (Refine Eff) - Naga
    if "a bit insane" in atkSkills and atkAllyWithin3Spaces and atkStats[ATK] > defStats[RES]:
        atkr.true_first_hit += trunc((atkStats[ATK] - defStats[RES]) * 0.25)

    if "a bit insane" in defSkills and defAllyWithin3Spaces and defStats[ATK] > atkStats[RES]:
        defr.true_first_hit += trunc((defStats[ATK] - atkStats[RES]) * 0.25)

    # Flowery Scroll (Base) - NI!Camilla
    if "niCamillaBoost" in defSkills and defPhantomStats[RES] > atkPhantomStats[RES]: defr.vantage = True

    # Ruinous Frost (Base) - FA!Rhea
    if "faRheaBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkr.true_first_hit += trunc(defStats[RES] * 0.40)

    if "faRheaBoost" in defSkills:
        defr.true_first_hit += trunc(atkStats[RES] * 0.40)

    # Savage Breath (Refine Eff) - FA!F!Corrin
    if "https://twitter.com/YMWyungbug/status/1887810292484374993" in atkSkills and atkHPGreaterEqual25Percent and atkStats[ATK] > defStats[RES]:
        atkr.true_first_hit += trunc((atkStats[ATK] - defStats[RES]) * 0.10 * (3 - len(atkAllyWithin2Spaces)))

    if "https://twitter.com/YMWyungbug/status/1887810292484374993" in defSkills and defHPGreaterEqual25Percent and defStats[ATK] > atkStats[RES]:
        defr.true_first_hit += trunc((defStats[ATK] - atkStats[RES]) * 0.10 * (3 - len(defAllyWithin2Spaces)))

    # Dawnsweet Box (Base) - V!Takumi
    if "vTakumiBoost" in atkSkills and atkHPGreaterEqual25Percent:
        spd_diff = atkPhantomStats[SPD] - defPhantomStats[SPD]

        if spd_diff >= -4:
            atkr.DR_first_hit_NSP.append(30)
        if spd_diff >= 0:
            atkr.all_hits_heal += 7

    if "vTakumiBoost" in defSkills and defHPGreaterEqual25Percent:
        spd_diff = defPhantomStats[SPD] - atkPhantomStats[SPD]

        if spd_diff >= -4:
            defr.DR_first_hit_NSP.append(30)
        if spd_diff >= 0:
            defr.all_hits_heal += 7

    # Duskbloom Bow (Base) - V!Leo
    if "vLeoBoost" in atkSkills:
        res_diff = atkPhantomStats[RES] - defPhantomStats[RES]

        if res_diff >= 1:
            atkr.follow_ups_skill += 1
        if res_diff >= 4:
            atkr.true_stat_damages.append((RES, 20))
        if res_diff >= 7:
            atkr.offensive_NFU = True
            atkr.DR_first_hit_NSP.append(30)

    if "vLeoBoost" in defSkills and defAllyWithin2Spaces:
        res_diff = defPhantomStats[RES] - atkPhantomStats[RES]

        if res_diff >= 1:
            defr.follow_ups_skill += 1
        if res_diff >= 4:
            defr.true_stat_damages.append((RES, 20))

    # Sæhrímnir (Refine Base) - SP!Flora
    if "let her cook!" in atkSkills and atkAllyWithin3Spaces:
        if atkPhantomStats[SPD] - defPhantomStats[SPD] >= 1:
            atkr.DR_first_hit_NSP.append(30)

        if atkPhantomStats[SPD] - defPhantomStats[SPD] >= 7:
            defr.follow_up_denials -= 1

    if "let her cook!" in defSkills and defAllyWithin3Spaces:
        if defPhantomStats[SPD] - atkPhantomStats[SPD] >= 1:
            defr.DR_first_hit_NSP.append(30)

        if defPhantomStats[SPD] - atkPhantomStats[SPD] >= 7:
            atkr.follow_up_denials -= 1

    if "selkieOutres" in atkSkills:
        if atkPhantomStats[RES] - defPhantomStats[RES] >= 1:
            defr.spLossOnAtk -= 1
            defr.spLossWhenAtkd -= 1

        if atkPhantomStats[RES] - defPhantomStats[RES] >= 5:
            atkr.offensive_NFU = True

    if "selkieOutres" in defSkills and defAllyWithin2Spaces:
        if defPhantomStats[RES] - atkPhantomStats[RES] >= 1:
            atkr.spLossOnAtk -= 1
            atkr.spLossWhenAtkd -= 1

        if defPhantomStats[RES] - atkPhantomStats[RES] >= 5:
            defr.offensive_NFU = True

    # Eldhrímnir (Refine Eff) - SP!Felicia
    if "who let her cook?" in atkSkills and defHPGreaterEqual75Percent and atkPhantomStats[RES] > defPhantomStats[RES]:
        atkr.DR_first_hit_NSP.append(30)

    if "who let her cook?" in defSkills and defPhantomStats[RES] > atkPhantomStats[RES]:
        defr.DR_first_hit_NSP.append(30)

    if "he kinda sounds like Joker Persona 5" in atkSkills and atkHPGreaterEqual25Percent and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.spGainOnAtk += 1
        atkr.true_all_hits += 5

    if "he kinda sounds like Joker Persona 5" in defSkills and defHPGreaterEqual25Percent and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        defr.spGainOnAtk += 1
        atkr.true_all_hits += 5

    # Lúin (Base) - Ingrid
    if "I'm running out of tags to give these things" in atkSkills and atkPhantomStats[SPD] >= defPhantomStats[SPD] + 5:
        cannotCounter = True

    if "I'm running out of tags to give these things" in atkSkills:
        atkr.true_sp += trunc(0.20 * atkStats[SPD])

        if atkPhantomStats[SPD] >= defPhantomStats[SPD] - 7:
            cannotCounter = True

    # Sweet Yule Log (Base) - WI!Lysithea
    if "wiLysitheaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        if atkPhantomStats[SPD] - defPhantomStats[SPD] <= 9:
            atkr.self_desperation = True
        else:
            atkr.brave = True

    # Mirage Longbow (Base) - Eleonora
    if "ellySweep" in atkSkills and atkPhantomStats[SPD] >= defPhantomStats[SPD]:
        cannotCounter = True

    # Worldsea Wave (Refine Eff) - SU!Laegjarn
    if "summerLaegjarnBoost" in atkSkills and atkPhantomStats[SPD] >= defPhantomStats[SPD] + 10:
        atkr.offensive_NFU = True

    # Lyfjaberg (Refine Base) - Eir
    if "eirRefineBoost" in defSkills and defHPGreaterEqual25Percent and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        atkr.follow_up_denials -= 1
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Inevitable Death+ - Hel
    if "inevitableII" in atkSkills and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True

    if "inevitableII" in defSkills and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        defr.offensive_NFU = True
        defr.defensive_NFU = True

    # Guard 1-3
    if "guardHP" in atkSkills and atkHPCur / atkStats[HP] >= atkSkills["guardHP"] / 10:
        defr.spLossWhenAtkd -= 1
        defr.spLossOnAtk -= 1

    if "guardHP" in defSkills and defHPCur / defStats[HP] >= defSkills["guardHP"] / 10:
        atkr.spLossWhenAtkd -= 1
        atkr.spLossOnAtk -= 1

    if "guardSe" in atkSkills and atkHPCur / atkStats[HP] >= atkSkills["guardSe"] / 10:
        defr.spLossWhenAtkd -= 1
        defr.spLossOnAtk -= 1

    if "guardSe" in defSkills and defHPCur / defStats[HP] >= defSkills["guardSe"] / 10:
        atkr.spLossWhenAtkd -= 1
        atkr.spLossOnAtk -= 1

    # Guard 4
    if "guard4" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 4
        defr.spLossWhenAtkd -= 1
        defr.spLossOnAtk -= 1
        atkr.DR_first_hit_NSP.append(30)

    if "guard4" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 4
        atkr.spLossWhenAtkd -= 1
        atkr.spLossOnAtk -= 1
        defr.DR_first_hit_NSP.append(30)

    # Guard Echo
    if "guardEcho" in atkSkills and atkHPGreaterEqual25Percent:
        defr.spLossWhenAtkd -= 1
        defr.spLossOnAtk -= 1

    if "guardEcho" in defSkills and defHPGreaterEqual25Percent:
        defr.spLossWhenAtkd -= 1
        defr.spLossOnAtk -= 1
        defr.DR_first_strikes_NSP.append(20)

    if Status.Guard in attacker.statusNeg:
        atkr.spLossWhenAtkd -= 1
        atkr.spLossOnAtk -= 1

    if Status.Guard in defender.statusNeg:
        defr.spLossWhenAtkd -= 1
        defr.spLossOnAtk -= 1

    if "uncondGuard" in atkSkills:
        defr.spLossWhenAtkd -= 1
        defr.spLossOnAtk -= 1

    if "uncondGuard" in defSkills:
        atkr.spLossWhenAtkd -= 1
        atkr.spLossOnAtk -= 1

    # Full %DR piercing on special activation
    if "DamageReductionPierce" in atkSkills:
        atkr.sp_pierce_DR = True

    if "DamageReductionPierce" in defSkills:
        defr.sp_pierce_DR = True

    # TEMPO WEAPONS/SKILLS

    if "tempo" in atkSkills:
        atkr.defensive_tempo = True
        atkr.offensive_tempo = True

    if "tempo" in defSkills:
        defr.defensive_tempo = True
        defr.offensive_tempo = True

    if "velocityTempo" in atkSkills: atkr.defensive_tempo = True
    if "velocityTempo" in defSkills: defr.defensive_tempo = True

    if atkr.offensive_tempo:
        atkr.spLossOnAtk = 0
        atkr.spLossWhenAtkd = 0

    if atkr.defensive_tempo:
        defr.spGainOnAtk = 0
        defr.spGainWhenAtkd = 0

    if defr.offensive_tempo:
        defr.spLossOnAtk = 0
        defr.spLossWhenAtkd = 0

    if defr.defensive_tempo:
        atkr.spGainOnAtk = 0
        atkr.spGainWhenAtkd = 0

    atkr.spGainOnAtk = min(atkr.spGainOnAtk, 1) + max(atkr.spLossOnAtk, -1)
    atkr.spGainWhenAtkd = min(atkr.spGainWhenAtkd, 1) + max(atkr.spLossWhenAtkd, -1)

    defr.spGainOnAtk = min(defr.spGainOnAtk, 1) + max(defr.spLossOnAtk, -1)
    defr.spGainWhenAtkd = min(defr.spGainWhenAtkd, 1) + max(defr.spLossWhenAtkd, -1)

    # Stat-Dependant Skills
    if "windsweep" in atkSkills:
        atkr.follow_up_denials -= 1

        if atkPhantomStats[SPD] >= defPhantomStats[SPD] + (
                -2 * atkSkills["windsweep"] + 7) and defender.wpnType in PHYSICAL_WEAPONS:
            cannotCounter = True

    if "watersweep" in atkSkills:
        atkr.follow_up_denials -= 1

        if atkPhantomStats[SPD] >= defPhantomStats[SPD] + (
                -2 * atkSkills["watersweep"] + 7) and defender.wpnType in MAGICAL_WEAPONS:
            cannotCounter = True

    # Savvy Fighter
    if "savvy_fighter" in defSkills:
        defr.offensive_NFU = True
        defr.defensive_NFU = True

        if defPhantomStats[SPD] >= atkPhantomStats[SPD] - defSkills["savvy_fighter"]:
            defr.DR_first_hit_NSP.append(10 * ((defSkills["savvy_fighter"] // 2) + 1))

    if "savvy_fighter_4" in defSkills:
        defCombatBuffs[ATK] -= 4
        defCombatBuffs[DEF] -= 4
        defr.offensive_NFU = True
        defr.defensive_NFU = True

        if defPhantomStats[SPD] >= atkPhantomStats[SPD] - 10:
            defr.DR_first_strikes_NSP.append(40)

    if "clever_fighter" in atkSkills:
        atkr.offensive_NFU = True
        atkr.defensive_NFU = True
        defr.outspeed_factor += 10

        if atkPhantomStats[SPD] >= defPhantomStats[SPD] - 10:
            atkr.TDR_first_strikes += 10

    if "clever_fighter" in defSkills:
        defr.offensive_NFU = True
        defr.defensive_NFU = True
        atkr.outspeed_factor += 10

        if defPhantomStats[SPD] >= atkPhantomStats[SPD] - 10:
            defr.TDR_first_strikes += 10

    # Spd Preempt
    if "spdPreempt" in defSkills and defender.wpnType in RANGED_WEAPONS and atkPhantomStats[SPD] >= defPhantomStats[SPD] + (7 - (2 * defSkills["spdPreempt"])) and not savior_triggered:
        defr.vantage = True

    # Flow Flight
    if "flowFlight" in atkSkills and atkHPCur / atkStats[HP] >= 1.5 - 0.5 * atkSkills["flowFlight"]:
        atkr.offensive_NFU = True

        if atkPhantomStats[SPD] >= defPhantomStats[SPD] - 10:
            def_difference = atkStats[DEF] - defStats[DEF]

            atkr.true_all_hits += max(0, min(trunc(def_difference * ((atkSkills["flowFlight"] * 2 + 1) / 10)), atkSkills["flowFlight"] * 2 + 1))
            atkr.TDR_all_hits += max(0, min(trunc(def_difference * ((atkSkills["flowFlight"] * 2 + 1) / 10)), atkSkills["flowFlight"] * 2 + 1))

    # Flow Feather
    if "flowFeather" in atkSkills and atkHPCur / atkStats[HP] >= 1.5 - 0.5 * atkSkills["flowFeather"]:
        atkr.offensive_NFU = True

        if atkPhantomStats[SPD] >= defPhantomStats[SPD] - 10:
            res_difference = atkStats[RES] - defStats[RES]

            atkr.true_all_hits += max(0, min(trunc(res_difference * ((atkSkills["flowFeather"] * 2 + 1) / 10)), atkSkills["flowFeather"] * 2 + 1))
            atkr.TDR_all_hits += max(0, min(trunc(res_difference * ((atkSkills["flowFeather"] * 2 + 1) / 10)), atkSkills["flowFeather"] * 2 + 1))

    # Laws of Sacae II (L!Lyn)
    if "That's a bit better" in atkSkills and atkPhantomStats[SPD] >= defPhantomStats[SPD] + 5 and attacker.wpnType in MELEE_WEAPONS:
        cannotCounter = True

    # Deep-Blue Bow (Refine Eff) - SU!Lyn
    if "summerLynSweep" in atkSkills and atkHPGreaterEqual25Percent and defender.wpnType in MELEE_WEAPONS and atkPhantomStats[SPD] >= defPhantomStats[SPD] + 5:
        cannotCounter = True

    # Firelight Lance (Base) - FF!Lyn
    if "flamingLyn" in atkSkills and atkHPGreaterEqual25Percent and atkPhantomStats[SPD] >= defPhantomStats[SPD] - 4:
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

    if "flamingLyn" in defSkills and defHPGreaterEqual25Percent and defPhantomStats[SPD] >= atkPhantomStats[SPD] - 4:
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

    # Godlike Reflexes
    if "godlikeReflexes" in atkSkills and atkPhantomStats[SPD] >= defPhantomStats[SPD] - 4:
        atkr.true_finish += trunc(0.15 * atkStats[SPD])
        atkSkills.update({"omniShield": 40})

    if "godlikeReflexes" in defSkills and defPhantomStats[SPD] >= atkPhantomStats[SPD] - 4:
        defr.true_finish += trunc(0.15 * defStats[SPD])
        defSkills.update({"omniShield": 40})

    # "if unit initiates combat, unit makes a guaranteed follow-up attack"
    if Status.Pursual in attacker.statusPos:
        atkr.follow_ups_skill += 1

    # "unit makes a guaraneteed follow-up attack"
    if Status.MakeFollowUp in atkSkills:
        atkr.follow_ups_skill += 1

    if Status.MakeFollowUp in defSkills:
        defr.follow_ups_skill += 1

    # "foe cannot make a follow-up attack"
    if Status.DenyFollowUp in atkSkills:
        defr.follow_up_denials -= 1

    if Status.DenyFollowUp in defSkills:
        atkr.follow_up_denials -= 1

    # Moonlit Bangle Q - X!Eirika
    if "moonlitBangleQ" in defSkills and defPhantomStats[SPD] >= atkPhantomStats[SPD] - 4:
        defr.vantage = True

    # Spirit Breath (Base) - H!Myrrh
    if "HMyrrhFU" in atkSkills and atkPhantomStats[DEF] >= defPhantomStats[DEF] + 5:
        atkr.follow_ups_skill += 1

    if "sueSweep" in atkSkills and atkPhantomStats[SPD] >= defPhantomStats[SPD] + 5:
        cannotCounter = True

    # Fluttering Fan - SF!Nephenee
    if "sfNepheneeBoost" in atkSkills and atkAllyWithin3RowsCols and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        cannotCounter = True

    # Brynhildr (Refine Eff) - Leo
    if "leoWowThisRefineIsGarbage" in atkSkills and atkPhantomStats[DEF] > defPhantomStats[DEF] and defender.wpnType in RANGED_WEAPONS:
        defr.follow_up_denials -= 1

    if "leoWowThisRefineIsGarbage" in defSkills and defPhantomStats[DEF] > atkPhantomStats[DEF] and attacker.wpnType in RANGED_WEAPONS:
        atkr.follow_up_denials -= 1

    # Null Follow-Up
    if Status.NullFollowUp in attacker.statusPos and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.defensive_NFU = True
        atkr.offensive_NFU = True

    if Status.NullFollowUp in defender.statusPos and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        defr.defensive_NFU = True
        defr.offensive_NFU = True

    # Scowl-based effects

    # Scowling Fighter
    if "scowling_fighter" in atkSkills and atkHPGreaterEqual25Percent and atkPhantomStats[RES] >= defPhantomStats[RES] + 5 and defSpTriggeredByAttack:
        defr.sp_jump_first -= 1

    if "scowling_fighter" in defSkills and defPhantomStats[RES] >= atkPhantomStats[RES] + 5 and atkSpTriggeredByAttack:
        atkr.sp_jump_first -= 1

    # Remote Breath (Base) - B!A!Tiki
    if "bTikiBoost" in atkSkills and atkAllyWithin3Spaces and atkPhantomStats[RES] >= defPhantomStats[RES] + 5 and defSpTriggeredByAttack:
        defr.sp_jump_first -= 1

    if "bTikiBoost" in defSkills and defAllyWithin3Spaces and defPhantomStats[RES] >= atkPhantomStats[RES] + 5 and atkSpTriggeredByAttack:
        atkr.sp_jump_first -= 1

    # Awoken Breath (Base) - A!Y!Tiki
    if "ascTikiBoost" in atkSkills and atkAllyWithin3Spaces and atkPhantomStats[RES] >= defPhantomStats[RES] + 5 and defSpTriggeredByAttack:
        defr.sp_jump_first -= 1

    if "ascTikiBoost" in defSkills and defAllyWithin3Spaces and defPhantomStats[RES] >= atkPhantomStats[RES] + 5 and atkSpTriggeredByAttack:
        atkr.sp_jump_first -= 1

    # Twin Divinestone - BR!A!Tiki
    if "brTikiBoost" in atkSkills and atkHPGreaterEqual25Percent:
        if atkPhantomStats[RES] > defPhantomStats[RES]:
            atkr.follow_ups_skill += 1
            atkr.stat_scaling_DR.append((RES, 40))
        if atkPhantomStats[RES] >= defPhantomStats[RES] + 5 and defSpTriggeredByAttack:
            defr.sp_jump_first -= 1
            atkr.sp_jump_first += 1

    if "brTikiBoost" in defSkills and defHPGreaterEqual25Percent:
        if defPhantomStats[RES] > atkPhantomStats[RES]:
            defr.follow_ups_skill += 1
            defr.stat_scaling_DR.append((RES, 40))
        if defPhantomStats[RES] >= atkPhantomStats[RES] + 5 and atkSpTriggeredByAttack:
            atkr.sp_jump_first -= 1
            defr.sp_jump_first += 1

    # Ancient Betrayal - Dragon Medeus
    if "dragonMedeusBoost" in atkSkills and atkHPGreaterEqual25Percent and atkPhantomStats[RES] >= defPhantomStats[RES] + 5 and defSpTriggeredByAttack:
        defr.sp_jump_first -= 1

    if "dragonMedeusBoost" in defSkills and defHPGreaterEqual25Percent and defPhantomStats[RES] >= atkPhantomStats[RES] + 5 and atkSpTriggeredByAttack:
        atkr.sp_jump_first -= 1

    # Ghostly Lanterns (Base) - H!Duma
    if "hDumaBoost" in atkSkills and atkHPGreaterEqual25Percent and atkPhantomStats[RES] >= defPhantomStats[RES] + 5 and defSpTriggeredByAttack:
        defr.sp_jump_first -= 1

    if "hDumaBoost" in defSkills and defHPGreaterEqual25Percent and defPhantomStats[RES] >= atkPhantomStats[RES] + 5 and atkSpTriggeredByAttack:
        atkr.sp_jump_first -= 1

    # Arcadian Axes - DE!Altina
    if "OOF, my goodness, oh" in atkSkills and atkHPGreaterEqual25Percent and atkPhantomStats[RES] >= defPhantomStats[RES] + 5 and defSpTriggeredByAttack:
        defr.sp_jump_first -= 1

    if "OOF, my goodness, oh" in defSkills and defHPGreaterEqual25Percent and defPhantomStats[RES] >= atkPhantomStats[RES] + 5 and atkSpTriggeredByAttack:
        atkr.sp_jump_first -= 1

    # Dazzling Breath (Refine Eff) - L!Fae
    if "LEMME HELP!" in atkSkills and atkAllyWithin3Spaces and atkPhantomStats[RES] >= defPhantomStats[RES] + 5 and defSpTriggeredByAttack:
        defr.sp_jump_first -= 1

    if "LEMME HELP!" in defSkills and defAllyWithin3Spaces and defPhantomStats[RES] >= atkPhantomStats[RES] + 5 and atkSpTriggeredByAttack:
        atkr.sp_jump_first -= 1

    # Moonless Breath (Refine Eff) - H!F!Grima
    if "hfGrimaScowl" in atkSkills and atkHPGreaterEqual25Percent and atkPhantomStats[RES] >= defPhantomStats[RES] + 5 and defSpTriggeredByAttack:
        defr.sp_jump_first -= 1

    if "hfGrimaScowl" in defSkills and defHPGreaterEqual25Percent and defPhantomStats[RES] >= atkPhantomStats[RES] + 5 and atkSpTriggeredByAttack:
        atkr.sp_jump_first -= 1

    # Stone of Delights - H!Nah
    if "hNahBoost" in atkSkills and atkAllyWithin3Spaces and atkPhantomStats[RES] >= defPhantomStats[RES] + 5 and defSpTriggeredByAttack:
        defr.sp_jump_first -= 1

    if "hNahBoost" in defSkills and defAllyWithin3Spaces and defPhantomStats[RES] >= atkPhantomStats[RES] + 5 and atkSpTriggeredByAttack:
        atkr.sp_jump_first -= 1

    # Hoshido's Breath - L!M!Corrin
    if "HoshidosBreath" in atkSkills and atkHPGreaterEqual25Percent and atkPhantomStats[RES] >= defPhantomStats[RES] + 5 and defSpTriggeredByAttack:
        defr.sp_jump_first -= 1

    if "HoshidosBreath" in defSkills and defHPGreaterEqual25Percent and defPhantomStats[RES] >= atkPhantomStats[RES] + 5 and atkSpTriggeredByAttack:
        atkr.sp_jump_first -= 1

    # Duskstone - CH!M!Corrin
    if "chCorrinBoost" in atkSkills and atkHPGreaterEqual25Percent and atkPhantomStats[RES] >= defPhantomStats[RES] + 5 and defSpTriggeredByAttack:
        defr.sp_jump_first -= 1
        defr.sp_jump_first_brave -= 1

    # Duskstone - CH!M!Corrin
    if "chCorrinBoost" in defSkills and defHPGreaterEqual25Percent and defPhantomStats[RES] >= atkPhantomStats[RES] + 5 and atkSpTriggeredByAttack:
        atkr.sp_jump_first -= 1
        atkr.sp_jump_first_brave -= 1

    # Divine One's Arts - L!M!Alear
    if "Mr. Fire Emblem" in atkSkills and atkHPGreaterEqual25Percent and defSpTriggeredByAttack and atkPhantomStats[RES] >= defPhantomStats[RES] + 5:
        defr.sp_jump_first -= 1

    if "Mr. Fire Emblem" in defSkills and defHPGreaterEqual25Percent and atkSpTriggeredByAttack and defPhantomStats[RES] >= atkPhantomStats[RES] + 5:
        atkr.sp_jump_first -= 1

    # Fell Protection - Veyle
    if "fellProtection" in atkSkills and atkPhantomStats[RES] >= defPhantomStats[RES] + 5 and defSpTriggeredByAttack:
        defr.sp_jump_first -= 1

    if "fellProtection" in defSkills and defAllyWithin2Spaces and defPhantomStats[RES] >= atkPhantomStats[RES] + 5 and atkSpTriggeredByAttack:
        atkr.sp_jump_first -= 1

    # Fell Successor - FA!Veyle
    if ("fellSuccessor" in atkSkills or "fellMajesty" in atkSkills) and atkPhantomStats[RES] >= defPhantomStats[RES] + 5 and defSpTriggeredByAttack:
        defr.sp_jump_first -= 1

        if defender.wpnType in RANGED_WEAPONS:
            defr.sp_jump_followup -= 1

    if ("fellSuccessor" in defSkills or "fellMajesty" in defSkills) and defAllyWithin2Spaces and defPhantomStats[RES] >= atkPhantomStats[RES] + 5 and atkSpTriggeredByAttack:
        atkr.sp_jump_first -= 1

        if attacker.wpnType in RANGED_WEAPONS:
            atkr.sp_jump_followup -= 1

    # Protective - Nel
    if "protective" in atkSkills and atkHPGreaterEqual25Percent and (atkPhantomStats[RES] >= defPhantomStats[RES] + 5 or defender.emblem):
        atkr.TDR_first_strikes += trunc(0.15 * defStats[ATK])

        if defSpTriggeredByAttack:
            defr.sp_jump_first -= 1

    if "protective" in defSkills and defHPGreaterEqual25Percent and (defPhantomStats[RES] >= atkPhantomStats[RES] + 5 or attacker.emblem):
        defr.TDR_first_strikes += trunc(0.15 * atkStats[ATK])

        if atkSpTriggeredByAttack:
            atkr.sp_jump_first -= 1

    # Pure Dragon Wall - V!Rhea
    if "pureDragonWall" in atkSkills and defSpTriggeredByAttack and atkPhantomStats[RES] >= defPhantomStats[RES] + 5:
        defr.sp_jump_first -= 1
        atkr.sp_jump_foe_first += 1

    if "pureDragonWall" in defSkills and atkSpTriggeredByAttack and defPhantomStats[RES] >= atkPhantomStats[RES] + 5:
        atkr.sp_jump_first -= 1
        defr.sp_jump_foe_first += 1

    # Scowl skill
    if "resSpSlow" in atkSkills and atkPhantomStats[RES] >= defPhantomStats[RES] + atkSkills["resSpSlow"] and defSpTriggeredByAttack and defHPGreaterEqual75Percent:
        defr.sp_jump_first -= 1

    if "resSpSlow" in defSkills and defPhantomStats[RES] >= atkPhantomStats[RES] + defSkills["resSpSlow"] and atkSpTriggeredByAttack:
        atkr.sp_jump_first -= 1

    if "scowlEcho" in atkSkills and atkPhantomStats[RES] >= defPhantomStats[RES] + 5 and defSpTriggeredByAttack and defHPGreaterEqual75Percent:
        defr.sp_jump_first -= 1

    if "scowlEcho" in defSkills and defPhantomStats[RES] >= atkPhantomStats[RES] + 5 and atkSpTriggeredByAttack:
        atkr.sp_jump_first -= 1

    if "waveScowl" in atkSkills and atkPhantomStats[RES] >= defPhantomStats[RES] + 5 and defSpTriggeredByAttack:
        defr.sp_jump_first -= 1

    if "waveScowl" in defSkills and defPhantomStats[RES] >= atkPhantomStats[RES] + 5 and atkSpTriggeredByAttack:
        atkr.sp_jump_first -= 1

    # Dragon's Roar
    if "dragonsRoar" in atkSkills and atkPhantomStats[RES] >= defPhantomStats[RES] - 4: atkr.DR_sp_trigger_by_any_special_SP.append(40)
    if "dragonsRoar" in defSkills and defPhantomStats[RES] >= atkPhantomStats[RES] - 4: defr.DR_sp_trigger_by_any_special_SP.append(40)

    # Gust
    if "gustDR" in atkSkills and atkPhantomStats[SPD] >= defPhantomStats[SPD] - 4: atkr.DR_sp_trigger_by_any_special_SP.append(40)
    if "gustDR" in defSkills and defPhantomStats[SPD] >= atkPhantomStats[SPD] - 4: defr.DR_sp_trigger_by_any_special_SP.append(40)

    if "boulderDR" in atkSkills and atkPhantomStats[DEF] >= defPhantomStats[DEF] - 4: atkr.DR_sp_trigger_by_any_special_SP.append(40)
    if "boulderDR" in defSkills and defPhantomStats[DEF] >= atkPhantomStats[DEF] - 4: defr.DR_sp_trigger_by_any_special_SP.append(40)

    # Sturdy Beast
    if "defBeastAnyDR" in atkSkills and (atkPhantomStats[DEF] >= defPhantomStats[DEF] - 4 or attacker.transformed): atkr.DR_sp_trigger_by_any_special_SP.append(40)
    if "defBeastAnyDR" in defSkills and (defPhantomStats[DEF] >= atkPhantomStats[DEF] - 4 or defender.transformed): defr.DR_sp_trigger_by_any_special_SP.append(40)

    # Nimble Beast
    if "spdBeastAnyDR" in atkSkills and (atkPhantomStats[SPD] >= defPhantomStats[SPD] - 4 or attacker.transformed): atkr.DR_sp_trigger_by_any_special_SP.append(40)
    if "spdBeastAnyDR" in defSkills and (defPhantomStats[SPD] >= atkPhantomStats[SPD] - 4 or defender.transformed): defr.DR_sp_trigger_by_any_special_SP.append(40)

    # Dragon Flame
    if "dragonFlame" in atkSkills:
        atkr.surge_heal += trunc(atkStats[HP] * 0.30)

        if atkPhantomStats[DEF] >= defPhantomStats[DEF] - 10:
            atkr.DR_sp_trigger_by_any_special_SP.append(40)

    if "dragonFlame" in defSkills:
        defr.surge_heal += trunc(defStats[HP] * 0.30)
        defr.DR_sp_trigger_by_any_special_SP.append(40)

    if "buggedDragonFlame" in atkSkills:
        atkr.disable_def_sp = True

    if "buggedDragonFlame" in defSkills:
        defr.disable_def_sp = True

    # Ice Wall
    if "iceWall" in atkSkills and atkPhantomStats[RES] >= defPhantomStats[RES] - 10: atkr.DR_sp_trigger_by_any_special_SP.append(40)
    if "iceWall" in defSkills and defPhantomStats[RES] >= atkPhantomStats[RES] - 10: defr.DR_sp_trigger_by_any_special_SP.append(40)

    # TRUE DAMAGE ADDITION
    for x in atkr.true_stat_damages:
        stat, percentage = x

        if stat == HP:
            atkr.true_all_hits += math.trunc(atkHPCur * (percentage / 100))
        else:
            atkr.true_all_hits += math.trunc(atkStats[stat] * (percentage / 100))

    for x in defr.true_stat_damages:
        stat, percentage = x

        if stat == HP:
            defr.true_all_hits += math.trunc(defHPCur * (percentage / 100))
        else:
            defr.true_all_hits += math.trunc(defStats[stat] * (percentage / 100))

    for x in atkr.true_stat_damages_from_foe:
        stat, percentage = x

        if stat == HP:
            atkr.true_all_hits += math.trunc(defHPCur * (percentage / 100))
        else:
            atkr.true_all_hits += math.trunc(defStats[stat] * (percentage / 100))

    for x in defr.true_stat_damages_from_foe:
        stat, percentage = x

        if stat == HP:
            defr.true_all_hits += math.trunc(atkHPCur * (percentage / 100))
        else:
            defr.true_all_hits += math.trunc(atkStats[stat] * (percentage / 100))

    if Status.Exposure in defender.statusNeg: atkr.true_all_hits += 10
    if Status.Exposure in attacker.statusNeg: defr.true_all_hits += 10

    # Damage based on speed difference
    if "SpdDmg" in atkSkills and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.true_all_hits += min(math.trunc((atkPhantomStats[SPD] - defPhantomStats[SPD]) * 0.1 * atkSkills["SpdDmg"]), atkSkills["SpdDmg"])
    if "SpdDmg" in defSkills and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        defr.true_all_hits += min(math.trunc((defPhantomStats[SPD] - atkPhantomStats[SPD]) * 0.1 * defSkills["SpdDmg"]), defSkills["SpdDmg"])

    if "niCorrinDmg" in atkSkills and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.true_all_hits += min(math.trunc((atkPhantomStats[SPD] - defPhantomStats[SPD]) * 0.7), 7)

    if "ninjaDmg" in atkSkills and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.true_all_hits += min(math.trunc((atkPhantomStats[SPD] - defPhantomStats[SPD]) * 0.5), 4)

    # Guardian Fang (Refine Base) - NY!Lethe
    if ("nyLetheBoost" in atkSkills or "nyLetheBoostPlus" in atkSkills) and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.true_all_hits += min(math.trunc((atkPhantomStats[SPD] - defPhantomStats[SPD]) * 0.7), 7)
    if ("nyLetheBoost" in defSkills or "nyLetheBoostPlus" in defSkills) and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        defr.true_all_hits += min(math.trunc((defPhantomStats[SPD] - atkPhantomStats[SPD]) * 0.7), 7)

    # New Foxkit Fang (Base) - NY!Selkie
    if ("nySelkieBoost" in atkSkills or "nySelkieRefine" in atkSkills) and atkPhantomStats[RES] > defPhantomStats[RES]:
        atkr.true_all_hits += min(math.trunc((atkPhantomStats[RES] - defPhantomStats[RES]) * 0.7), 7)
    if ("nySelkieBoost" in defSkills or "nySelkieRefine" in defSkills) and defPhantomStats[RES] > atkPhantomStats[RES]:
        defr.true_all_hits += min(math.trunc((defPhantomStats[RES] - atkPhantomStats[RES]) * 0.7), 7)

    # Refreshed Fang (Base) - NY!Kaden
    if "nyKadenBoost" in atkSkills and defHPGreaterEqual75Percent and atkPhantomStats[SPD] > defPhantomStats[SPD]:
        atkr.true_all_hits += min(math.trunc((atkPhantomStats[SPD] - defPhantomStats[SPD]) * 0.7), 7)

    if "nyKadenBoost" in defSkills and atkHPGreaterEqual75Percent and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        defr.true_all_hits += min(math.trunc((defPhantomStats[SPD] - atkPhantomStats[SPD]) * 0.7), 7)

    # Resolved Fang (Base) - NY!Keaton
    if "nyKeatonBoost" in atkSkills and defHPGreaterEqual75Percent and atkPhantomStats[DEF] > defPhantomStats[DEF]:
        atkr.true_all_hits += min(math.trunc((atkPhantomStats[DEF] - defPhantomStats[DEF]) * 0.7), 7)

    if "nyKeatonBoost" in defSkills and atkHPGreaterEqual75Percent and defPhantomStats[DEF] > atkPhantomStats[DEF]:
        defr.true_all_hits += min(math.trunc((defPhantomStats[DEF] - atkPhantomStats[DEF]) * 0.7), 7)

    # Ashera's Chosen+ - Altina
    if "newChosen" in atkSkills and (all([ally.wpnType in DRAGON_WEAPONS + BEAST_WEAPONS for ally in atkAdjacentToAlly]) or defHPGreaterEqual75Percent):
        if atkPhantomStats[RES] > defPhantomStats[RES]:
            atkr.true_all_hits += min(math.trunc((atkPhantomStats[RES] - defPhantomStats[RES]) * 0.7), 7)

    if "newChosen" in defSkills and (all([ally.wpnType in DRAGON_WEAPONS + BEAST_WEAPONS for ally in defAdjacentToAlly]) or atkHPGreaterEqual75Percent):
        if defPhantomStats[RES] > atkPhantomStats[RES]:
            defr.true_all_hits += min(math.trunc((defPhantomStats[RES] - atkPhantomStats[RES]) * 0.7), 7)

    if "SUTikiDamage" in atkSkills and atkAllyWithin3Spaces:
        atkr.true_sp += math.trunc(defStats[SPD] * (0.1 * attacker.specialMax + 0.2))

    if "SUTikiDamage" in defSkills and defAllyWithin3Spaces:
        defr.true_sp += math.trunc(atkStats[SPD] * (0.1 * defender.specialMax + 0.2))

    # Light Brand (Base) - Leif
    if "thraciaMoment" in atkSkills and defStats[DEF] >= defStats[RES] + 5:
        atkr.true_all_hits += 7
    if "thraciaMoment" in defSkills and atkStats[DEF] >= atkStats[RES] + 5:
        defr.true_all_hits += 7

    # Quick Mulagir (Refine Eff) - Sue
    if "sueScatter" in atkSkills and atkHPGreaterEqual25Percent:
        atkr.true_first_hit += math.trunc(atkStats[SPD] * 0.15)

    if "sueScatter" in defSkills and defHPGreaterEqual25Percent:
        defr.true_first_hit += math.trunc(defStats[SPD] * 0.15)

    if "canasBoost" in atkSkills and atkAllyWithin3Spaces:
        atkr.true_all_hits += max(math.trunc(atkStats[RES] * 0.20), math.trunc(defStats[RES] * 0.20))

    if "canasBoost" in defSkills and defAllyWithin3Spaces:
        defr.true_all_hits += max(math.trunc(atkStats[RES] * 0.20), math.trunc(defStats[RES] * 0.20))

    # Holytide Tyrfing (Base) - B!Seliph
    if "I HATE FIRE JOKES >:(" in atkSkills and spaces_moved_by_atkr:
        atkr.true_all_hits += math.trunc(defStats[DEF] * 0.10 * min(spaces_moved_by_atkr, 4))
    if "I HATE FIRE JOKES >:(" in defSkills and spaces_moved_by_atkr:
        defr.true_all_hits += math.trunc(atkStats[DEF] * 0.10 * min(spaces_moved_by_atkr, 4))

    # Blade of Renais (Base) - CH!Eirika
    if "renaisTwins" in atkSkills and (atkHasBonus or atkHasPenalty):
        atkr.true_all_hits += math.trunc(defStats[DEF] * 0.20)
        atkr.all_hits_heal += math.trunc(defStats[DEF] * 0.20)

    if "renaisTwins" in defSkills and defAllyWithin2Spaces and (defHasBonus or defHasPenalty):
        defr.true_all_hits += math.trunc(atkStats[DEF] * 0.20)
        defr.all_hits_heal += math.trunc(defStats[DEF] * 0.20)

    # Astra Blade (Base/Refine Base) - Valentia Catria
    if "megaAstra" in atkSkills and atkStats[ATK] > defStats[DEF]:
        atkr.true_all_hits += max(trunc((atkStats[ATK] - defStats[DEF]) * 0.5), 0)

    if "megaAstra" in defSkills and defStats[ATK] > atkStats[DEF]:
        defr.true_all_hits += max(trunc((defStats[ATK] - atkStats[DEF]) * 0.5), 0)

    # Imbued Koma (Refine Eff) - NY!Alfonse
    if "newAlfonseGuy" in atkSkills and atkAllyWithin3Spaces:
        atkr.true_sp += trunc(atkStats[DEF] * 0.15)

    if "newAlfonseGuy" in defSkills and defAllyWithin3Spaces:
        defr.true_sp += trunc(defStats[DEF] * 0.15)

    if "sky-hopper" in atkSkills and atkHPGreaterEqual25Percent:
        atkr.true_all_hits += trunc(0.2 * atkStats[SPD])

    if "sky-hopper" in defSkills and defHPGreaterEqual25Percent:
        defr.true_all_hits += trunc(0.2 * defStats[SPD])

    # Fell Breath (Refine Eff) - Duma
    if "Twilight of the Gods is so peak" in atkSkills and atkStats[ATK] > defStats[RES]:
        atkr.true_first_hit += trunc(0.3 * (atkStats[ATK] - defStats[RES]))

    if "Twilight of the Gods is so peak" in defSkills and defAllyWithin2Spaces and defStats[ATK] > atkStats[RES]:
        defr.true_first_hit += trunc(0.3 * (defStats[ATK] - atkStats[RES]))

    # Woeful Upheaval - H!Duma
    if "woefulUpheaval" in atkSkills:
        atk_diff = max(atkPhantomStats[ATK] - defPhantomStats[ATK], 0)
        hp_diff = defStats[HP] - defHPCur

        atkr.DR_first_hit_NSP.append(3 * (atk_diff + hp_diff))

    if "woefulUpheaval" in defSkills:
        atk_diff = max(defPhantomStats[ATK] - atkPhantomStats[ATK], 0)
        hp_diff = atkStats[HP] - atkHPCur

        defr.DR_first_hit_NSP.append(3 * (atk_diff + hp_diff))

    # Domain of Flame - Múspell
    if ("muspellField" in atkSkills or "muspellField_f" in atkSkills) and atkAllyWithin2Spaces and atkStats[ATK] > defStats[RES]:
        atkr.true_first_hit += trunc(0.3 * (atkStats[ATK] - defStats[RES]))

    if ("muspellField" in defSkills or "muspellField_f" in defSkills) and defAllyWithin2Spaces and defStats[ATK] > atkStats[RES]:
        defr.true_first_hit += trunc(0.3 * (defStats[ATK] - atkStats[RES]))

    # Dragon's Wrath
    if "dragonsWrath" in atkSkills and atkSkills["dragonsWrath"] == 25:
        atkr.DR_first_hit_NSP.append(defSkills["dragonsWrath"])

        if atkStats[ATK] > defStats[RES]:
            atkr.true_first_hit += trunc(0.01 * atkSkills["dragonsWrath"] * (atkStats[ATK] - defStats[RES]))

    if "dragonsWrath" in defSkills:
        defr.DR_first_hit_NSP.append(defSkills["dragonsWrath"])

        if defStats[ATK] > atkStats[RES]:
            defr.true_first_hit += trunc(0.01 * defSkills["dragonsWrath"] * (defStats[ATK] - atkStats[RES]))

    if "dragonsWrathSe" in defSkills:
        defr.DR_first_hit_NSP.append(defSkills["dragonsWrathSe"])

        if defStats[ATK] > atkStats[RES]:
            defr.true_first_hit += trunc(0.01 * defSkills["dragonsWrathSe"] * (defStats[ATK] - atkStats[RES]))

    # Ancient Voice - X!Y!Tiki
    if "yyTikiBoost" in atkSkills and atkAllyWithin3Spaces:
        atkr.TDR_first_strikes += trunc(0.20 * atkStats[DEF])

        if atkPhantomStats[DEF] >= defPhantomStats[DEF] + 5:
            atkr.hardy_bearing = True
            defr.hardy_bearing = True

    if "yyTikiBoost" in defSkills and defAllyWithin3Spaces:
        defr.TDR_first_strikes += trunc(0.20 * defStats[DEF])

        if defPhantomStats[DEF] >= atkPhantomStats[DEF] + 5:
            atkr.hardy_bearing = True
            defr.hardy_bearing = True

    # Jokers Wild (Base) - H!Xane
    if "xaneStuff!" in atkSkills and atkAllyWithin3Spaces:
        atkr.TDR_all_hits += trunc(0.20 * max(atkStats[DEF], atkStats[RES]))

        if atkPhantomStats[RES] >= defPhantomStats[RES] + 5 and defSpTriggeredByAttack:
            defr.sp_jump_first -= 1

    if "xaneStuff!" in defSkills and defAllyWithin3Spaces:
        defr.TDR_all_hits += trunc(0.20 * max(defStats[DEF], defStats[RES]))

        if defPhantomStats[RES] >= atkPhantomStats[RES] + 5 and atkSpTriggeredByAttack:
            atkr.sp_jump_first -= 1

    # Loving Bouquets - BR!Julia
    if "brJuliaBoost" in atkSkills and atkHPGreaterEqual25Percent and atkPhantomStats[RES] >= defPhantomStats[RES] + 10:
        atkr.brave = True

    if "brJuliaBoost" in defSkills and defHPGreaterEqual25Percent and defPhantomStats[RES] >= atkPhantomStats[RES] + 10:
        defr.brave = True

    # Gray Illusion - V!Lyon
    if "grayIllusion" in atkSkills and atkPhantomStats[RES] > defPhantomStats[RES]:
        cannotCounter = True

    # Snaking Sword - NY!Tana
    if "nyTanaBoost" in atkSkills:
        atkr.TDR_first_strikes += trunc(0.20 * atkStats[SPD])

    if "nyTanaBoost" in defSkills and defAllyWithin2Spaces:
        defr.TDR_first_strikes += trunc(0.20 * atkStats[SPD])

    # Laconic Axe - DE!Marisa
    if "deMarisaBoost" in atkSkills:
        atkr.TDR_first_strikes += trunc(0.20 * atkStats[SPD])

    if "deMarisaBoost" in defSkills and defAllyWithin3RowsCols:
        defr.TDR_first_strikes += trunc(0.20 * atkStats[SPD])

    # Adroit War Tome (Base) - CH!Soren
    if "chSorenBoost" in atkSkills and atkHPGreaterEqual25Percent:
        if atkPhantomStats[RES] - defPhantomStats[RES] >= 1:
            atkr.follow_ups_skill += 1
        if atkPhantomStats[RES] - defPhantomStats[RES] >= 5 and defender.wpnType in MELEE_WEAPONS:
            cannotCounter = True
        if atkPhantomStats[RES] - defPhantomStats[RES] >= 10:
            atkr.damage_reduction_reduction.append(50)

    if "chSorenBoost" in defSkills and defHPGreaterEqual25Percent:
        if defPhantomStats[RES] - atkPhantomStats[RES] >= 1:
            defr.follow_ups_skill += 1
        if defPhantomStats[RES] - atkPhantomStats[RES] >= 10:
            defr.damage_reduction_reduction.append(50)

    # Rare Talent - B!Soren
    if "rareTalent" in atkSkills and atkHPGreaterEqual25Percent:
        if atkPhantomStats[RES] - defPhantomStats[RES] >= 1:
            atkr.offensive_tempo = True
        if atkPhantomStats[RES] - defPhantomStats[RES] >= 10:
            atkr.brave = True

    if "rareTalent" in defSkills and defHPGreaterEqual25Percent:
        if defPhantomStats[RES] - atkPhantomStats[RES] >= 1:
            defr.offensive_tempo = True
        if defPhantomStats[RES] - atkPhantomStats[RES] >= 10 and attacker.wpnType in RANGED_WEAPONS:
            defr.brave = True

    # Craver's Tome (Base) - Ilyana
    if "ilyanaBoost" in atkSkills and atkHPGreaterEqual25Percent and atkAllyWithin2Spaces and atkPhantomStats[RES] > defPhantomStats[RES]:
        atkr.TDR_all_hits += min(atkPhantomStats[RES] - defPhantomStats[RES], 20)

    if "ilyanaBoost" in defSkills and defHPGreaterEqual25Percent and defAllyWithin2Spaces and defPhantomStats[RES] > atkPhantomStats[RES]:
        defr.TDR_all_hits += min(defPhantomStats[RES] - atkPhantomStats[RES], 20)

    # Windy War Tome (Base) - CH!Ilyana
    if "chIlyanaBoost" in atkSkills and defHPGreaterEqual75Percent and atkPhantomStats[RES] > defPhantomStats[RES]:
        defr.follow_up_denials -= 1

    if "chIlyanaBoost" in defSkills and defPhantomStats[RES] > atkPhantomStats[RES]:
        atkr.follow_up_denials -= 1

    if "shinonDouble" in atkSkills and atkHPGreaterEqual25Percent:
        atkr.TDR_first_strikes += trunc(0.20 * atkStats[SPD])

    if "shinonDouble" in defSkills and defHPGreaterEqual25Percent:
        defr.TDR_first_strikes += trunc(0.20 * atkStats[SPD])

    # Moonlight Drop (Base) - SU!Micaiah
    if "suMicaiahBoost" in atkSkills:
        res_diff = atkPhantomStats[RES] - defPhantomStats[RES]

        if 5 <= res_diff <= 14:
            atkr.follow_ups_skill += 1
        elif res_diff >= 15:
            atkr.brave = True

    if "suMicaiahBoost" in defSkills and defAllyWithin2Spaces:
        res_diff = defPhantomStats[RES] - atkPhantomStats[RES]

        if 5 <= res_diff <= 14:
            defr.follow_ups_skill += 1

    if "whitecapBoost" in atkSkills and atkHPGreaterEqual25Percent and atkPhantomStats[SPD] > defPhantomStats[SPD] + 10:
        atkr.brave = True

    # Rinkah's Club (Refine Base) - Rinkah
    if "rinkahRefineBoost" in atkSkills and (not atkHPEqual100Percent or defHPGreaterEqual75Percent):
        atkr.TDR_first_strikes += trunc(0.15 * atkStats[DEF])

    if "rinkahRefineBoost" in defSkills:
        defr.TDR_first_strikes += trunc(0.15 * defStats[DEF])

    # Inner Wellspring (Refine Base) - B!F!Byleth
    if "bfBylethBoost" in atkSkills or "bfBylethRefine" in atkSkills:
        atkr.TDR_first_strikes += trunc(0.20 * atkStats[SPD])

    if ("bfBylethBoost" in defSkills or "bfBylethRefine" in defSkills) and defAllyWithin2Spaces:
        defr.TDR_first_strikes += trunc(0.20 * atkStats[SPD])

    # Captain's Sword - FA!F!Byleth
    if "Hardy Bearing or Die Swearing" in defSkills and defHPGreaterEqual25Percent and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        defr.vantage = True

    # Divine Pulse - B!F!Byleth
    if "divinePulse" in atkSkills:
        atkr.DR_sp_trigger_next_all_SP.append(75)
        atkr.true_sp_next += trunc(atkStats[SPD] * 0.20)

    if "divinePulse" in defSkills:
        defr.DR_sp_trigger_next_all_SP.append(75)
        defr.true_sp_next += trunc(atkStats[SPD] * 0.20)

    # Lone Wolf - B!Felix
    if "lone_wolf" in atkSkills and (atkHPGreaterEqual25Percent or len(atkAdjacentToAlly) <= 1):
        atkr.TDR_on_foe_sp += trunc(atkStats[SPD] * 0.20)

    if "lone_wolf" in defSkills and (defHPGreaterEqual25Percent or len(defAdjacentToAlly) <= 1):
        defr.TDR_on_foe_sp += trunc(defStats[SPD] * 0.20)

    # Fuming Freikugel (Base) - A!3H!Hilda
    if "aHildaBoost" in atkSkills and (not any([ally.get_visible_stat(DEF) > attacker.get_visible_stat(DEF) for ally in atkAllyWithin2Spaces]) or not atkAdjacentToAlly):
        atkr.true_sp += trunc(atkStats[SPD] * (0.10 * attacker.specialMax + 0.20))

    if "aHildaBoost" in defSkills and (not any([ally.get_visible_stat(DEF) > defender.get_visible_stat(DEF) for ally in defAllyWithin2Spaces]) or not defAdjacentToAlly):
        defr.true_sp += trunc(defStats[SPD] * (0.10 * defender.specialMax + 0.20))

    # Revealing Breath - Rhea
    if "rheaBoost" in atkSkills and defHPGreaterEqual75Percent:
        atkr.TDR_second_strikes += trunc(0.30 * atkStats[RES])

    if "rheaBoost" in defSkills:
        defr.TDR_second_strikes += trunc(0.30 * defStats[RES])

    # Divine Draught - SU!Ivy
    if "suIvyBoost" in atkSkills and atkHPGreaterEqual25Percent:
        cond_count = 1

        if defHasPenalty:
            cond_count += 1
        if any([ally.isSupportOf(attacker) for ally in atkAllyWithin2Spaces]) and not disableSupportEffects:
            cond_count += 1

        if cond_count >= 3:
            atkr.true_all_hits += max(trunc(0.15 * atkStats[ATK]), trunc(0.15 * defStats[ATK]))

    if "suIvyBoost" in defSkills and defHPGreaterEqual25Percent:
        cond_count = 1

        if atkHasPenalty:
            cond_count += 1
        if any([ally.isSupportOf(defender) for ally in defAllyWithin2Spaces]) and not disableSupportEffects:
            cond_count += 1

        if cond_count >= 3:
            defr.true_all_hits += max(trunc(0.15 * atkStats[ATK]), trunc(0.15 * defStats[ATK]))

    # Fell Child's Might - FA!Veyle
    if "if you don't have a cinnamon roll, you're of no use to me" in atkSkills and atkPhantomStats[RES] >= defPhantomStats[RES] + 10:
        atkr.brave = True

    if "if you don't have a cinnamon roll, you're of no use to me" in defSkills and defender.wpnType in RANGED_WEAPONS and defPhantomStats[RES] >= atkPhantomStats[RES] + 10:
        defr.brave = True

    # Gentle Fell Egg - SP!Veyle
    if "spVeyleBoost" in atkSkills and atkPhantomStats[RES] >= defPhantomStats[RES] + 10:
        atkr.brave = True

    if "spVeyleBoost" in defSkills and defAllyWithin2Spaces and defPhantomStats[RES] >= atkPhantomStats[RES] + 10:
        defr.brave = True

    # Horn of Opening (Refine Base) - Ash
    if "ashRefine" in atkSkills and atkAllyWithin3Spaces:
        atkr.TDR_on_foe_sp += trunc(min(len(atkAllyWithin3Spaces) * 0.10, 0.30) * atkStats[DEF])

    if "ashRefine" in defSkills and defAllyWithin3Spaces:
        defr.TDR_on_foe_sp += trunc(min(len(defAllyWithin3Spaces) * 0.10, 0.30) * defStats[DEF])

    # Chilled Breath (Base) - SU!Nifl
    if "suNiflBoost" in atkSkills and atkPhantomStats[SPD] > defPhantomStats[SPD] + 5:
        cannotCounter = True

    # Goddess Temari - NY!Seiðr
    if "nySeiðrBoost" in atkSkills and atkHPGreaterEqual25Percent:
        cur_turn = 4 if Status.TimesGate in attacker.statusPos or Status.TimesGrip in defender.statusNeg else turn

        if cur_turn >= 4 and atkPhantomStats[RES] >= defPhantomStats[RES] + 5:
            atkr.brave = True

    if "nySeiðrBoost" in defSkills and defHPGreaterEqual25Percent:
        cur_turn = 4 if Status.TimesGate in defender.statusPos or Status.TimesGrip in attacker.statusNeg else turn

    # Cute Paper Crane - NY!Nerþuz
    if "nyNerþuzBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkr.TDR_first_strikes += trunc(0.25 * atkStats[SPD])

    if "nyNerþuzBoost" in defSkills and defHPGreaterEqual25Percent:
        defr.TDR_first_strikes += trunc(0.25 * defStats[SPD])

    # Under the Sun - SU!Nerþuz
    if "underTheSun" in atkSkills and atkHPGreaterEqual25Percent:
        atkr.TDR_first_strikes += trunc(0.25 * atkStats[SPD])

    if "underTheSun" in defSkills and defHPGreaterEqual25Percent:
        defr.TDR_first_strikes += trunc(0.25 * defStats[SPD])

    # Quieting Branch - Læraðr
    if "treePowerActivate" in atkSkills and atkHPGreaterEqual25Percent:
        atkr.TDR_on_foe_sp += trunc(0.20 * atkStats[RES])

    if "treePowerActivate" in defSkills and defHPGreaterEqual25Percent:
        defr.TDR_on_foe_sp += trunc(0.20 * defStats[RES])

    # Sun Sword - Baldr
    if "DESUWA" in atkSkills:
        if defender.wpnType not in BLUE_WEAPONS:
            atkr.TDR_on_foe_sp += trunc(0.50 * atkStats[SPD])
        else:
            atkr.TDR_on_foe_sp += trunc(0.20 * atkStats[SPD])


    if "DESUWA" in defSkills and defAllyWithin2Spaces:
        if attacker.wpnType not in BLUE_WEAPONS:
            defr.TDR_on_foe_sp += trunc(0.50 * defStats[SPD])
        else:
            defr.TDR_on_foe_sp += trunc(0.20 * defStats[SPD])

    # Pitch-Dark Luna - L!Black Knight
    if "pitchDarkLuna" in atkSkills and atkPhantomStats[DEF] >= defPhantomStats[DEF] + 5:
        atkr.hardy_bearing = True
        defr.hardy_bearing = True

    if "pitchDarkLuna" in defSkills and defPhantomStats[DEF] >= atkPhantomStats[DEF] + 5:
        atkr.hardy_bearing = True
        defr.hardy_bearing = True

    # SKILLS

    # Arc-Fort Breath
    if "arcFortBreath" in atkSkills:
        defCombatBuffs[ATK] -= 4
        defCombatBuffs[DEF] -= 4
        atkr.true_all_hits += max(trunc(0.15 * atkStats[ATK]), trunc(0.20 * atkStats[DEF]))
        atkr.spGainOnAtk += 1
        atkr.spGainWhenAtkd += 1
        atkr.sp_pierce_DR = True

    if "arcFortBreath" in defSkills:
        atkCombatBuffs[ATK] -= 4
        atkCombatBuffs[DEF] -= 4
        defr.true_all_hits += max(trunc(0.15 * atkStats[ATK]), trunc(0.20 * atkStats[DEF]))
        defr.spGainOnAtk += 1
        defr.spGainWhenAtkd += 1
        defr.sp_pierce_DR = True

    # Assault Force
    if "assaultForce" in atkSkills:
        atkr.true_all_hits += trunc(0.20 * max(atkStats[SPD], atkStats[DEF]))

    if "assaultForce" in defSkills and defAllyWithin2Spaces:
        defr.true_all_hits += trunc(0.20 * max(defStats[SPD], defStats[DEF]))

    if "potentAssault" in atkSkills:
        atkr.damage_reduction_reduction.append(50)
        atkr.true_all_hits += trunc(0.20 * max(atkStats[SPD], atkStats[DEF]))

    if "potentAssault" in defSkills and defAllyWithin2Spaces:
        defr.damage_reduction_reduction.append(50)
        defr.true_all_hits += trunc(0.20 * max(defStats[SPD], defStats[DEF]))

    # BULWARK 4
    if "bulwarkDR" in atkSkills: atkr.DR_first_strikes_NSP.append(40)
    if "bulwarkDR" in defSkills: defr.DR_first_strikes_NSP.append(40)

    # SPIKED WALL
    if "atkSpdSpikedWall" in atkSkills:
        atkr.true_all_hits += trunc(0.15 * atkStats[SPD])
        atkr.TDR_first_strikes += 7
        atkr.offensive_tempo = True

    if "atkSpdSpikedWall" in defSkills:
        defr.true_all_hits += trunc(0.15 * defStats[SPD])
        defr.TDR_first_strikes += 7
        defr.offensive_tempo = True

    if "atkDefSpikedWall" in atkSkills:
        atkr.true_all_hits += trunc(0.15 * max(atkStats[DEF], atkStats[RES]))
        atkr.TDR_first_strikes += 7
        atkr.offensive_tempo = True

    if "atkDefSpikedWall" in defSkills:
        defr.true_all_hits += trunc(0.15 * max(defStats[DEF], defStats[RES]))
        defr.TDR_first_strikes += 7
        defr.offensive_tempo = True

    if "spdDefSpikedWall" in atkSkills:
        atkr.true_all_hits += trunc(0.15 * max(atkStats[SPD], atkStats[DEF]))
        atkr.TDR_first_strikes += 7
        atkr.offensive_tempo = True

    if "spdDefSpikedWall" in defSkills:
        defr.true_all_hits += trunc(0.15 * max(defStats[SPD], defStats[DEF]))
        defr.TDR_first_strikes += 7
        defr.offensive_tempo = True

    if "spdResSpikedWall" in atkSkills:
        atkr.true_all_hits += trunc(0.15 * max(atkStats[SPD], atkStats[RES]))
        atkr.TDR_first_strikes += 7
        atkr.offensive_tempo = True

    if "spdResSpikedWall" in defSkills:
        defr.true_all_hits += trunc(0.15 * max(defStats[SPD], defStats[RES]))
        defr.TDR_first_strikes += 7
        defr.offensive_tempo = True

    # Laguz Friend (DR, pierce)
    if "laguz_friend" in atkSkills:
        skill_lvl = atkSkills["laguz_friend"]

        if attacker.specialMax >= 3 and atkSpTriggeredByAttack or attacker.getSpecialType() == "Defense":
            atkr.TDR_all_hits += trunc(0.05 * skill_lvl * max(atkStats[DEF], atkStats[RES]))

        if attacker.specialMax >= 3 and atkSpTriggeredByAttack:
            atkr.true_sp += trunc(0.05 * skill_lvl * max(atkStats[DEF], atkStats[RES]))
            if skill_lvl == 4:
                atkr.sp_pierce_DR = True

        elif attacker.getSpecialType() == "Defense":
            atkr.true_sp_next += trunc(0.05 * skill_lvl * max(atkStats[DEF], atkStats[RES]))
            if skill_lvl == 4:
                atkr.sp_pierce_after_def_sp = True

    if "laguz_friend" in defSkills:
        skill_lvl = defSkills["laguz_friend"]

        if defender.specialMax >= 3 and defSpTriggeredByAttack or defender.getSpecialType() == "Defense":
            defr.TDR_all_hits += trunc(0.05 * skill_lvl * max(defStats[DEF], defStats[RES]))

        if defender.specialMax >= 3 and defSpTriggeredByAttack:
            defr.true_sp += trunc(0.05 * skill_lvl * max(defStats[DEF], defStats[RES]))
            if skill_lvl == 4:
                defr.sp_pierce_DR = True

        elif defender.getSpecialType() == "Defense":
            defr.true_sp_next += trunc(0.05 * skill_lvl * max(defStats[DEF], defStats[RES]))
            if skill_lvl == 4:
                defr.sp_pierce_after_def_sp = True

    # Bestial Assault
    if "definitelyNotBeastAssault" in atkSkills and (attacker.transformed or atkHPGreaterEqual25Percent):
        atkr.true_all_hits += trunc(0.20 * max(atkStats[SPD], atkStats[DEF]))

    if "definitelyNotBeastAssault" in defSkills and (defender.transformed or defHPGreaterEqual25Percent):
        defr.true_all_hits += trunc(0.20 * max(defStats[SPD], defStats[DEF]))

    for x in atkr.TDR_stats:
        stat, percentage = x
        atkr.TDR_all_hits += math.trunc(atkStats[stat] * (percentage / 100))

    for x in defr.TDR_stats:
        stat, percentage = x
        defr.TDR_all_hits += math.trunc(defStats[stat] * (percentage / 100))

    for x in atkr.TDR_first_stats:
        stat, percentage = x
        atkr.TDR_first_strikes += math.trunc(atkStats[stat] * (percentage / 100))

    for x in defr.TDR_first_stats:
        stat, percentage = x
        defr.TDR_first_strikes += math.trunc(defStats[stat] * (percentage / 100))

    for x in atkr.TDR_special_stats:
        stat, percentage = x
        atkr.TDR_on_foe_sp += math.trunc(atkStats[stat] * (percentage / 100))

    for x in defr.TDR_special_stats:
        stat, percentage = x
        defr.TDR_on_foe_sp += math.trunc(defStats[stat] * (percentage / 100))

    # EFFECTIVENESS CHECK

    atkNullEffMovement = False
    defNullEffMovement = False

    if "nullEffCav" in atkSkills and attacker.move == 1: atkNullEffMovement = True
    if ("nullEffFly" in atkSkills or "haarEff" in atkSkills or Status.NullEffFliers in attacker.statusPos) and attacker.move == 2: atkNullEffMovement = True
    if ("nullEffArm" in atkSkills or Status.NullEffArmors in attacker.statusPos) and attacker.move == 3: atkNullEffMovement = True

    if Status.FireEmblem in attacker.statusPos: atkNullEffMovement = True

    if "nullEffCav" in defSkills and defender.move == 1: defNullEffMovement = True
    if ("nullEffFly" in defSkills or "haarEff" in defSkills or Status.NullEffFliers in defender.statusPos) and defender.move == 2: defNullEffMovement = True
    if ("nullEffArm" in defSkills or Status.NullEffArmors in defender.statusPos) and defender.move == 3: defNullEffMovement = True

    if Status.FireEmblem in defender.statusPos: defNullEffMovement = True

    # Infantry Effectiveness
    if "effInf" in atkSkills and defender.move == 0 and not defNullEffMovement: atkr.effective = True
    if "effInf" in defSkills and attacker.move == 0 and not atkNullEffMovement: defr.effective = True

    # Cavalry Effectiveness
    if "effCav" in atkSkills and defender.move == 1 and not defNullEffMovement: atkr.effective = True
    if "effCav" in defSkills and attacker.move == 1 and not atkNullEffMovement: defr.effective = True

    # Flier Effectiveness
    if "effFly" in atkSkills and defender.move == 2 and not defNullEffMovement: atkr.effective = True
    if "effFly" in defSkills and attacker.move == 2 and not atkNullEffMovement: defr.effective = True

    # Bow Weapons
    if attacker.wpnType in BOW_WEAPONS and defender.move == 2 and not defNullEffMovement: atkr.effective = True
    if defender.wpnType in BOW_WEAPONS and attacker.move == 2 and not atkNullEffMovement: defr.effective = True

    # Armor Effectiveness
    if "effArmor" in atkSkills and defender.move == 3 and not defNullEffMovement: atkr.effective = True
    if "effArmor" in defSkills and attacker.move == 3 and not atkNullEffMovement: defr.effective = True

    # Cavalry and Armor
    if "effCavArmor" in atkSkills and (defender.move == 1 or defender.move == 3) and not defNullEffMovement: atkr.effective = True
    if "effCavArmor" in defSkills and (attacker.move == 1 or attacker.move == 3) and not atkNullEffMovement: defr.effective = True

    # Dragon Effectiveness
    for dragon_str in dragon_eff_strs:
        if dragon_str in atkSkills and "nullEffDragon" not in defSkills and (defender.wpnType in DRAGON_WEAPONS or "loptous" in defSkills):
            atkr.effective = True
        if dragon_str in defSkills and "nullEffDragon" not in atkSkills and (attacker.wpnType in DRAGON_WEAPONS or "loptous" in atkSkills):
            defr.effective = True

    if Status.EffDragons in attacker.statusPos and "nullEffDragon" not in defSkills and (defender.wpnType in DRAGON_WEAPONS or "loptous" in defSkills):
        atkr.effective = True
    if Status.EffDragons in defender.statusPos and "nullEffDragon" not in atkSkills and (attacker.wpnType in DRAGON_WEAPONS or "loptous" in atkSkills):
        defr.effective = True

    # Magic Effectiveness
    if "effMagic" in atkSkills and defender.wpnType in TOME_WEAPONS: atkr.effective = True
    if "effMagic" in defSkills and attacker.wpnType in TOME_WEAPONS: defr.effective = True

    # Beast Effectiveness
    beast_eff_strs = ["effBeast", "icePicnicRefine", "petraEff", "petraEffRefine", "effDragonBeast"]

    for beast_str in beast_eff_strs:
        if beast_str in atkSkills and defender.wpnType in BEAST_WEAPONS:
            atkr.effective = True
        if beast_str in defSkills and attacker.wpnType in BEAST_WEAPONS:
            defr.effective = True

    # Caeda (Sword, Lance, Axe, CBow, Armor)
    if "effCaeda" in atkSkills and (defender.wpnType in ["Sword", "Lance", "Axe", "CBow"] or (defender.move == 3 and not defNullEffMovement)):
        atkr.effective = True
    if "effCaeda" in defSkills and (attacker.wpnType in ["Sword", "Lance", "Axe", "CBow"] or (attacker.move == 3 and not atkNullEffMovement)):
        defr.effective = True

    # Swift Slice - L!F!Shez (Speed Check)
    if "effShez" in atkSkills or "swiftIce" in atkSkills:
        if defender.move == 0 and defender.wpnType not in DRAGON_WEAPONS + BEAST_WEAPONS:
            threshold = defPhantomStats[SPD] + 20
        else:
            threshold = defPhantomStats[SPD] + 5

        if atkPhantomStats[SPD] >= threshold:
            atkr.effective = True

    if defender.wpnType == "BTome" and "haarEff" in atkSkills:
        defr.effective = True
    if attacker.wpnType == "BTome" and "haarEff" in defSkills:
        atkr.effective = True

    # COLOR ADVANTAGE
    if atkr.cancel_affinity_level > 0:
        atkr.triangle_adept_level = 0

        if atkr.cancel_affinity_level == 1:
            defr.triangle_adept_level = 0

    if defr.cancel_affinity_level > 0:
        defr.triangle_adept_level = 0

        if defr.cancel_affinity_level == 1:
            atkr.triangle_adept_level = 0

    colorless_adv_attacker = "colorlessAdv" in atkSkills or "colorlessAdvRefine" in atkSkills or \
                              (("chLyonBoost" in atkSkills and defHPEqual100Percent or "colorlessAdvRanged" in atkSkills) and defender.wpnType in RANGED_WEAPONS) or \
                              ("brSophiaBoost" in atkSkills and atkHPGreaterEqual25Percent)

    colorless_adv_defender = ("colorlessAdv" in defSkills or
                              (("colorlessAdvRanged" in defSkills or "colorlessAdvRefine" in defSkills or "chLyonBoost" in defSkills) and attacker.wpnType in RANGED_WEAPONS) or \
                              ("brSophiaBoost" in atkSkills and atkHPGreaterEqual25Percent))

    if colorless_adv_attacker:
        atkr.triangle_advantage_types.extend(COLORLESS_WEAPONS)

    if colorless_adv_defender:
        defr.triangle_advantage_types.extend(COLORLESS_WEAPONS)

    # Duality - Arval
    if "Single but not alone" in atkSkills:
        atkr.triangle_advantage_types.extend(RED_WEAPONS)
        atkr.triangle_advantage_types.extend(BLUE_WEAPONS)
        atkr.triangle_advantage_types.extend(GREEN_WEAPONS)

    if "Single but not alone" in defSkills:
        defr.triangle_advantage_types.extend(RED_WEAPONS)
        defr.triangle_advantage_types.extend(BLUE_WEAPONS)
        defr.triangle_advantage_types.extend(GREEN_WEAPONS)

    # Attacker has advantage
    if defender.wpnType in atkr.triangle_advantage_types:
        if defr.cancel_affinity_level == 2:
            atkr.triangle_adept_level = 0

        if defr.cancel_affinity_level == 3 or Status.CancelAffinity in defender.statusPos:
            atkr.triangle_adept_level = -atkr.triangle_adept_level

        triAdept = min(atkr.triangle_adept_level + defr.triangle_adept_level, max(atkr.triangle_adept_level, defr.triangle_adept_level), 0.2)

        # Duality - Arval
        if "Single but not alone" in atkSkills or "Single but not alone" in defSkills:
            triAdept = 0

        atkr.triangle_advantage = 0.2 + triAdept
        defr.triangle_advantage = -1 * (0.2 + triAdept)

        wpnAdvHero = 0

    elif attacker.wpnType in defr.triangle_advantage_types:
        if atkr.cancel_affinity_level == 2:
            defr.triangle_adept_level = 0

        if atkr.cancel_affinity_level == 3 or Status.CancelAffinity in attacker.statusPos:
            defr.triangle_adept_level = -defr.triangle_adept_level

        triAdept = min(atkr.triangle_adept_level + defr.triangle_adept_level, max(atkr.triangle_adept_level, defr.triangle_adept_level), 0.2)

        # Duality - Arval
        if "Single but not alone" in atkSkills or "Single but not alone" in defSkills:
            triAdept = 0

        defr.triangle_advantage = 0.2 + triAdept
        atkr.triangle_advantage = -1 * (0.2 + triAdept)

        wpnAdvHero = 1

    # Attacker and defender are both advantageous - (Arval vs Raven Tome user)
    if defender.wpnType in atkr.triangle_advantage_types and attacker.wpnType in defr.triangle_advantage_types:
        defr.triangle_advantage = 0
        atkr.triangle_advantage = 0
        wpnAdvHero = -1

    # Weapon-triangle based effects

    # Pegasus Carrot
    if "wpnAdvNFU" in atkSkills and wpnAdvHero == 0:
        atkr.offensive_NFU = True

    if "wpnAdvNFU" in defSkills and wpnAdvHero == 1:
        defr.offensive_NFU = True

    # Faithful Breath (Base) - L!Ninian
    if "LNinianBoost" in atkSkills and atkHPCur / atkStats[HP] >= 0.40 and (wpnAdvHero == 0 or defHasPenalty):
        cannotCounter = True

    # Fujin-Raijin Yumi (Base) - L!Hinoka
    if "LHinokaBoost" in atkSkills and atkHPGreaterEqual25Percent and (wpnAdvHero == 0 or atkPhantomStats[SPD] > defPhantomStats[SPD]):
        cannotCounter = True

    # Dawnsweet Box (Base) - V!Takumi
    if "vTakumiBoost" in atkSkills and atkHPGreaterEqual25Percent:
        spd_diff = atkPhantomStats[SPD] - defPhantomStats[SPD]

        if spd_diff >= 4 and wpnAdvHero == 0 and defSpTriggeredByAttack:
            defr.sp_jump_first -= 1

    if "vTakumiBoost" in defSkills and defHPGreaterEqual25Percent:
        spd_diff = defPhantomStats[SPD] - atkPhantomStats[SPD]

        if spd_diff >= 4 and wpnAdvHero == 1 and atkSpTriggeredByAttack:
            atkr.sp_jump_first -= 1

    # Mermaid Bow (Base) - PI!Hinoka
    if "piHinokaBoost" in atkSkills and atkHPGreaterEqual25Percent and atkPhantomStats[SPD] > defPhantomStats[SPD] and wpnAdvHero == 0:
        atkr.offensive_NFU = True

    # Bewitching Tome - L!Camilla
    if "LCamillaBoost" in atkSkills:
        if atkPhantomStats[SPD] > defPhantomStats[SPD] or wpnAdvHero == 0:
            atkr.foe_burn_damage += trunc(0.40 * defStats[ATK])
        else:
            atkr.foe_burn_damage += trunc(0.20 * defStats[ATK])

    if "LCamillaBoost" in defSkills and defAllyWithin2Spaces:
        if defPhantomStats[SPD] > atkPhantomStats[SPD] or wpnAdvHero == 1:
            defr.foe_burn_damage += trunc(0.40 * atkStats[ATK])
        else:
            defr.foe_burn_damage += trunc(0.20 * atkStats[ATK])

    # This is the final variable which determines if a foe can counterattack
    distance_between_tiles = abs(atkr.tile.x_coord - defr.tile.x_coord) + abs(atkr.tile.y_coord - defr.tile.y_coord)

    if style in RANGED_STYLES:
        cannotCounterFinal = (cannotCounter and not disableCannotCounter) or not ((defender.move == 3 and defender.getRange() == 2) or ignore_range or distance_between_tiles == defender.getRange()) or defender.weapon is None
    elif style in MELEE_STYLES:
        cannotCounterFinal = (cannotCounter and not disableCannotCounter) or not ((defender.move == 3 and defender.getRange() == 1) or ignore_range or distance_between_tiles == defender.getRange()) or defender.weapon is None
    else:
        cannotCounterFinal = (cannotCounter and not disableCannotCounter) or not (attacker.getRange() == defender.getRange() or ignore_range) or defender.weapon is None

    # Tender Vessel - V!Lyon
    if "vLyonBoost" in atkSkills and atkHPGreaterEqual25Percent:
        if atkPhantomStats[RES] > defPhantomStats[RES] or wpnAdvHero == 0:
            atkr.foe_burn_damage += trunc(0.40 * defStats[ATK])
        else:
            atkr.foe_burn_damage += trunc(0.20 * defStats[ATK])

    if "vLyonBoost" in defSkills and defHPGreaterEqual25Percent and not cannotCounterFinal:
        if defPhantomStats[RES] > atkPhantomStats[RES] or wpnAdvHero == 1:
            defr.foe_burn_damage += trunc(0.40 * atkStats[ATK])
        else:
            defr.foe_burn_damage += trunc(0.20 * atkStats[ATK])

    # Devoted Basket/Axe of Devotion
    if "devotedWeapon" in atkSkills and atkHPGreaterEqual25Percent:
        if atkPhantomStats[atkSkills["devotedWeapon"]] > defPhantomStats[atkSkills["devotedWeapon"]] or wpnAdvHero == 0:
            atkr.foe_burn_damage += trunc(0.30 * defStats[ATK])
        else:
            atkr.foe_burn_damage += trunc(0.15 * defStats[ATK])

    if "devotedWeapon" in defSkills and defHPGreaterEqual25Percent and not cannotCounterFinal:
        if defPhantomStats[defSkills["devotedWeapon"]] > atkPhantomStats[defSkills["devotedWeapon"]] or wpnAdvHero == 1:
            defr.foe_burn_damage += trunc(0.30 * defStats[ATK])
        else:
            defr.foe_burn_damage += trunc(0.15 * defStats[ATK])

    # Fell War Tome - CH!M!Robin
    if "fellWarTome" in atkSkills:
        atkr.foe_burn_damage += 7

    if "fellWarTome" in defSkills and defAllyWithin2Spaces and not cannotCounterFinal:
        defr.foe_burn_damage += 7

    # General-to-Be (Base) - Erk
    if "erkHESJUSTADEMOTE" in atkSkills:
        atkr.foe_burn_damage += 7

    if "erkHESJUSTADEMOTE" in defSkills and defAllyWithin2Spaces and not cannotCounterFinal:
        defr.foe_burn_damage += 7

    # Resonance
    if "resonance" in defSkills and not cannotCounterFinal:
        base_max_HP = defStats[HP] - defender.battle_stat_mods[HP]
        X = max(trunc(0.2 * (base_max_HP - 20)), 0)
        defr.self_burn_damage += X

    # Enticing Dose - Níðhöggr
    if ("God's strongest drunk driver" in atkSkills or "nySnakeBoost" in atkSkills) and (attacker.transformed or atkHPGreaterEqual25Percent):
        atkr.foe_burn_damage = trunc(defStats[HP] * 0.25)

    if ("God's strongest drunk driver" in defSkills or "nySnakeBoost" in defSkills) and (defender.transformed or defHPGreaterEqual25Percent) and not cannotCounterFinal:
        defr.foe_burn_damage = trunc(atkStats[HP] * 0.25)

    # Black Yule Lance - WI!Edelgard
    if "wiEdelgardBoost" in atkSkills and (wpnAdvHero == 0 or defender.tile.divine_vein == DV_FLAME and defender.tile.divine_vein_turn >= 1 and defender.tile.divine_vein_side):
        atkr.disable_foe_miracle = True

    if "wiEdelgardBoost" in defSkills and (wpnAdvHero == 1 or attacker.attacking_tile.divine_vein == DV_FLAME and attacker.attacking_tile.divine_vein_turn >= 1 and attacker.attacking_tile.divine_vein_side):
        defr.disable_foe_miracle = True

    # Heralding Horn (Base) - NY!Ash
    if "nyAshBoost" in atkSkills and defHPGreaterEqual75Percent and len(atkAllyWithin2Spaces) >= 1 and wpnAdvHero == 0:
        atkr.brave = True

    # SKILLS THAT RELY ON THE FOE's ABILITY TO COUNTERATTACK
    if "brashAssault" in atkSkills and not cannotCounterFinal and atkHPCur / atkStats[HP] <= 0.1 * atkSkills["brashAssault"] + 0.2:
        atkr.follow_ups_skill += 1

    if "brashAssaultSe" in atkSkills and not cannotCounterFinal and atkHPCur / atkStats[HP] <= 0.1 * atkSkills["brashAssaultSe"] + 0.2:
        atkr.follow_ups_skill += 1

    if "brashAssaultLyn" in atkSkills and not cannotCounterFinal and atkHPCur / atkStats[HP] <= 0.75:
        atkr.follow_ups_skill += 1

    if "brashAssault4" in atkSkills and (not atkHPEqual100Percent or defHPEqual100Percent):
        defCombatBuffs[DEF] -= 4
        defCombatBuffs[RES] -= 4
        atkr.DR_first_hit_NSP.append(30)
        atkr.follow_ups_skill += 1
        atkr.retaliatory_full_damages.append(30)

    # Headsman Glitnir (Base) - FA!Gustav
    if "I am Gustav. My flesh has been reconstructed by the dread power of Hel." in atkSkills and atkHPGreaterEqual25Percent and not cannotCounterFinal:
        atkr.follow_ups_skill += 1

    # Hoarfrost Knife - Flora
    if "floraBoost" in atkSkills and not cannotCounterFinal and defender.wpnType in MELEE_WEAPONS:
        atkr.follow_ups_skill += 1

    if "floraEasyBoost" in atkSkills and not cannotCounterFinal:
        atkr.follow_ups_skill += 1

    # Curved Shot
    if "canCounterAnySpecialDR" in atkSkills:
        atkr.DR_sp_trigger_by_any_special_SP.append(atkSkills["canCounterAnySpecialDR"])

    if "canCounterAnySpecialDR" in defSkills and not cannotCounterFinal:
        defr.DR_sp_trigger_by_any_special_SP.append(defSkills["canCounterAnySpecialDR"])

    # GET TARGETED DEFENSE

    # Unconditional Hexblade
    if "permHexblade" in atkSkills:
        atkr.hexblade = True
    if "permHexblade" in defSkills:
        defr.hexblade = True

    if Status.Hexblade in atkSkills:
        atkr.hexblade = True
    if Status.Hexblade in defSkills:
        defr.hexblade = True

    # Sorcery Blade
    if ("sorceryBlade" in atkSkills or "sorceryBladeSe" in atkSkills):
        skill_level = max(atkSkills.get("sorceryBlade", 0), atkSkills.get("sorceryBladeSe", 0))

        if atkHPCur / atkStats[HP] >= 1.5 * 0.5 * skill_level:
            if any([ally for ally in atkAdjacentToAlly if ally.wpnType in TOME_WEAPONS]):
                atkr.hexblade = True

    if ("sorceryBlade" in defSkills or "sorceryBladeSe" in defSkills):
        skill_level = max(defSkills.get("sorceryBlade", 0), defSkills.get("sorceryBladeSe", 0))

        if defHPCur / defStats[HP] >= 1.5 * 0.5 * skill_level:
            if any([ally for ally in defAdjacentToAlly if ally.wpnType in TOME_WEAPONS]):
                defr.hexblade = True

    # Infantry Hexblade
    if "adjHexblade" in atkSkills: atkr.hexblade = True
    if "adjHexblade" in defSkills: defr.hexblade = True

    # Newer dragonstones
    if attacker.getTargetedDef() == 0 and "oldDragonstone" not in atkSkills:
        atkr.hexblade = True

    if defender.getTargetedDef() == 0 and "oldDragonstone" not in defSkills:
        defr.hexblade = True

    # WHICH DEFENSE ARE WE TARGETING?
    # 0 targets DEF, 1 targets RES

    if attacker.getTargetedDef() == -1:
        atkTargetingDefRes = 0
    else:
        atkTargetingDefRes = 1

    if defender.getTargetedDef() == -1:
        defTargetingDefRes = 0
    else:
        defTargetingDefRes = 1

    # Targeting Res by default

    # Hel's Reaper (Base/Refine Base) - Hel
    if ("helMiracle" in atkSkills or "helBoost" in atkSkills) and not (defender.wpnType in MAGICAL_WEAPONS + ["Staff"]):
        atkTargetingDefRes = 1
        atkr.pseudo_miracle = True # because I can add it here too

    if ("helMiracle" in defSkills or "helBoost" in defSkills) and not (attacker.wpnType in MAGICAL_WEAPONS + ["Staff"]):
        defTargetingDefRes = 1
        defr.pseudo_miracle = True

    # Flame Lance (Base/Refine Base) - Petrine
    if ("petrineBoost" in atkSkills and atkHPGreaterEqual50Percent) or ("petrineRefine" in atkSkills and atkHPGreaterEqual25Percent):
        atkTargetingDefRes = 1

    if ("petrineBoost" in defSkills and defHPGreaterEqual50Percent) or ("petrineRefine" in defSkills and defHPGreaterEqual25Percent):
        defTargetingDefRes = 1

    # Hexblade
    if atkr.hexblade and not defr.disable_foe_hexblade:
        if defStats[DEF] < defStats[RES]:
            atkTargetingDefRes = 0
        else:
            atkTargetingDefRes = 1

    if defr.hexblade and not atkr.disable_foe_hexblade:
        if atkStats[DEF] < atkStats[RES]:
            defTargetingDefRes = 0
        else:
            defTargetingDefRes = 1

    # Amount of speed required to double the foe
    atkOutspeedFactor = 5
    defOutspeedFactor = 5

    # Which index in the attack array holds the potent attack
    atkPotentIndex = -1
    defPotentIndex = -1

    if Status.Frozen in attacker.statusNeg:
        atkr.outspeed_factor += 10 + max(atkPhantomStats[DEF] - defPhantomStats[DEF], 0)

    if Status.Frozen in defender.statusNeg:
        defr.outspeed_factor += 10 + max(defPhantomStats[DEF] - atkPhantomStats[DEF], 0)

    # Sandstorm - Timerra
    if "sandstorm" in atkSkills and atkPhantomStats[DEF] > defPhantomStats[DEF]:
        atkr.outspeed_factor -= min(atkPhantomStats[DEF] - defPhantomStats[DEF], 10)
        defr.outspeed_factor += min(atkPhantomStats[DEF] - defPhantomStats[DEF], 10)

    if "sandstorm" in defSkills and defPhantomStats[DEF] > atkPhantomStats[DEF]:
        defr.outspeed_factor -= min(defPhantomStats[DEF] - atkPhantomStats[DEF], 10)
        atkr.outspeed_factor += min(defPhantomStats[DEF] - atkPhantomStats[DEF], 10)

    # Crimson Lance (Base) - Melady
    if "meladyBoost" in atkSkills and atkHPGreaterEqual25Percent:
        defr.outspeed_factor += 2 * max(atkPhantomStats[DEF] - defPhantomStats[DEF], 0)
        atkr.TDR_first_strikes += trunc(0.20 * atkStats[DEF])

    if "meladyBoost" in defSkills and defHPGreaterEqual25Percent:
        atkr.outspeed_factor += 2 * max(defPhantomStats[DEF] - atkPhantomStats[DEF], 0)
        defr.TDR_first_strikes += trunc(0.20 * defStats[DEF])

    # HANDLE POTENT ATTACKS

    # Potent 1-4
    if "potentStrike" in atkSkills and atkStats[SPD] >= defStats[SPD] + (atkr.outspeed_factor - 25):
        atkr.potent_percent_strong.append(40 + 10 * atkSkills["potentStrike"])
        atkr.potent_percent_weak.append(10 * atkSkills["potentStrike"])

    if "potentStrike" in defSkills and defStats[SPD] >= atkStats[SPD] + (defr.outspeed_factor - 25):
        defr.potent_percent_strong.append(40 + 10 * defSkills["potentStrike"])
        defr.potent_percent_weak.append(10 * defSkills["potentStrike"])

    # Potent Disarm
    if "disarmPotent" in atkSkills and atkStats[SPD] >= defStats[SPD] + (atkr.outspeed_factor - 25):
        atkr.potent_percent_strong.append(80)
        atkr.potent_percent_weak.append(40)

    if "disarmPotent" in defSkills and defStats[SPD] >= atkStats[SPD] + (defr.outspeed_factor - 25):
        defr.potent_percent_strong.append(80)
        defr.potent_percent_weak.append(40)

    # Potent Follow Status
    if Status.PotentFollow in attacker.statusPos and atkStats[SPD] >= defStats[SPD] + (atkr.outspeed_factor - 25):
        atkr.potent_percent_strong.append(80)
        atkr.potent_percent_weak.append(40)

    if Status.PotentFollow in defender.statusPos and defStats[SPD] >= atkStats[SPD] + (defr.outspeed_factor - 25):
        defr.potent_percent_strong.append(80)
        defr.potent_percent_weak.append(40)

    if "shieldOfHope" in atkSkills:
        bonus_total = sum(nlargest(3, [ally.get_bonus_total() for ally in atkAllAllies]))

        if bonus_total >= 20 and atkStats[SPD] >= defStats[SPD] + (atkr.outspeed_factor - 10):
            atkr.potent_percent_strong.append(100)
            atkr.potent_percent_weak.append(100)

    if "shieldOfHope" in defSkills:
        bonus_total = sum(nlargest(3, [ally.get_bonus_total() for ally in defAllAllies]))

        if bonus_total >= 20 and defStats[SPD] >= atkStats[SPD] + (defr.outspeed_factor - 10):
            defr.potent_percent_strong.append(100)
            defr.potent_percent_weak.append(100)

    # Sparking Tome (Refine Base) - Azelle
    if "azelleRefineBoost" in atkSkills and atkStats[SPD] >= defStats[SPD] + (atkr.outspeed_factor - 25):
        atkr.potent_percent_strong.append(80)
        atkr.potent_percent_weak.append(40)

    if "azelleRefineBoost" in defSkills and atkHPGreaterEqual50Percent and defStats[SPD] >= atkStats[SPD] + (defr.outspeed_factor - 25):
        defr.potent_percent_strong.append(80)
        defr.potent_percent_weak.append(40)

    # Yngvi Ascendant+ - Ullr
    if "yngviAscPlus" in atkSkills and atkStats[SPD] >= defStats[SPD] + (atkr.outspeed_factor - 10):
        atkr.potent_percent_strong.append(100)
        atkr.potent_percent_weak.append(100)

    if "yngviAscPlus" in defSkills and defStats[SPD] >= atkStats[SPD] + (defr.outspeed_factor - 10):
        defr.potent_percent_strong.append(100)
        defr.potent_percent_weak.append(100)

    # Lady's Bow - E!Lyn
    if "eLynBoost" in atkSkills and atkAllyWithin3Spaces and atkStats[SPD] >= defStats[SPD] + (atkr.outspeed_factor - 25):
        atkr.potent_percent_strong.append(80)
        atkr.potent_percent_weak.append(40)

    if "eLynBoost" in defSkills and defAllyWithin3Spaces and defStats[SPD] >= atkStats[SPD] + (defr.outspeed_factor - 25):
        defr.potent_percent_strong.append(80)
        defr.potent_percent_weak.append(40)

    # Axe of Dusk - CH!Camilla
    if "chCamillaBoost" in atkSkills and atkStats[SPD] >= defStats[SPD] + (atkr.outspeed_factor - 25):
        atkr.potent_percent_strong.append(80)
        atkr.potent_percent_weak.append(40)

    if "chCamillaBoost" in defSkills and atkHPGreaterEqual75Percent and defStats[SPD] >= atkStats[SPD] + (defr.outspeed_factor - 25):
        defr.potent_percent_strong.append(80)
        defr.potent_percent_weak.append(40)

    # Thunderbrand (Refine Eff) - Catherine
    if "burger attack!" in atkSkills and atkStats[SPD] >= defStats[SPD] + (atkr.outspeed_factor - 25):
        atkr.potent_percent_strong.append(80)
        atkr.potent_percent_weak.append(40)

    if "burger attack!" in defSkills and defAllyWithin2Spaces and defStats[SPD] >= atkStats[SPD] + (defr.outspeed_factor - 25):
        defr.potent_percent_strong.append(80)
        defr.potent_percent_weak.append(40)

    # Obsession - Ivy
    if "https://www.youtube.com/watch?v=x5cdtS1HDq4" in atkSkills and atkHPGreaterEqual25Percent and atkStats[SPD] >= defStats[SPD] + (atkr.outspeed_factor - 25):
        atkr.potent_percent_strong.append(80)
        atkr.potent_percent_weak.append(40)

    if "https://www.youtube.com/watch?v=x5cdtS1HDq4" in defSkills and defHPGreaterEqual25Percent and defStats[SPD] >= atkStats[SPD] + (defr.outspeed_factor - 25):
        defr.potent_percent_strong.append(80)
        defr.potent_percent_weak.append(40)

    if atkr.potent_percent_strong: atkr.potent_FU = True
    if defr.potent_percent_strong: defr.potent_FU = True

    # Lodestar Rush - E!Marth
    if "potentFix" in atkSkills: atkr.potent_new_percentage = atkSkills["potentFix"]
    if "potentFix" in defSkills: defr.potent_new_percentage = defSkills["potentFix"]

    # Follow-Up granted via Spd stat
    if atkStats[SPD] >= defStats[SPD] + atkr.outspeed_factor: atkr.follow_ups_spd += 1
    if defStats[SPD] >= atkStats[SPD] + defr.outspeed_factor: defr.follow_ups_spd += 1

    atkAlive = True
    defAlive = True

    def getSpecialDamage(effs, initStats, initHP, otherStats, defOrRes, base_damage, num_foe_atks, selfModifier, otherModifier, striker, strikee):
        total_special = 0.0
        total_nonspecial = 0.0

        if "atkBoostSp" in effs:
            total_special += initStats[ATK] * 0.01 * effs["atkBoostSp"]

        if "spdBoostSp" in effs:
            total_special += initStats[SPD] * 0.01 * effs["spdBoostSp"]

        if "defBoostSp" in effs:
            total_special += initStats[DEF] * 0.01 * effs["defBoostSp"]

        if "resBoostSp" in effs:
            total_special += initStats[RES] * 0.01 * effs["resBoostSp"]

        if "rupturedSky" in effs:
            if strikee.wpnType in DRAGON_WEAPONS + BEAST_WEAPONS:
                total_special += otherStats[ATK] * 0.02 * effs["rupturedSky"]
            else:
                total_special += otherStats[ATK] * 0.01 * effs["rupturedSky"]

        if "sublimeHeaven" in effs:
            if strikee.wpnType in DRAGON_WEAPONS + BEAST_WEAPONS:
                total_special += initStats[ATK] * 0.02 * effs["sublimeHeaven"]
            else:
                total_special += initStats[ATK] * 0.01 * effs["sublimeHeaven"]

        if "atkBoostSpFoe" in effs:
            total_special += otherStats[ATK] * 0.01 * effs["atkBoostSp"]

        if "staffRes" in effs:
            total_special += otherStats[ATK] * 0.01 * effs["staffRes"]

        if "spdOrDefBoostSp" in effs:
            total_special += max(initStats[SPD], initStats[DEF]) * 0.01 * effs["spdOrDefBoostSp"]

        if "aetherPathSp" in effs:
            total_special += max(otherStats[SPD], otherStats[DEF]) * 0.01 * effs["aetherPathSp"]

        # Vengeance/Reprisal
        if "retaliatoryBoost" in effs:
            total_special += (initStats[HP] - initHP) * 0.01 * effs["retaliatoryBoost"]

        # Glimmer/Astra
        if "dmgBoost" in effs:
            total_special += base_damage * 0.01 * effs["dmgBoost"]

        # Moonbow/Luna
        targeted_defense = otherStats[DEF] if defOrRes == 0 else otherStats[RES]
        if "defReduce" in effs:
            reduced_def = targeted_defense - math.trunc(targeted_defense * 0.01 * effs["defReduce"])
            reduced_attack = initStats[ATK] - reduced_def
            total_special += reduced_attack - base_damage

        # Blue Flame
        if "blueFlameSp" in effs:
            total_special += effs["blueFlameSp"]

        # Flare
        if "flareSp" in effs:
            if initHP / initStats[HP] < 0.70:
                total_special += initStats[RES] * 0.40
            else:
                total_special += initStats[RES] * 0.60

        if "newWarAxeSP" in effs:
            if initHP / initStats[HP] >= 0.70:
                total_nonspecial += initStats[DEF] * (0.10 + 0.10 * effs["newWarAxeSP"])

        # No Quarter
        if "atkBoostSpArmor" in effs:
            if strikee.move == 3:
                total_special += initStats[ATK] * 0.01 * 4
            else:
                total_special += initStats[ATK] * 0.01 * 3

        # Seiðr Shell
        if "seiðrShell" in effs:
            total_special += 15

        # Seiðr Shell+
        if "seiðrShellPlus" in effs:
            total_special += 20

        # Brutal Shell+
        if "brutalShellPlus" in effs:
            total_special += max(initStats[DEF], otherStats[DEF]) * 0.50

        # Great Aether
        if "numFoeAtkBoostSp" in effs:
            total_special += (effs["numFoeAtkBoostSp"] + num_foe_atks) * 0.01 * initStats[ATK]

        # Wrath (Should be ignored w/ Emblem Marth Ring)
        if "wrathW" in effs:
            if initHP / initStats[HP] <= effs["wrathW"] * 0.25:
                total_nonspecial += 10

        if "wrathSk" in effs:
            if initHP / initStats[HP] <= effs["wrathSk"] * 0.25:
                total_nonspecial += 10

        if "spurnSk" in effs:
            if initHP / initStats[HP] <= effs["spurnSk"] * 0.25:
                total_nonspecial += 5

        if "spurn4" in effs:
            if initHP / initStats[HP] <= 0.75:
                total_nonspecial += 5

        # Fluttering Fan - SF!Nephenee
        if "flutteringFanSp" in effs:
            if initHP != initStats[HP]:
                total_nonspecial += 10

        if "flutteringFanSp_f" in effs:
            if initHP != initStats[HP]:
                total_nonspecial += 10 * effs["flutteringFanSp_f"]

        # Owain (Should be ignored w/ Emblem Marth Ring)
        if "spMissiletainn" in effs:
            total_nonspecial += min(initStats[HP] - initHP, 30)

        # H!Timerra (Should be ignored w/ Emblem Marth Ring)
        if "meat" in effs:
            total_nonspecial += math.trunc(initStats[DEF] * 0.40)

        # Fierce Beast
        if "beastAtkSp" in effs:
            if striker.transformed:
                total_special += initStats[ATK] * 0.25
            else:
                total_special += initStats[ATK] * 0.20

        # Nimble Beast
        if "beastSpdSp" in effs:
            if striker.transformed:
                total_special += initStats[SPD] * 0.50
            else:
                total_special += initStats[SPD] * 0.40

        # Sturdy Beast
        if "beastDefSp" in effs:
            if striker.transformed:
                total_special += initStats[DEF] * 0.50
            else:
                total_special += initStats[DEF] * 0.40

        # Makings of a King
        if "defBoostTalentSp" in effs:
            total_special += initStats[DEF] * 0.30 + striker.great_talent[DEF]

        return trunc(total_special), trunc(total_nonspecial)

    # COMPUTE TURN ORDER

    # Null Follow-Up
    if atkr.defensive_NFU: defr.follow_ups_skill = 0
    if defr.defensive_NFU: atkr.follow_ups_skill = 0
    if atkr.offensive_NFU: atkr.follow_up_denials = 0
    if defr.offensive_NFU: defr.follow_up_denials = 0


    # Follow-Up Granted if sum of allowed - denied follow-ups is > 0
    followupA = atkr.follow_ups_spd + atkr.follow_ups_skill + atkr.follow_up_denials > 0
    followupD = defr.follow_ups_spd + defr.follow_ups_skill + defr.follow_up_denials > 0

    # Hardy bearing
    if atkr.hardy_bearing:
        atkr.self_desperation = False
        atkr.other_desperation = False
        atkr.vantage = False

    if defr.hardy_bearing:
        defr.self_desperation = False
        defr.other_desperation = False
        defr.vantage = False

    # Start, vantage

    atk_potent_no_fu = False
    def_potent_no_fu = False

    if atkr.vantage or defr.vantage:
        startString = "DA"
        if followupD or (defr.potent_FU and not followupD):
            startString += "D"

            if defr.potent_FU and not followupD:
                def_potent_no_fu = True

        if followupA or (atkr.potent_FU and not followupA):
            startString += "A"

        if atkr.potent_FU and not followupA:
            atk_potent_no_fu = True
    else:
        startString = "AD"
        if followupA or (atkr.potent_FU and not followupA):
            startString += "A"

            if atkr.potent_FU and not followupA:
                atk_potent_no_fu = True

        if followupD or (defr.potent_FU and not followupD):
            startString += "D"

            if defr.potent_FU and not followupD:
                def_potent_no_fu = True

    # Desperation
    if startString[0] == 'A':
        firstCheck = atkr.self_desperation or defr.other_desperation
        secondCheck = defr.self_desperation or atkr.other_desperation
    else:
        firstCheck = defr.self_desperation or atkr.other_desperation
        secondCheck = atkr.self_desperation or defr.other_desperation

    if firstCheck:
        startString = move_letters(startString, startString[0])
    if secondCheck:
        startString = move_letters(startString, {"A", "D"}.difference([startString[0]]).pop())

    newString = ""

    # duplicate letters if Brave
    for c in startString:
        newString += c

        if c == 'A' and atkr.brave:
            newString += c
        if c == 'D' and defr.brave:
            newString += c

    # remove duplicate for potent non-FU
    if atk_potent_no_fu:
        last_a_index = newString.rfind('A')
        newString = newString[:last_a_index] + newString[last_a_index + 1:]

    if def_potent_no_fu:
        last_d_index = newString.rfind('D')
        newString = newString[:last_d_index] + newString[last_d_index + 1:]

    # potent strike
    if atkr.potent_FU and followupA:
        last_a_index = newString.rfind('A')
        newString = newString[:last_a_index + 1] + 'A' + newString[last_a_index + 1:]

    if defr.potent_FU and followupD:
        last_d_index = newString.rfind('D')
        newString = newString[:last_d_index + 1] + 'D' + newString[last_d_index + 1:]

    if defr.potent_FU:
        defPotentIndex = newString.rfind('D')

    # code don't work without these
    startString = newString
    startString2 = startString

    if cannotCounterFinal:
        startString2 = startString.replace("D", "")

    if atkr.potent_FU:
        atkPotentIndex = startString2.rfind('A')

    # create list of attack objects
    attackList = []
    A_Count = 0
    D_Count = 0
    i = 0

    atkCanFollowUp = False
    defCanFollowUp = False

    while i < len(startString2):
        if startString2[i] == "A":
            A_Count += 1
            atkCanFollowUp = A_Count == 2 and (followupA or atkr.potent_FU) and not atkr.brave or A_Count in [3, 4, 5]
            isConsecutive = True if A_Count >= 2 and startString2[i - 1] == "A" else False

            potentRedu = False
            if atkr.potent_FU and i == atkPotentIndex:
                potentRedu = True

            attackList.append(Attack(0, atkCanFollowUp, isConsecutive, A_Count, A_Count + D_Count, None if A_Count + D_Count == 1 else attackList[i - 1], potentRedu))
        else:
            D_Count += 1
            defCanFollowUp = D_Count == 2 and (followupD or defr.potent_FU) and not defr.brave or D_Count in [3, 4, 5]
            isConsecutive = True if D_Count >= 2 and startString2[i - 1] == "D" else False
            potentRedu = False

            if defr.potent_FU and i == defPotentIndex:
                potentRedu = True

            attackList.append(Attack(1, defCanFollowUp, isConsecutive, D_Count, A_Count + D_Count,
                                     None if A_Count + D_Count == 1 else attackList[i - 1], potentRedu))
        i += 1

    # Damage reduction caused by a unit's ability to make a follow up

    if ("uncanny_fighter" in atkSkills or "canny_fighter" in atkSkills) and atkHPGreaterEqual25Percent:
        if defCanFollowUp:
            atkr.DR_first_strikes_NSP.append(80)
        else:
            defr.DR_first_strikes_NSP.append(40)

    if ("uncanny_fighter" in defSkills or "canny_fighter" in defSkills) and defHPGreaterEqual25Percent:
        if atkCanFollowUp:
            defr.DR_first_strikes_NSP.append(80)
        else:
            defr.DR_first_strikes_NSP.append(40)

    # Reopening
    if "reopening" in atkSkills and atkHPGreaterEqual25Percent:
        defCombatBuffs[ATK] -= 5
        defr.spLossOnAtk -= 1
        defr.spLossWhenAtkd -= 1

        if atkCanFollowUp or atkr.brave:
            atkr.true_all_hits += trunc(0.10 * atkStats[DEF])
            atkr.TDR_all_hits += trunc(0.10 * atkStats[DEF])
        else:
            atkr.true_all_hits += trunc(0.20 * atkStats[DEF])
            atkr.TDR_all_hits += trunc(0.20 * atkStats[DEF])

    if "reopening" in defSkills and defHPGreaterEqual25Percent:
        atkCombatBuffs[ATK] -= 5
        atkr.spLossOnAtk -= 1
        atkr.spLossWhenAtkd -= 1

        if defCanFollowUp or atkr.brave:
            defr.true_all_hits += trunc(0.10 * defStats[DEF])
            defr.TDR_all_hits += trunc(0.10 * defStats[DEF])
        else:
            defr.true_all_hits += trunc(0.20 * defStats[DEF])
            defr.TDR_all_hits += trunc(0.20 * defStats[DEF])

    if "idunnDR" in atkSkills and defHPGreaterEqual75Percent and defCanFollowUp:
        atkr.DR_first_hit_NSP.append(70)

    if "idunnDR" in defSkills and atkCanFollowUp:
        defr.DR_first_hit_NSP.append(70)

    # Conjurer Curios (Refine Base) - H!Hector
    if "reduFU" in atkSkills and (turn % 2 == 1 or not defHPEqual100Percent):
        if defCanFollowUp:
            atkr.DR_first_hit_NSP.append(60)
        else:
            atkr.DR_first_hit_NSP.append(30)

    if "reduFU" in defSkills and (turn % 2 == 1 or not atkHPEqual100Percent):
        if atkCanFollowUp:
            defr.DR_first_hit_NSP.append(60)
        else:
            defr.DR_first_hit_NSP.append(30)

    # Courtly Bow/Mask/Fan/Candle
    if "courtly" in atkSkills and atkHPGreaterEqual50Percent and defCanFollowUp:
        atkr.DR_first_hit_NSP.append(50)

    if "courtly" in atkSkills and defHPGreaterEqual50Percent and atkCanFollowUp:
        defr.DR_first_hit_NSP.append(50)

    # Starlight Stone (Base) - H!M!Corrin
    if "hmCorrinBoost" in atkSkills and defHPGreaterEqual75Percent and defCanFollowUp:
        atkr.DR_first_hit_NSP.append(75)

    if "hmCorrinBoost" in defSkills and atkCanFollowUp:
        defr.DR_first_hit_NSP.append(75)

    # Vengeful Lance (Base) - FA!Dimitri
    if "big guy" in atkSkills and not atkAdjacentToAlly and atkStats[ATK] > defStats[DEF] and not atkCanFollowUp:
        atkr.true_all_hits += max(trunc((atkStats[ATK] - defStats[DEF]) * 0.5), 0)

    if "big guy" in defSkills and not defAdjacentToAlly and defStats[ATK] > atkStats[DEF] and not defCanFollowUp:
        defr.true_all_hits += max(trunc((defStats[ATK] - atkStats[DEF]) * 0.5), 0)

    # Vengeful Lance (Refine Base) - FA!Dimitri
    if "dimithree houses" in atkSkills:
        if not atkCanFollowUp:
            atkr.true_all_hits += trunc(atkStats[ATK] * 0.50)
        else:
            atkr.true_all_hits += trunc(atkStats[ATK] * 0.25)

        if atkSpTriggeredByAttack:
            if not atkCanFollowUp:
                atkr.sp_jump_first += 2
            else:
                atkr.sp_jump_first += 1

    if "dimithree houses" in defSkills and not defAdjacentToAlly:
        if not defCanFollowUp:
            defr.true_all_hits += trunc(defStats[ATK] * 0.50)
        else:
            defr.true_all_hits += trunc(defStats[ATK] * 0.25)

        if defSpTriggeredByAttack:
            if not defCanFollowUp:
                defr.sp_jump_first += 2
            else:
                defr.sp_jump_first += 1

    # Unyielding Oar (Base) - SU!Dimitri
    if "suDimitriBoost" in atkSkills and atkHPGreaterEqual25Percent and (defHasBonus or atkPhantomStats[SPD] > defPhantomStats[SPD] + 10):
        atkr.brave = True

    if "suDimitriBoost" in defSkills and defHPGreaterEqual25Percent and (atkHasBonus or defPhantomStats[SPD] > atkPhantomStats[SPD] + 10):
        defr.brave = True

    # Loyalist Axe (Base) - V!Gustav
    if "gustavBoost" in atkSkills and defHPGreaterEqual75Percent and defCanFollowUp:
        atkr.DR_first_hit_NSP.append(75)

    if "gustavBoost" in defSkills and atkCanFollowUp:
        defr.DR_first_hit_NSP.append(75)

    # Sea-Sear Lance (Base) - PI!Surtr
    if "Alolan Ganondorf" in atkSkills and defHPGreaterEqual75Percent and defCanFollowUp:
        atkr.DR_first_hit_NSP.append(75)

    if "Alolan Ganondorf" in defSkills and atkCanFollowUp:
        defr.DR_first_hit_NSP.append(75)

    # Sparkling Sun - SU!Ymir
    if "sparklingSun" in atkSkills and atkAllyWithin3Spaces and defCanFollowUp:
        atkr.DR_first_hit_NSP.append(75)

    if "sparklingSun" in defSkills and defAllyWithin3Spaces and atkCanFollowUp:
        defr.DR_first_hit_NSP.append(75)

    # Thorn Lance (Refine Base) - V!Rudolf
    if "fireShootTheLaser" in atkSkills and (atkHPGreaterEqual25Percent or atkPhantomStats[ATK] > defPhantomStats[ATK]):
        atkr.DR_all_hits_NSP.append(min(2 * (atkPhantomStats[ATK] - defPhantomStats[ATK], 40)))
    if "fireShootTheLaser" in defSkills and (defHPGreaterEqual25Percent or defPhantomStats[ATK] > atkPhantomStats[ATK]):
        defr.DR_all_hits_NSP.append(min(2 * (defPhantomStats[ATK] - atkPhantomStats[ATK], 40)))

    # Arms of the Three
    if "specialResDR" in atkSkills and atkSpCountCur == 0:
        atkr.DR_all_hits_SP.append(min(3 * (atkPhantomStats[RES] - defPhantomStats[RES], 30)))

    if "specialResDR" in defSkills and defSpCountCur == 0:
        defr.DR_all_hits_SP.append(min(3 * (defPhantomStats[RES] - atkPhantomStats[RES], 30)))

    # Blessed Aureola - Athos
    if "athosJump_f" in atkSkills and atkSpTriggeredByAttack:
        atkr.sp_jump_first += atkSkills["athosJump_f"]

        if not atkCanFollowUp and not atkr.brave:
            atkr.sp_jump_first += atkSkills["athosJump_f"]

    if "athosJump_f" in defSkills and defSpTriggeredByAttack:
        defr.sp_jump_first += defSkills["athosJump_f"]

        if not defCanFollowUp and not defr.brave:
            defr.sp_jump_first += defSkills["athosJump_f"]

    # Beyond Reason - Athos
    if "beyondReason" in atkSkills and defHPGreaterEqual75Percent:
        if defCanFollowUp:
            atkr.DR_first_hit_NSP.append(80)
        else:
            atkr.DR_first_hit_NSP.append(40)

    if "beyondReason" in defSkills:
        if atkCanFollowUp:
            defr.DR_first_hit_NSP.append(80)
        else:
            defr.DR_first_hit_NSP.append(40)

    # Frost Moon
    if "frostMoon" in atkSkills and not atkCanFollowUp and not atkr.brave: atkr.sp_jump_first += 1
    if "frostMoon" in defSkills and not defCanFollowUp and not defr.brave: defr.sp_jump_first += 1

    # Set Potent Percentages
    atkPotentPercentages = []
    defPotentPercentages = []

    if atkr.potent_FU:
        if atkr.brave or atkCanFollowUp:
            atkr.potent_percentage = max(atkr.potent_percent_weak)
        else:
            atkr.potent_percentage = max(atkr.potent_percent_strong)

    if defr.potent_FU:
        if defr.brave or defCanFollowUp:
            defr.potent_percentage = max(defr.potent_percent_weak)
        else:
            defr.potent_percentage = max(defr.potent_percent_strong)

    # Dodge Status
    if Status.Dodge in attacker.statusPos and atkPhantomStats[SPD] > defPhantomStats[SPD]: atkr.stat_scaling_DR.append((SPD, 40))
    if Status.Dodge in defender.statusPos and defPhantomStats[SPD] > atkPhantomStats[SPD]: defr.stat_scaling_DR.append((SPD, 40))

    # Weapons with Dodge built in
    if "dodgeW" in atkSkills and atkPhantomStats[SPD] > defPhantomStats[SPD]: atkr.stat_scaling_DR.append((SPD, atkSkills["dodgeW"] * 10))
    if "dodgeW" in defSkills and defPhantomStats[SPD] > atkPhantomStats[SPD]: defr.stat_scaling_DR.append((SPD, defSkills["dodgeW"] * 10))

    # Skills with Dodge built in (Repel, Close Call, etc.)
    if "dodgeSk" in atkSkills and atkPhantomStats[SPD] > defPhantomStats[SPD]: atkr.stat_scaling_DR.append((SPD, atkSkills["dodgeSk"] * 10))
    if "dodgeSk" in defSkills and defPhantomStats[SPD] > atkPhantomStats[SPD]: defr.stat_scaling_DR.append((SPD, defSkills["dodgeSk"] * 10))

    # Spurn 4 Damage on Defensive Special
    if "spurn4" in atkSkills and attacker.getSpecialType() == "Defense": atkr.true_sp_next += 5
    if "spurn4" in defSkills and defender.getSpecialType() == "Defense": defr.true_sp_next += 5

    # Dragon Wall
    if "dragonWall" in atkSkills and atkPhantomStats[RES] > defPhantomStats[RES]: atkr.stat_scaling_DR.append((RES, atkSkills["dragonWall"] * 10))
    if "dragonWall" in defSkills and defPhantomStats[RES] > atkPhantomStats[RES]: defr.stat_scaling_DR.append((RES, defSkills["dragonWall"] * 10))

    # Beast Sense
    if "beastSense" in atkSkills and atkPhantomStats[SPD] > defPhantomStats[SPD]: atkr.stat_scaling_DR.append((SPD, atkSkills["beastSense"]))
    if "beastSense" in defSkills and defPhantomStats[SPD] > atkPhantomStats[SPD]: defr.stat_scaling_DR.append((SPD, defSkills["beastSense"]))

    # Gambit
    if "gambit" in atkSkills and (atkSpTriggeredByAttack or attacker.getSpecialType() == "Defense"):
        increment = min(atkSkills["gambit"], 3) * 3 + 1
        maximum = increment * 5

        atkr.DR_all_hits_NSP.append(min(attacker.specialMax * increment, maximum))

        if atkSkills["gambit"] == 4:
            atkr.true_all_hits += max(0, min((attacker.specialMax - 2) * 5, 15))

    if "gambit" in defSkills and (defSpTriggeredByAttack or defender.getSpecialType() == "Defense"):
        increment = min(defSkills["gambit"], 3) * 3 + 1
        maximum = increment * 5

        defr.DR_all_hits_NSP.append(min(defender.specialMax * increment, maximum))

        if defSkills["gambit"] == 4:
            defr.true_all_hits += max(0, min((defender.specialMax - 2) * 5, 15))

    # Magic Gambit
    if "magic_gambit" in atkSkills:

        if atkSkills["magic_gambit"] == 4:
            defCombatBuffs[SPD] -= 4
            defCombatBuffs[RES] -= 4

        if (atkSpTriggeredByAttack or attacker.getSpecialType() == "Defense"):
            increment = min(atkSkills["magic_gambit"], 3) * 3 + 1
            maximum = increment * 4

            atkr.DR_all_hits_NSP.append(min((attacker.specialMax - 1) * increment, maximum))

            if atkSkills["magic_gambit"] == 4:
                atkr.true_all_hits += max(0, min((attacker.specialMax - 2) * 4, 12))

    if "magic_gambit" in defSkills and attacker.wpnType in RANGED_WEAPONS:

        if defSkills["magic_gambit"] == 4:
            atkCombatBuffs[SPD] -= 4
            atkCombatBuffs[RES] -= 4

        if (defSpTriggeredByAttack or defender.getSpecialType() == "Defense"):
            increment = min(defSkills["magic_gambit"], 3) * 3 + 1
            maximum = increment * 4

            defr.DR_all_hits_NSP.append(min((defender.specialMax - 1) * increment, maximum))

            if defSkills["magic_gambit"] == 4:
                defr.true_all_hits += max(0, min((defender.specialMax - 2) * 4, 12))

    # Damage reduction calculated based on a difference between two stats (Dodge, etc.)
    for stat_type, stat_max in atkr.stat_scaling_DR:
        if atkPhantomStats[stat_type] > defPhantomStats[stat_type]:
            atkr.DR_all_hits_NSP.append(min(stat_max / 10 * (atkPhantomStats[stat_type] - defPhantomStats[stat_type]), stat_max))

    for stat_type, stat_max in defr.stat_scaling_DR:
        if defPhantomStats[stat_type] > atkPhantomStats[stat_type]:
            defr.DR_all_hits_NSP.append(min(stat_max / 10 * (defPhantomStats[stat_type] - atkPhantomStats[stat_type]), stat_max))

    # Emblem Marth Ring
    # Special damage reduction on brave attacks
    if "shine on" in atkSkills and atkr.brave:
        atkr.reduce_self_sp_damage += 8

    if "shine on" in defSkills and defr.brave:
        defr.reduce_self_sp_damage += 8

    # method to attack
    def perform_attack(striker, strikee, stkSpEffects, steSpEffects, stkStats, steStats, defOrRes, curReduction,
               curSpecialReduction, stkHPCur, steHPCur, stkSpCount, steSpCount, I_stkr, I_ster, curAttack):

        # has special triggered yet on this hit
        stkr_sp_triggered = False
        ster_sp_triggered = False

        if stkSpCount == 0 and striker.getSpecialType() == "Offense" and not I_stkr.special_disabled:
            if not is_in_sim: print(striker.name + " procs " + striker.getSpName() + ".")

            I_stkr.special_triggered = True
            stkr_sp_triggered = True

        # Base attack stat
        if stkr_sp_triggered:
            if I_stkr.alternative_sp_stat == 1:
                base_attack_stat = trunc(stkStats[DEF] * 1.50) # Sandstorm
            elif I_stkr.alternative_sp_stat == 2:
                base_attack_stat = trunc(stkStats[RES] * 1.50) # Snowstorm (Indignant Bow)
            else:
                base_attack_stat = stkStats[ATK]
        else:
            base_attack_stat = stkStats[ATK]

        if I_stkr.effective: base_attack_stat += trunc(base_attack_stat * 0.5)

        if I_stkr.triangle_advantage > 0:
            base_attack_stat += trunc(base_attack_stat * I_stkr.triangle_advantage)
        elif I_stkr.triangle_advantage < 0:
            base_attack_stat -= trunc(base_attack_stat * I_stkr.triangle_advantage * -1)

        # Hexblade on only specials (Seiðr Shell/Exalt's Brand)
        if stkr_sp_triggered and I_stkr.special_hexblade and not I_ster.disable_foe_hexblade:
            defOrRes = int(steStats[DEF] < steStats[RES])

        # Base defense stat
        base_defense_stat = steStats[3 + defOrRes]

        if I_ster.defensive_terrain:
            base_defense_stat += trunc(base_defense_stat * 0.3)

        # Attack minus Defense or Resistance
        attack = max(base_attack_stat - base_defense_stat, 0)

        # Special damage boost from special skills
        dmgBoost = 0

        # Special damage boost from non-special skills
        # The main difference between the two is that
        # this one isn't affected by Marth ring's damage
        # reduction on special damage.
        nsp_dmgBoost = 0

        if stkr_sp_triggered:
            num_foe_atks = curAttack.attackNumAll - curAttack.attackNumSelf
            striker_tile = attacker.attacking_tile if striker.side == 0 else defender.tile
            dmgBoost, nsp_dmgBoost = getSpecialDamage(stkSpEffects, stkStats, stkHPCur, steStats, defOrRes, attack, num_foe_atks, I_stkr, I_ster, striker, strikee)
            dmgBoost = max(dmgBoost - I_stkr.reduce_self_sp_damage, 0)

        attack += dmgBoost  # true damage by specials

        # true damage on special activation, not counted as special damage
        attack += nsp_dmgBoost

        # true damage on all hits
        attack += I_stkr.true_all_hits

        # Resonance Damage
        if I_stkr.resonance > 0:
            resonance_damage = min(max((I_stkr.start_of_combat_HP - stkHPCur) * 2, 6), 12)
            attack += resonance_damage

        # WI!Bernie Damage
        if I_stkr.bernie_resonance:
            resonance_damage = min((strStats[HP] - stkHPCur) * 2 + 5, 21)
            attack += resonance_damage

        attack += I_stkr.true_sp_next_CACHE
        I_stkr.true_sp_next_CACHE = 0

        if curAttack.attackNumSelf == 1:
            attack += I_stkr.true_first_hit

        if curAttack.attackNumSelf != curAttack.attackNumAll:
            attack += I_stkr.true_after_foe_first
            I_stkr.true_after_foe_first = 0

        # true damage on special activation, not counted as special damage
        if stkr_sp_triggered:
            attack += I_stkr.true_sp

        # special-enabled true damage (finish)
        if I_stkr.special_triggered or stkSpCount == 0:
            attack += I_stkr.true_finish

        # Stacking retaliatory damage from defensive specials (Ice Mirror/Negating Fang)
        attack += I_stkr.stacking_retaliatory_damage

        # Non-stacking retaliatory damage from various skills (Ginnungagap, Divine Recreation, Western Axe, etc.)
        # If there is any damage recorded, use it and make it so space cannot be used again
        if I_stkr.nonstacking_retaliatory_damage >= 0:
            attack += I_stkr.nonstacking_retaliatory_damage

            I_stkr.nonstacking_retaliatory_damage = -2


        if I_stkr.retaliatory_full_damages_CACHE:
            attack += math.trunc(I_stkr.most_recent_atk * (max(I_stkr.retaliatory_full_damages_CACHE) / 100))

        # Berserker Axe - Panette
        if I_stkr.true_damage_taken_30:
            attack += min(stkStats[HP] - stkHPCur, 30)

        # Half damage if staff user without wrathful staff, rounded down
        if striker.getWeaponType() == "Staff" and not I_stkr.wrathful_staff:
            attack = math.trunc(attack * 0.5)

        # potent FU reduction
        reducing_percents = []

        if curAttack.potentRedu:
            if I_stkr.potent_new_percentage != 0 and (stkSpCount == 0 or I_stkr.special_triggered) and I_stkr.potent_percentage <= I_stkr.potent_new_percentage - 1:
                reducing_percents.append(I_stkr.potent_new_percentage)
            else:
                reducing_percents.append(I_stkr.potent_percentage)

        # other self-reduction
        if I_stkr.is_initiator and style == "ECHO":
            reducing_percents.append(60)

        for percentage in reducing_percents:
            attack = attack * (percentage / 100)

        attack = int(attack)

        if I_stkr.bane_sp and stkr_sp_triggered and attack < steHPCur - 1:
            attack = steHPCur - 1

        if I_stkr.bane_first_hit and curAttack.attackNumSelf == 1 and attack < steHPCur - 1:
            attack = steHPCur - 1

        # the final attack in all it's glory
        full_atk = attack
        I_ster.most_recent_atk = attack # that's a surprise tool that'll help us later

        # damage reduction
        total_reduction = 1

        # DR piercing
        stkr_DRR = 1

        for pierce in I_stkr.damage_reduction_reduction:
            stkr_DRR *= 1 - (min(pierce, 100) / 100)

        if I_stkr.special_triggered and stkSpCount:
            for pierce in I_stkr.damage_reduction_reduction_finish:
                stkr_DRR *= 1 - (min(pierce, 100) / 100)

        # Resonance Piercing
        if I_stkr.resonance and I_stkr.resonance > 2:
            stkr_DRR *= (min(max((I_stkr.start_of_combat_HP - stkHPCur) * I_stkr.resonance, I_stkr.resonance * 3), I_stkr.resonance * 6)) / 100

        if not (I_stkr.always_pierce_DR or
                (stkr_sp_triggered and I_stkr.sp_pierce_DR) or
                (curAttack.isFollowUp and I_stkr.pierce_DR_FU) or
                (I_stkr.sp_pierce_after_def_sp_CACHE)):
            for x in curReduction:
                total_reduction *= 1 - (x / 100 * stkr_DRR)  # change by redu factor

        I_stkr.sp_pierce_after_def_sp_CACHE = False

        for x in curSpecialReduction:
            total_reduction *= 1 - (x / 100)

        # defensive specials
        if steSpCount == 0 and strikee.getSpecialType() == "Defense" and not (I_ster.special_disabled or ((I_ster.disable_def_sp_on_foe_FU and curAtk.isFollowUp or I_ster.disable_def_sp) and stkr_sp_triggered)):
            #if not is_in_sim: print(strikee.name + " procs " + strikee.getSpName() + ".")

            if ((attacker.getRange() == 1 and style is None) or (style in MELEE_STYLES)) and "closeShield" in steSpEffects:
                total_reduction *= 1 - (0.10 * steSpEffects["closeShield"])
                if I_ster.apply_def_sp_twice:
                    total_reduction *= 1 - (0.10 * steSpEffects["closeShield"])

                I_ster.special_triggered = True
                ster_sp_triggered = True

            elif ((attacker.getRange() == 2 and style is None) or (style in RANGED_STYLES)) and "distantShield" in steSpEffects:
                total_reduction *= 1 - (0.10 * steSpEffects["distantShield"])
                if I_ster.apply_def_sp_twice:
                    total_reduction *= 1 - (0.10 * steSpEffects["distantShield"])

                I_ster.special_triggered = True
                ster_sp_triggered = True

            elif "omniShield" in steSpEffects:
                total_reduction *= 1 - (0.10 * steSpEffects["omniShield"])
                if I_ster.apply_def_sp_twice:
                    total_reduction *= 1 - (0.10 * steSpEffects["omniShield"])

                I_ster.special_triggered = True
                ster_sp_triggered = True

        # rounded attack damage
        rounded_DR = (trunc(total_reduction * 100)) / 100

        attack = math.ceil(attack * rounded_DR)

        # Subtractive/True Damage Reduction
        total_true_damage_reduction = I_ster.TDR_all_hits

        if stkr_sp_triggered:
            total_true_damage_reduction += I_ster.TDR_on_foe_sp

        if not curAtk.isFollowUp:
            total_true_damage_reduction += I_ster.TDR_first_strikes
        else:
            total_true_damage_reduction += I_ster.TDR_second_strikes

        if I_ster.TDR_snake:
            X = max(10, min(steStats[HP] - steHPCur, 20))

            total_true_damage_reduction += X

            if stkr_sp_triggered:
                total_true_damage_reduction += X

        attack = max(attack - total_true_damage_reduction, 0)

        # Extra true damage reduction only if non-Miracle defensive special triggered
        if ster_sp_triggered and strikee.getSpecialType() == "Defense" and "miracleSP" not in steSpEffects:
            attack = max(attack - I_ster.TDR_on_def_sp, 0)

        curMiracleTriggered = False

        circlet_of_bal_cond = stkSpCount == 0 or steSpCount == 0 or I_stkr.special_triggered or I_ster.special_triggered

        # non-special Miracle
        if (((I_ster.pseudo_miracle and (I_ster.pseudo_miracle_hp_cond == 1 or steHPCur/steStats[HP] >= I_ster.pseudo_miracle_hp_cond)) or circlet_of_bal_cond and I_ster.circlet_miracle) and \
            steHPCur - attack < 1 and steHPCur > 1) and not I_ster.disable_foe_miracle:
            attack = steHPCur - 1
            curMiracleTriggered = True

        # special Miracle
        if steSpCount == 0 and "miracleSP" in steSpEffects and steHPCur - attack < 1 and steHPCur > 1 and not I_ster.pseudo_miracle:
            if not is_in_sim: print(strikee.name + " procs " + strikee.getSpName() + ".")
            attack = steHPCur - 1
            I_ster.special_triggered = True
            ster_sp_triggered = True

        # non-special miracle has triggered
        if curMiracleTriggered:
            I_ster.pseudo_miracle = False
            I_ster.circlet_miracle = False
            I_ster.pseudo_miracle_triggered = True

        # No damage lol - Embla's Ward, etc.
        if "invincible" in strikee.getSkills():
            attack = 0

        # Váli Miracle
        if (I_stkr.vali_miracle and I_stkr.special_triggered) or (I_ster.vali_miracle and I_ster.special_triggered and not ster_sp_triggered):
            attack = 0

        # reduced atk
        I_ster.most_recent_reduced_atk = full_atk - attack

        # reset all retaliatory true damages
        I_stkr.stacking_retaliatory_damage = 0
        I_stkr.retaliatory_full_damages_CACHE = []

        # ice mirror i & ii, negating fang, etc.
        # retaliatory damage stacks with each activation
        for j in range(0, 1 + int(I_ster.apply_def_sp_twice)):
            if "iceMirror" in steSpEffects and ster_sp_triggered:
                I_ster.stacking_retaliatory_damage += full_atk - attack

            elif "frostbiteMirror" in steSpEffects and ster_sp_triggered:
                I_ster.stacking_retaliatory_damage += full_atk - attack

            elif "dualIceMirrors" in steSpEffects and ster_sp_triggered:
                I_ster.stacking_retaliatory_damage += min(full_atk - attack, math.trunc(steStats[RES] * 0.40))

            elif "iceMirrorII" in steSpEffects and ster_sp_triggered:
                I_ster.stacking_retaliatory_damage += math.trunc(steStats[RES] * 0.40)

            elif "corrinRetaliatoryDmg" in steSpEffects and ster_sp_triggered:
                I_ster.stacking_retaliatory_damage += math.trunc(steStats[ATK] * 0.01 * steSpEffects["corrinRetaliatoryDmg"])

        # Record first hit for "unit's next attack deals damage = total damage reduced from foe's first attack" effects
        # Also includes "boosts unit's next attack by total damage reduced", even if the first attack not stated
        # -1 means that no value has been set yet
        # -2 means that a value was once set and then used
        if I_ster.retaliatory_reduced and I_ster.nonstacking_retaliatory_damage == -1:
            I_ster.nonstacking_retaliatory_damage = (full_atk - attack) * I_ster.retaliatory_reduced

        # brash assault 4, counter roar
        I_ster.retaliatory_full_damages_CACHE = I_ster.retaliatory_full_damages[:]

        # the attack™
        steHPCur -= attack  # goodness gracious

        if not is_in_sim: print(striker.name + " attacks " + strikee.name + " for " + str(attack) + " damage.")  # YES THEY DID

        # used for determining full attack damage
        presented_attack = attack
        # to evaluate noontime heal on hit that kills
        if steHPCur < 1: attack += steHPCur

        # Finish healing
        mid_combat_skill_dmg = I_stkr.all_hits_heal + I_stkr.finish_mid_combat_heal * bool(stkSpCount == 0 or I_stkr.special_triggered)

        stkSpCount = max(stkSpCount - (1 + I_stkr.spGainOnAtk), 0)
        steSpCount = max(steSpCount - (1 + I_ster.spGainWhenAtkd), 0)

        if stkr_sp_triggered:
            stkSpCount = striker.specialMax
            if I_stkr.triggered_sp_charge != 0:
                stkSpCount -= I_stkr.triggered_sp_charge
                stkSpCount = max(stkSpCount, 0)
                I_stkr.triggered_sp_charge = 0

            I_stkr.true_sp_next_CACHE = I_stkr.true_sp_next

            for x in I_stkr.DR_sp_trigger_next_all_SP:
                I_stkr.DR_sp_trigger_next_all_SP_CACHE.append(x)

        if ster_sp_triggered:
            steSpCount = strikee.specialMax
            if I_ster.triggered_sp_charge != 0:
                steSpCount -= I_ster.triggered_sp_charge
                steSpCount = max(steSpCount, 0)
                I_ster.triggered_sp_charge = 0

            I_ster.true_sp_next_CACHE = I_ster.true_sp_next

            if I_ster.sp_pierce_after_def_sp:
                I_ster.sp_pierce_after_def_sp_CACHE = True

        # healing
        totalHealedAmount = 0
        surge_heal = I_stkr.surge_heal

        totalHealedAmount += mid_combat_skill_dmg

        if curAttack.isFollowUp:
            totalHealedAmount += I_stkr.follow_up_heal

        # Absorb staff
        if "absorb" in striker.getSkills():
            totalHealedAmount += math.trunc(attack * 0.5)

        # Surge heal
        if stkr_sp_triggered:
            totalHealedAmount += surge_heal

            # Specials that heal (Daylight, Sol, etc.)
            if "healSelf" in stkSpEffects:
                totalHealedAmount += math.trunc(attack * 0.01 * stkSpEffects["healSelf"])

            if "flareSp" in stkSpEffects and stkHPCur / stkStats[HP] < 0.70:
                totalHealedAmount += math.trunc(0.30 * stkStats[HP])

            if "newWarAxeSP" in stkSpEffects and stkHPCur / stkStats[HP] < 0.70:
                totalHealedAmount += math.trunc(stkStats[DEF] * (0.10 + 0.10 * striker.specialMax))

        if Status.DeepWounds in striker.statusNeg or I_ster.disable_foe_healing:
            total_prevention = 1

            for allowance in I_stkr.deep_wounds_allowance:
                total_prevention *= (1 - allowance/100)

            if I_stkr.disable_deep_wounds:
                total_prevention = 0

            totalHealedAmount -= trunc(totalHealedAmount * total_prevention)

        stkHPCur += totalHealedAmount
        if stkHPCur > stkStats[HP]: stkHPCur = stkStats[HP]

        if not is_in_sim and totalHealedAmount: print(striker.name + " heals " + str(totalHealedAmount) + " HP during combat.")

        return stkHPCur, steHPCur, stkSpCount, steSpCount, presented_attack, totalHealedAmount, stkr_sp_triggered

    # burn damage
    burn_damages = [0, 0]

    if "A" in startString2:
        defHPCur = max(defHPCur - atkr.foe_burn_damage, 1)
        atkHPCur = max(atkHPCur - atkr.self_burn_damage, 1)

        burn_damages[0] += atkr.foe_burn_damage
        burn_damages[1] += atkr.self_burn_damage

    if "D" in startString2:
        atkHPCur = max(atkHPCur - defr.foe_burn_damage, 1)
        defHPCur = max(defHPCur - defr.self_burn_damage, 1)

        burn_damages[1] += defr.foe_burn_damage
        burn_damages[0] += defr.self_burn_damage

    # Works, but needs to be updated to still show 0 burn damage
    # Currently displayed no burn damage w/ invincible effect
    if "invincible" in atkSkills:
        burn_damages[1] = 0

    if "invincible" in defSkills:
        burn_damages[0] = 0

    # Breath of Life healing
    precombat_heals = [0, 0]

    # Resolved Fang (Refine Eff) - NY!Keaton
    if "keatonBreathOfLife" in atkSkills and atkAllyWithin3Spaces:
        heal_total = min(trunc(0.20 * atkStats[HP]) + max(atkPhantomStats[DEF] - defPhantomStats[DEF], 0) * 4, trunc(0.40 * atkStats[HP]) + burn_damages[ATTACKER])
        precombat_heals[ATTACKER] = max(precombat_heals[ATTACKER],  heal_total)

    if "keatonBreathOfLife" in defSkills and defAllyWithin3Spaces:
        heal_total = min(trunc(0.20 * defStats[HP]) + max(defPhantomStats[DEF] - atkPhantomStats[DEF], 0) * 4, trunc(0.40 * defStats[HP]) + burn_damages[DEFENDER])
        precombat_heals[DEFENDER] = max(precombat_heals[DEFENDER], heal_total)

    if ("breath_of_life4" in atkSkills and atkAllyWithin2Spaces) or "breath_of_life4_f" in atkSkills:
        heal_total = min(trunc(0.20 * atkStats[HP]) + max(atkPhantomStats[DEF] - defPhantomStats[DEF], 0) * 4, trunc(0.40 * atkStats[HP]) + burn_damages[ATTACKER])
        precombat_heals[ATTACKER] = max(precombat_heals[ATTACKER], heal_total)

    if ("breath_of_life4" in defSkills and defAllyWithin2Spaces) or "breath_of_life4_f" in defSkills:
        heal_total = min(trunc(0.20 * defStats[HP]) + max(defPhantomStats[DEF] - atkPhantomStats[DEF], 0) * 4, trunc(0.40 * defStats[HP]) + burn_damages[DEFENDER])
        precombat_heals[DEFENDER] = max(precombat_heals[DEFENDER], heal_total)

    if ("hAskrBoost" in atkSkills and defHPGreaterEqual75Percent) or "hAskrBoost_f" in atkSkills:
        heal_total = min(trunc(0.20 * atkStats[HP]) + max(atkPhantomStats[DEF] - defPhantomStats[DEF], 0) * 4, trunc(0.40 * atkStats[HP]) + burn_damages[ATTACKER])
        precombat_heals[ATTACKER] = max(precombat_heals[ATTACKER], heal_total)

    if "hAskrBoost" in defSkills or "hAskrBoost_f" in defSkills:
        heal_total = min(trunc(0.20 * defStats[HP]) + max(defPhantomStats[DEF] - atkPhantomStats[DEF], 0) * 4, trunc(0.40 * defStats[HP]) + burn_damages[DEFENDER])
        precombat_heals[DEFENDER] = max(precombat_heals[DEFENDER], heal_total)

    if Status.DivineNectar in attacker.statusPos: precombat_heals[ATTACKER] = max(precombat_heals[ATTACKER], 20)
    if Status.DivineNectar in defender.statusPos: precombat_heals[DEFENDER] = max(precombat_heals[DEFENDER], 20)
    
    if Status.Imbue in attacker.statusPos: precombat_heals[ATTACKER] = max(precombat_heals[ATTACKER], trunc(0.40 * atkStats[HP]))
    if Status.Imbue in defender.statusPos: precombat_heals[DEFENDER] = max(precombat_heals[DEFENDER], trunc(0.40 * defStats[HP]))

    # Apply Deep Wounds to BoL healing
    atk_total_prevention = 0
    if Status.DeepWounds in attacker.statusNeg or defr.disable_foe_healing:
        atk_total_prevention = 1

        for allowance in atkr.deep_wounds_allowance:
            atk_total_prevention *= (1 - allowance / 100)

        if atkr.disable_deep_wounds:
            atk_total_prevention = 0

    def_total_prevention = 0
    if Status.DeepWounds in defender.statusNeg or atkr.disable_foe_healing:
        def_total_prevention = 1

        for allowance in defr.deep_wounds_allowance:
            def_total_prevention *= (1 - allowance / 100)

        if defr.disable_deep_wounds:
            def_total_prevention = 0

    precombat_heals[ATTACKER] -= trunc(precombat_heals[ATTACKER] * atk_total_prevention)
    precombat_heals[DEFENDER] -= trunc(precombat_heals[DEFENDER] * def_total_prevention)

    atkHPCur = min(atkHPCur + precombat_heals[ATTACKER], atkStats[HP])
    defHPCur = min(defHPCur + precombat_heals[DEFENDER], defStats[HP])

    # PERFORM THE ATTACKS
    atkPerformedAttack = False
    defPerformedAttack = False

    atkFinalSpCount = False
    defFinalSpCount = False

    i = 0
    while i < len(attackList) and (atkAlive and defAlive or is_in_sim):
        curAtk = attackList[i]

        # post-combat status effects & mid-combat special jumps
        if curAtk.attackOwner == 0 and curAtk.attackNumSelf == 1 and atkAlive:

            atkPostCombatEffs[0] += atkPostCombatEffs[2]
            atkPostCombatEffs[2] = []
            atkPerformedAttack = True

            atkSpCountCur = max(0, atkSpCountCur - atkr.sp_jump_first)
            defSpCountCur = max(0, defSpCountCur - defr.sp_jump_foe_first)

            atkSpCountCur = min(atkSpCountCur, attacker.specialMax)
            defSpCountCur = min(defSpCountCur, defender.specialMax)

        if curAtk.attackOwner == 0 and (curAtk.attackNumSelf == 2 and atkr.brave):
            atkSpCountCur = max(0, atkSpCountCur - atkr.sp_jump_first_brave)
            atkSpCountCur = min(atkSpCountCur, attacker.specialMax)

            defSpCountCur = max(0, defSpCountCur - defr.sp_jump_foe_first_brave)
            defSpCountCur = min(defSpCountCur, defender.specialMax)

        # On attacker's follow-up attack
        if curAtk.attackOwner == 0 and (curAtk.attackNumSelf == 2 and not atkr.brave or curAtk.attackNumSelf == 3 and atkr.brave):
            atkSpCountCur = max(0, atkSpCountCur - atkr.sp_jump_followup)
            atkSpCountCur = min(atkSpCountCur, attacker.specialMax)

            defSpCountCur = max(0, defSpCountCur - defr.sp_jump_foe_followup)
            defSpCountCur = min(defSpCountCur, defender.specialMax)

        if curAtk.isFollowUp:
            atkSpCountCur = max(0, atkSpCountCur - atkr.sp_jump_any_followup)
            atkSpCountCur = min(atkSpCountCur, attacker.specialMax)

        if curAtk.attackOwner == 1 and curAtk.attackNumSelf == 1 and defAlive:

            defPostCombatEffs[0] += defPostCombatEffs[2]
            defPostCombatEffs[2] = []
            defPerformedAttack = True

            defSpCountCur = max(0, defSpCountCur - defr.sp_jump_first)
            atkSpCountCur = max(0, atkSpCountCur - atkr.sp_jump_foe_first)

            defSpCountCur = min(defSpCountCur, defender.specialMax)
            atkSpCountCur = min(atkSpCountCur, attacker.specialMax)

        if curAtk.attackOwner == 1 and (curAtk.attackNumSelf == 2 and defr.brave):
            defSpCountCur = max(0, defSpCountCur - defr.sp_jump_first_brave)
            defSpCountCur = min(defSpCountCur, defender.specialMax)

            atkSpCountCur = max(0, atkSpCountCur - atkr.sp_jump_foe_first_brave)
            atkSpCountCur = min(atkSpCountCur, attacker.specialMax)

        # On defender's follow-up attack
        if curAtk.attackOwner == 1 and (curAtk.attackNumSelf == 2 and not defr.brave or curAtk.attackNumSelf == 3 and defr.brave):
            defSpCountCur = max(0, defSpCountCur - defr.sp_jump_followup)
            defSpCountCur = min(defSpCountCur, defender.specialMax)

            atkSpCountCur = max(0, atkSpCountCur - atkr.sp_jump_foe_followup)
            atkSpCountCur = min(atkSpCountCur, attacker.specialMax)

        if curAtk.isFollowUp:
            defSpCountCur = max(0, defSpCountCur - defr.sp_jump_any_followup)
            defSpCountCur = min(defSpCountCur, defender.specialMax)

        # damage reductions
        damage_reductions = []
        special_damage_reductions = []

        if curAtk.attackOwner == 0:
            damage_reductions += defr.DR_all_hits_NSP
            special_damage_reductions += defr.DR_all_hits_SP

            if defr.DR_great_aether_SP:
                if curAtk.isConsecutive:
                    special_damage_reductions.append(70 - (defSpCountCur * 10))
                else:
                    special_damage_reductions.append(40 - (defSpCountCur * 10))

            if defr.DR_dragon_fang_shot_SP:
                special_damage_reductions.append((4 - defSpCountCur) * max(0, min(defPhantomStats[RES] - atkPhantomStats[RES], 10)))

            if defr.DR_king_making_SP:
                special_damage_reductions.append(40 - (10 * defSpCountCur))

            if defr.DR_aether_path_SP:
                if defr.special_triggered:
                    special_damage_reductions.append(50)
                else:
                    special_damage_reductions.append(50 - (10 * defSpCountCur))

            if defr.DR_fire_emblem_SP:
                ally_count = 1 if Status.FireEmblem in defender.statusPos else 0

                for ally in defAllAllies:
                    if Status.FireEmblem in ally.statusPos:
                        ally_count += 1

                special_damage_reductions.append(min(10 * ally_count, 40))

            if atkr.special_triggered or atkSpCountCur == 0 or defr.special_triggered or defSpCountCur == 0:
                special_damage_reductions += defr.DR_sp_trigger_by_any_special_SP
                special_damage_reductions += defr.DR_sp_trigger_by_any_special_non_twin_SP

                if defr.DR_sp_trigger_twin:
                    defr.DR_sp_trigger_twin = False
                else:
                    defr.DR_sp_trigger_by_any_special_SP = []

                DR_sp_trigger_by_any_special_non_twin_SP = []

            if curAtk.attackNumSelf == 1:
                damage_reductions += defr.DR_first_hit_NSP
                damage_reductions += defr.DR_first_strikes_NSP
                damage_reductions += defr.DR_first_strikes_SP

            if curAtk.attackNumSelf == 2:
                if atkr.brave:
                    damage_reductions += defr.DR_first_strikes_NSP
                    damage_reductions += defr.DR_first_strikes_SP
                else:
                    damage_reductions += defr.DR_second_strikes_NSP

            if curAtk.attackNumSelf >= 3:
                damage_reductions += defr.DR_second_strikes_NSP
            if curAtk.isConsecutive:
                damage_reductions += defr.DR_consec_strikes_NSP

            if defr.special_triggered and defender.getSpecialType() == "Offense":
                damage_reductions += defr.DR_sp_trigger_next_only_NSP
                defr.DR_sp_trigger_next_only_NSP = []

                special_damage_reductions += defr.DR_sp_trigger_next_only_SP
                defr.DR_sp_trigger_next_only_SP = []

                special_damage_reductions += defr.DR_sp_trigger_next_all_SP_CACHE
                defr.DR_sp_trigger_next_all_SP_CACHE = []

        if curAtk.attackOwner == 1:
            damage_reductions += atkr.DR_all_hits_NSP
            special_damage_reductions += atkr.DR_all_hits_SP

            if atkr.DR_great_aether_SP:
                if curAtk.isConsecutive:
                    special_damage_reductions.append(70 - (atkSpCountCur * 10))
                else:
                    special_damage_reductions.append(40 - (atkSpCountCur * 10))

            if atkr.DR_dragon_fang_shot_SP:
                special_damage_reductions.append((4 - atkSpCountCur) * max(0, min(atkPhantomStats[RES] - defPhantomStats[RES], 10)))

            if atkr.DR_king_making_SP:
                special_damage_reductions.append(40 - (10 * atkSpCountCur))

            if atkr.DR_aether_path_SP:
                if atkr.special_triggered:
                    special_damage_reductions.append(50)
                else:
                    special_damage_reductions.append(50 - (10 * atkSpCountCur))

            if atkr.DR_fire_emblem_SP:
                ally_count = 1 if Status.FireEmblem in attacker.statusPos else 0

                for ally in atkAllAllies:
                    if Status.FireEmblem in ally.statusPos:
                        ally_count += 1

                special_damage_reductions.append(min(10 * ally_count, 40))

            if atkr.special_triggered or atkSpCountCur == 0 or defr.special_triggered or defSpCountCur == 0:
                special_damage_reductions += atkr.DR_sp_trigger_by_any_special_SP
                special_damage_reductions += atkr.DR_sp_trigger_by_any_special_non_twin_SP

                if atkr.DR_sp_trigger_twin:
                    atkr.DR_sp_trigger_twin = False
                else:
                    atkr.DR_sp_trigger_by_any_special_SP = []

                atkr.DR_sp_trigger_by_any_special_non_twin_SP = []

            if curAtk.attackNumSelf == 1:
                damage_reductions += atkr.DR_first_hit_NSP
                damage_reductions += atkr.DR_first_strikes_NSP
                damage_reductions += atkr.DR_first_strikes_SP

            if curAtk.attackNumSelf == 2:
                if defr.brave:
                    damage_reductions += atkr.DR_first_strikes_NSP
                    damage_reductions += atkr.DR_first_strikes_SP
                else:
                    damage_reductions += atkr.DR_second_strikes_NSP

            if curAtk.attackNumSelf >= 3:
                damage_reductions += atkr.DR_second_strikes_NSP
            if curAtk.isConsecutive:
                damage_reductions += atkr.DR_consec_strikes_NSP

            if atkr.special_triggered and attacker.getSpecialType() == "Offense":
                damage_reductions += atkr.DR_sp_trigger_next_only_NSP
                atkr.DR_sp_trigger_next_only_NSP = []

                special_damage_reductions += atkr.DR_sp_trigger_next_only_SP
                atkr.DR_sp_trigger_next_only_SP = []

        # this should've been done at the start of the program
        roles = [attacker, defender]
        effects = [atkSkills, defSkills]
        stats = [atkStats, defStats]
        checkedDefs = [atkTargetingDefRes, defTargetingDefRes]
        curHPs = [atkHPCur, defHPCur]
        curSpCounts = [atkSpCountCur, defSpCountCur]

        # SpongebobPatrick
        spongebob = curAtk.attackOwner
        patrick = int(not curAtk.attackOwner)

        modifiers = [atkr, defr]

        strikeResult = perform_attack(roles[spongebob], roles[patrick], effects[spongebob], effects[patrick],
                                      stats[spongebob],
                                      stats[patrick], checkedDefs[spongebob],
                                      damage_reductions, special_damage_reductions, curHPs[spongebob], curHPs[patrick],
                                      curSpCounts[spongebob], curSpCounts[patrick],
                                      modifiers[spongebob], modifiers[patrick], curAtk)

        atkHPCur = strikeResult[spongebob]
        defHPCur = strikeResult[patrick]

        atkSpCountCur = strikeResult[spongebob + 2]
        defSpCountCur = strikeResult[patrick + 2]

        damageDealt = strikeResult[4]
        healthHealed = strikeResult[5]

        stkSpecialTriggered = strikeResult[6]

        curAtk.impl_atk(stkSpecialTriggered, damageDealt, healthHealed, (atkSpCountCur, defSpCountCur), (atkHPCur, defHPCur))

        #print(atkHPCur, defHPCur)

        # I am dead
        if atkHPCur <= 0 and defAlive:
            atkHPCur = 0
            atkAlive = False
            if not is_in_sim: print(attacker.name + " falls.")
            curAtk.is_finisher = True

            atkFinalSpCount = atkSpCountCur
            defFinalSpCount = defSpCountCur

        if defHPCur <= 0 and atkAlive:
            defHPCur = 0
            defAlive = False
            if not is_in_sim: print(defender.name + " falls.")
            curAtk.is_finisher = True

            atkFinalSpCount = atkSpCountCur
            defFinalSpCount = defSpCountCur

        i += 1  # increment buddy!

    if atkAlive: atkPostCombatEffs[UNCONDITIONAL] += atkPostCombatEffs[GIVEN_UNIT_SURVIVED]
    if defAlive: defPostCombatEffs[UNCONDITIONAL] += defPostCombatEffs[GIVEN_UNIT_SURVIVED]

    if atkAlive and defAlive:
        atkFinalSpCount = atkSpCountCur
        defFinalSpCount = defSpCountCur

    if atkr.special_triggered: atkPostCombatEffs[UNCONDITIONAL] += atkPostCombatEffs[GIVEN_SPECIAL_TRIGGERED]
    if defr.special_triggered: defPostCombatEffs[UNCONDITIONAL] += defPostCombatEffs[GIVEN_SPECIAL_TRIGGERED]

    if atkFinalSpCount == attacker.specialMax: atkPostCombatEffs[UNCONDITIONAL] += atkPostCombatEffs[GIVEN_SPECIAL_MAX]
    if defFinalSpCount == defender.specialMax: defPostCombatEffs[UNCONDITIONAL] += defPostCombatEffs[GIVEN_SPECIAL_MAX]

    # Post Combat Effects (that require the user to survive)
    if "specialSpiralW" in atkSkills and atkr.special_triggered:
        spiral_charge = math.ceil(atkSkills["specialSpiralW"] / 2)
        atkPostCombatEffs[0].append(("sp_charge", spiral_charge, "self", "one"))

    if "specialSpiralW" in defSkills and defSkills["specialSpiralW"] > 1 and defr.special_triggered:
        spiral_charge = math.ceil(defSkills["specialSpiralW"] / 2)
        defPostCombatEffs[0].append(("sp_charge", spiral_charge, "self", "one"))

    if "specialSpiralS" in atkSkills and atkr.special_triggered:
        spiral_charge = math.ceil(atkSkills["specialSpiralS"] / 2)
        atkPostCombatEffs[0].append(("sp_charge", spiral_charge, "self", "one"))

    if "specialSpiralS" in defSkills and defSkills["specialSpiralS"] > 1 and defr.special_triggered:
        spiral_charge = math.ceil(defSkills["specialSpiralS"] / 2)
        defPostCombatEffs[0].append(("sp_charge", spiral_charge, "self", "one"))

    if "timesPulse4" in atkSkills and atkFinalSpCount == attacker.specialMax:
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    if "timesPulse4" in defSkills and defFinalSpCount == defender.specialMax:
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    if "timePulseEcho" in atkSkills and atkFinalSpCount == attacker.specialMax:
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    if "timePulseEcho" in defSkills and defFinalSpCount == defender.specialMax:
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    if "holyPressure" in atkSkills and atkr.special_triggered:
        atkPostCombatEffs[UNCONDITIONAL].append(("status", Status.Gravity, "foe_and_foes_allies", "within_1_spaces_foe"))

    if "holyPressure" in defSkills and defr.special_triggered:
        defPostCombatEffs[UNCONDITIONAL].append(("status", Status.Gravity, "foe_and_foes_allies", "within_1_spaces_foe"))

    if "lightsRestraint" in atkSkills and atkr.special_triggered:
        atkPostCombatEffs[UNCONDITIONAL].append(("status", Status.Guard, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", -1, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "lightsRestraint" in defSkills and defr.special_triggered:
        defPostCombatEffs[UNCONDITIONAL].append(("status", Status.Guard, "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", -1, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "holyPanic" in atkSkills and atkr.special_triggered:
        atkPostCombatEffs[UNCONDITIONAL].append(("status", Status.Panic, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[UNCONDITIONAL].append(("debuff_atk", 6, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[UNCONDITIONAL].append(("debuff_spd", 6, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "holyPanic" in defSkills and defr.special_triggered:
        defPostCombatEffs[UNCONDITIONAL].append(("status", Status.Panic, "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[UNCONDITIONAL].append(("debuff_atk", 6, "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[UNCONDITIONAL].append(("debuff_spd", 6, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "glitterOfLight" in atkSkills and atkr.special_triggered:
        atkPostCombatEffs[UNCONDITIONAL].append(("status", Status.Flash, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "glitterOfLight" in defSkills and defr.special_triggered:
        defPostCombatEffs[UNCONDITIONAL].append(("status", Status.Flash, "foe_and_foes_allies", "within_2_spaces_foe"))

    if Status.EssenceDrain in attacker.statusPos and not defAlive: atkPostCombatEffs[0].append(("heal", 10, "self_and_essence_drainers", "global"))
    if Status.EssenceDrain in defender.statusPos and not atkAlive: defPostCombatEffs[0].append(("heal", 10, "self_and_essence_drainers", "global"))

    # EXCLUSIVE STUFF

    # Sacrifice Staff
    if "sacrificeStaff_f" in atkSkills and atkr.pseudo_miracle_triggered:
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 99, "self", "one"))
        atkPostCombatEffs[UNCONDITIONAL].append(("enable_once_per_map", 0, "ally_marias", "within_2_spaces_self"))

    if "sacrificeStaff_f" in defSkills and defr.pseudo_miracle_triggered:
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 99, "self", "one"))
        defPostCombatEffs[UNCONDITIONAL].append(("enable_once_per_map", 0, "ally_marias", "within_2_spaces_self"))

    # Martyr's Staff - FA!Lena
    if "martyrsStaff_f" in atkSkills and atkr.pseudo_miracle_triggered:
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 99, "self", "one"))
        atkPostCombatEffs[UNCONDITIONAL].append(("enable_once_per_map", 0, "ally_lenas", "within_3_spaces_self"))

    if "martyrsStaff_f" in defSkills and defr.pseudo_miracle_triggered:
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 99, "self", "one"))
        defPostCombatEffs[UNCONDITIONAL].append(("enable_once_per_map", 0, "ally_lenas", "within_3_spaces_self"))

    # Circlet of Balance
    if "circletOfBalance" in atkSkills and not atkr.circlet_miracle and not attacker.once_per_map_cond:
        atkPostCombatEffs[UNCONDITIONAL].append(("enable_once_per_map", 0, "self", "one"))

    if "circletOfBalance" in defSkills and defender.wpnType in RANGED_WEAPONS and not defr.circlet_miracle and not defender.once_per_map_cond:
        defPostCombatEffs[UNCONDITIONAL].append(("enable_once_per_map", 0, "self", "one"))

    # Emblems' Miracle
    if "Miracle O' Emblems" in atkSkills and atkr.pseudo_miracle_triggered:
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 99, "self", "one"))
        atkPostCombatEffs[UNCONDITIONAL].append(("enable_once_per_map", 0, "self", "one"))

    if "Miracle O' Emblems" in defSkills and defr.pseudo_miracle_triggered:
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 99, "self", "one"))
        defPostCombatEffs[UNCONDITIONAL].append(("enable_once_per_map", 0, "self", "one"))

    # Devoted Breath - V!Rhea
    if "vRheaMiracle_f" in defSkills and defr.pseudo_miracle_triggered:
        defPostCombatEffs[UNCONDITIONAL].append(("enable_once_per_turn", 0, "ally_rheas", "within_3_spaces_self"))

    # Gifted Magic II - L!Lilina
    if "giftedCanto" in atkSkills and atkr.special_triggered:
        atkPostCombatEffs[0].append(("status", Status.Canto1, "self_and_allies", "within_3_rows_cols_self"))

    # Life Unending
    if "lifeUnending" in atkSkills and atkr.special_triggered and not attacker.once_per_map_cond:
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 99, "self", "one"))
        atkPostCombatEffs[UNCONDITIONAL].append(("enable_once_per_map", 0, "self", "one"))

    if "lifeUnending" in defSkills and defr.special_triggered and not defender.once_per_map_cond:
        defPostCombatEffs[UNCONDITIONAL].append(("heal", 99, "self", "one"))
        defPostCombatEffs[UNCONDITIONAL].append(("enable_once_per_map", 0, "self", "one"))

    # Life Unending II
    if "lifeUnendingII" in atkSkills and atkr.special_triggered and "disableSpecial" not in attacker.statusOther:
        atkPostCombatEffs[UNCONDITIONAL].append(("absolute_heal", 99, "self", "one"))
        atkPostCombatEffs[UNCONDITIONAL].append(("disable_special", 2, "self", "one"))

    if "lifeUnendingII" in defSkills and defr.special_triggered and "disableSpecial" not in defender.statusOther:
        defPostCombatEffs[UNCONDITIONAL].append(("absolute_heal", 99, "self", "one"))
        defPostCombatEffs[UNCONDITIONAL].append(("disable_special", 2, "self", "one"))

    # Cymbeline (Base) - Sanaki
    if "sanakiBuff" in atkSkills and atkAlive:
        atkPostCombatEffs[0].append(("buff_atk", 4, "allies", "within_1_spaces_self"))

    # Bride's Fang (Base) - BR!Nailah
    if "brNailahBoost" in atkSkills and defHPGreaterEqual75Percent and atkr.special_triggered and atkPerformedAttack:
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    if "brNailahBoost" in defSkills and atkHPGreaterEqual75Percent and defr.special_triggered and defPerformedAttack:
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    # Bride's Fang (Base) - BR!Nailah
    if "brNailahRefine" in atkSkills and atkr.special_triggered and atkPerformedAttack:
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 2, "self", "one"))

    if "brNailahRefine" in defSkills and atkHPGreaterEqual75Percent and defr.special_triggered and defPerformedAttack:
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 2, "self", "one"))

    # Bunny Fang (Base) - Yarne
    if "yarnePulse" in atkSkills and atkHPCur / atkStats[HP] <= 0.75 and atkAlive:
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 2, "self", "one"))

    if "yarnePulse" in defSkills and defHPCur / defStats[HP] <= 0.75 and defAlive:
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 2, "self", "one"))

    if "yarneRefinePulse" in atkSkills and atkHPCur / atkStats[HP] <= 0.90 and atkAlive:
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 2, "self", "one"))

    if "yarneRefinePulse" in defSkills and defHPCur / defStats[HP] <= 0.90 and defAlive:
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 2, "self", "one"))

    # Wary Rabbit Fang (Base) - NY!Yarne
    if "nyYarneBoost" in atkSkills and atkHPCur / atkStats[HP] <= 0.90 and atkAlive:
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 2, "self", "one"))

    if "nyYarneBoost" in defSkills and not defAdjacentToAlly and defHPCur / defStats[HP] <= 0.90 and defAlive:
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 2, "self", "one"))

    # Full Rabbit Fang - H!Yarne
    if "hYarneBoost" in atkSkills and atkHPCur / atkStats[HP] <= 0.90 and atkAlive:
        non_dragon_beast = 0

        for ally in atkAdjacentToAlly:
            if ally.wpnType not in DRAGON_WEAPONS + BEAST_WEAPONS:
                non_dragon_beast += 1

        if attacker.transformed or non_dragon_beast <= 1:
            atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 2, "self", "one"))

    if "hYarneBoost" in defSkills and defHPCur / defStats[HP] <= 0.90 and defAlive:
        non_dragon_beast = 0

        for ally in defAdjacentToAlly:
            if ally.wpnType not in DRAGON_WEAPONS + BEAST_WEAPONS:
                non_dragon_beast += 1

        if defender.transformed or non_dragon_beast <= 1:
            defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 2, "self", "one"))

    # Larcei's Edge (Refine Eff)
    if "infiniteSpecial" in atkSkills and atkHPGreaterEqual25Percent and atkFinalSpCount == attacker.specialMax:
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    if "infiniteSpecial" in defSkills and defHPGreaterEqual25Percent and defFinalSpCount == defender.specialMax:
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    # Vassal-Saint Steel - A!Fir
    if "godSword?" in atkSkills and atkHPGreaterEqual25Percent and atkFinalSpCount == attacker.specialMax:
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    if "godSword?" in defSkills and defHPGreaterEqual25Percent and defFinalSpCount == defender.specialMax:
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    # Striving Sword - Severa
    if "severaBlade" in atkSkills and atkAllyWithin3Spaces and atkr.special_triggered:
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 2, "self", "one"))

    if "severaBlade" in defSkills and defAllyWithin3Spaces and defr.special_triggered:
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 2, "self", "one"))

    # Hoshido's Breath - L!M!Corrin
    if "HoshidosBreath" in atkSkills and atkHPGreaterEqual25Percent and atkFinalSpCount == attacker.specialMax:
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    if "HoshidosBreath" in defSkills and defHPGreaterEqual25Percent and defFinalSpCount == defender.specialMax:
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    # Dragon Fang Shot - L!M!Corrin
    if ("dragonFangShot" in atkSkills or "dragonFangFire" in atkSkills) and atkr.special_triggered:
        atkPostCombatEffs[UNCONDITIONAL].append(("dv_water", 2, "foe", "one"))

    if ("dragonFangShot" in defSkills or "dragonFangFire" in defSkills) and defr.special_triggered:
        defPostCombatEffs[UNCONDITIONAL].append(("dv_water", 2, "foe", "one"))

    # Inner Wellspring
    if ("bfBylethBoost" in atkSkills or "bfBylethRefine" in atkSkills) and atkr.special_triggered:
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    if ("bfBylethBoost" in defSkills or "bfBylethRefine" in defSkills) and defAllyWithin2Spaces and defr.special_triggered:
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    # Atrocity
    if "atrocity" in atkSkills and defHPGreaterEqual50Percent and atkAlive:
        atkPostCombatEffs[UNCONDITIONAL].append(("debuff_omni", 5, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", -1, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "atrocity" in defSkills and atkHPGreaterEqual50Percent and defAlive:
        defPostCombatEffs[UNCONDITIONAL].append(("debuff_omni", 5, "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", -1, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "atrocityII" in atkSkills and defr.start_of_combat_HP / defStats[HP] >= 0.40 and atkAlive:
        atkPostCombatEffs[UNCONDITIONAL].append(("debuff_omni", 6, "foe_and_foes_allies", "within_3_spaces_foe"))
        atkPostCombatEffs[UNCONDITIONAL].append(("status", Status.Guard, "foe_and_foes_allies", "within_3_spaces_foe"))
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", -1, "foe_and_foes_allies", "within_3_spaces_foe"))

    if "atrocityII" in defSkills and atkr.start_of_combat_HP / atkStats[HP] >= 0.40 and defAlive:
        defPostCombatEffs[UNCONDITIONAL].append(("debuff_omni", 6, "foe_and_foes_allies", "within_3_spaces_foe"))
        defPostCombatEffs[UNCONDITIONAL].append(("status", Status.Guard, "foe_and_foes_allies", "within_3_spaces_foe"))
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", -1, "foe_and_foes_allies", "within_3_spaces_foe"))

    # Lone-Wolf Blade (Base) - Felix
    if ">:(" in atkSkills and atkHPGreaterEqual25Percent:
        if atkFinalSpCount == attacker.specialMax:
            atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 2, "self", "one"))
        elif atkFinalSpCount == attacker.specialMax - 1:
            atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    if ">:(" in defSkills and defHPGreaterEqual25Percent:
        if defFinalSpCount == defender.specialMax:
            defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 2, "self", "one"))
        elif defFinalSpCount == defender.specialMax - 1:
            defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    # Amathe (Refine Eff) - Kronya
    if "kronyaExposure" in atkSkills and atkAlive and atkPerformedAttack:
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("damage", 5, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[GIVEN_UNIT_ATTACKED].append(("status", Status.Exposure, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Majestic Glitnir - B!Alfonse
    if "bAlfonseBoost" in atkSkills and atkFinalSpCount == attacker.specialMax:
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    if "bAlfonseBoost" in defSkills and defAllyWithin3RowsCols and defFinalSpCount == defender.specialMax:
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    # Makings of a King - B!Alfonse
    if "makingsOfAKing" in atkSkills and atkr.special_triggered:
        atkPostCombatEffs[UNCONDITIONAL].append(("great_talent_atk", (4, 20), "self", "one"))
        atkPostCombatEffs[UNCONDITIONAL].append(("great_talent_def", (4, 20), "self", "one"))
        atkPostCombatEffs[UNCONDITIONAL].append(("great_talent_res", (4, 20), "self", "one"))

        atkPostCombatEffs[UNCONDITIONAL].append(("great_talent_atk", (2, 10), "allies", "within_3_rows_cols_self"))
        atkPostCombatEffs[UNCONDITIONAL].append(("great_talent_def", (2, 10), "allies", "within_3_rows_cols_self"))
        atkPostCombatEffs[UNCONDITIONAL].append(("great_talent_res", (2, 10), "allies", "within_3_rows_cols_self"))

    if "makingsOfAKing" in defSkills and defr.special_triggered:
        defPostCombatEffs[UNCONDITIONAL].append(("great_talent_atk", (4, 20), "self", "one"))
        defPostCombatEffs[UNCONDITIONAL].append(("great_talent_def", (4, 20), "self", "one"))
        defPostCombatEffs[UNCONDITIONAL].append(("great_talent_res", (4, 20), "self", "one"))

        defPostCombatEffs[UNCONDITIONAL].append(("great_talent_atk", (2, 10), "allies", "within_3_rows_cols_self"))
        defPostCombatEffs[UNCONDITIONAL].append(("great_talent_def", (2, 10), "allies", "within_3_rows_cols_self"))
        defPostCombatEffs[UNCONDITIONAL].append(("great_talent_res", (2, 10), "allies", "within_3_rows_cols_self"))

    # Deadly Balance+
    if "deadlyBalancePlus" in atkSkills and atkr.special_triggered:
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 2, "self", "one"))

    if "deadlyBalancePlus" in defSkills and defr.special_triggered:
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 2, "self", "one"))

    # Poison Strike
    if "poisonStrike" in atkSkills and atkAlive:
        atkPostCombatEffs[UNCONDITIONAL].append(("damage", atkSkills["poisonStrike"], "foe", "one"))

    # Breath of Life
    if "breath_of_life" in atkSkills and atkAlive:
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", atkSkills["breath_of_life"], "allies", "within_1_spaces_self"))

    # Savage Blow
    if "savageBlow" in atkSkills and atkAlive:
        atkPostCombatEffs[UNCONDITIONAL].append(("damage", atkSkills["savageBlow"], "foes_allies", "within_2_spaces_foe"))

    # Deadly Miasma
    if "deadlyMiasma" in atkSkills and atkAlive:
        atkPostCombatEffs[UNCONDITIONAL].append(("damage", 7, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[UNCONDITIONAL].append(("dv_haze", 2, "foe", "one"))

    if "easterHealA" in atkSkills and atkAlive:
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", 4, "self", "one"))

    if "bridalBuffsA" in atkSkills and atkAlive:
        atkPostCombatEffs[UNCONDITIONAL].append(("buff_def", 2, "allies", "within_2_spaces_self"))
        atkPostCombatEffs[UNCONDITIONAL].append(("buff_res", 2, "allies", "within_2_spaces_self"))

    if "clarisseDebuffA" in atkSkills and atkAlive:
        atkPostCombatEffs[UNCONDITIONAL].append(("debuff_atk", 5, "foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[UNCONDITIONAL].append(("debuff_spd", 5, "foes_allies", "within_2_spaces_foe"))

    # ARE YA SMOKING YET?
    if "atkSmoke" in atkSkills and atkAlive:
        atkPostCombatEffs[UNCONDITIONAL].append(("debuff_atk", atkSkills["atkSmoke"], "foes_allies", "within_2_spaces_foe"))

        if "atkSmoke4" in atkSkills:
            atkPostCombatEffs[UNCONDITIONAL].append(("debuff_atk", atkSkills["atkSmoke"], "foe", "one"))
            atkPostCombatEffs[UNCONDITIONAL].append(("buff_def", 6, "self", "one"))
            atkPostCombatEffs[UNCONDITIONAL].append(("buff_res", 6, "self", "one"))
            atkPostCombatEffs[UNCONDITIONAL].append(("status", Status.DenyFollowUp, "self", "one"))

    if "atkSmoke" in defSkills and defAlive:
        defPostCombatEffs[UNCONDITIONAL].append(("debuff_atk", defSkills["atkSmoke"], "foes_allies", "within_2_spaces_foe"))

        if "atkSmoke4" in defSkills:
            defPostCombatEffs[UNCONDITIONAL].append(("debuff_atk", defSkills["atkSmoke"], "foe", "one"))
            defPostCombatEffs[UNCONDITIONAL].append(("buff_def", 6, "self", "one"))
            defPostCombatEffs[UNCONDITIONAL].append(("buff_res", 6, "self", "one"))
            defPostCombatEffs[UNCONDITIONAL].append(("status", Status.DenyFollowUp, "self", "one"))

    if "atkSmokeSe" in atkSkills and atkAlive: atkPostCombatEffs[UNCONDITIONAL].append(("debuff_atk", atkSkills["atkSmokeSe"], "foes_allies", "within_2_spaces_foe"))
    if "atkSmokeSe" in defSkills and defAlive: defPostCombatEffs[UNCONDITIONAL].append(("debuff_atk", defSkills["atkSmokeSe"], "foes_allies", "within_2_spaces_foe"))

    if "spdSmoke" in atkSkills and atkAlive: atkPostCombatEffs[0].append(("debuff_spd", atkSkills["spdSmoke"], "foes_allies", "within_2_spaces_foe"))
    if "spdSmoke" in defSkills and defAlive: defPostCombatEffs[0].append(("debuff_spd", defSkills["spdSmoke"], "foes_allies", "within_2_spaces_foe"))

    if "spdSmoke4" in atkSkills and atkAlive:
        atkPostCombatEffs[0].append(("debuff_spd", 7, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[0].append(("buff_spd", 7, "self", "one"))
        atkPostCombatEffs[0].append(("status", Status.Dodge, "self", "one"))

    if "spdSmoke4" in defSkills and defAlive:
        defPostCombatEffs[0].append(("debuff_spd", 7, "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[0].append(("buff_spd", 7, "self", "one"))
        defPostCombatEffs[0].append(("status", Status.Dodge, "self", "one"))

    if "spdSmokeSe" in atkSkills and atkAlive: atkPostCombatEffs[UNCONDITIONAL].append(("debuff_spd", atkSkills["spdSmokeSe"], "foes_allies", "within_2_spaces_foe"))
    if "spdSmokeSe" in defSkills and defAlive: defPostCombatEffs[UNCONDITIONAL].append(("debuff_spd", defSkills["spdSmokeSe"], "foes_allies", "within_2_spaces_foe"))

    if "defSmoke" in atkSkills and atkAlive: atkPostCombatEffs[0].append(("debuff_def", atkSkills["defSmoke"], "foes_allies", "within_2_spaces_foe"))
    if "defSmoke" in defSkills and defAlive: defPostCombatEffs[0].append(("debuff_def", defSkills["defSmoke"], "foes_allies", "within_2_spaces_foe"))

    if "defSmokeSe" in atkSkills and atkAlive: atkPostCombatEffs[UNCONDITIONAL].append(("debuff_def", atkSkills["defSmokeSe"], "foes_allies", "within_2_spaces_foe"))
    if "defSmokeSe" in defSkills and defAlive: defPostCombatEffs[UNCONDITIONAL].append(("debuff_def", defSkills["defSmokeSe"], "foes_allies", "within_2_spaces_foe"))

    if "resSmoke" in atkSkills and atkAlive: atkPostCombatEffs[0].append(("debuff_res", atkSkills["defSmoke"], "foes_allies", "within_2_spaces_foe"))
    if "resSmoke" in defSkills and defAlive: defPostCombatEffs[0].append(("debuff_res", defSkills["defSmoke"], "foes_allies", "within_2_spaces_foe"))

    if "resSmokeSe" in atkSkills and atkAlive: atkPostCombatEffs[UNCONDITIONAL].append(("debuff_res", atkSkills["resSmokeSe"], "foes_allies", "within_2_spaces_foe"))
    if "resSmokeSe" in defSkills and defAlive: defPostCombatEffs[UNCONDITIONAL].append(("debuff_res", defSkills["resSmokeSe"], "foes_allies", "within_2_spaces_foe"))

    if "defResSmoke" in atkSkills and atkAlive:
        atkPostCombatEffs[UNCONDITIONAL].append(("debuff_def", 7, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[UNCONDITIONAL].append(("debuff_res", 7, "foe_and_foes_allies", "within_2_spaces_foe"))
        atkPostCombatEffs[UNCONDITIONAL].append(("buff_atk", 6, "self_and_allies", "within_2_spaces_self"))
        atkPostCombatEffs[UNCONDITIONAL].append(("status", Status.Pathfinder, "self", "one"))

    if "defResSmoke" in defSkills and defAlive:
        defPostCombatEffs[UNCONDITIONAL].append(("debuff_def", 7, "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[UNCONDITIONAL].append(("debuff_res", 7, "foe_and_foes_allies", "within_2_spaces_foe"))
        defPostCombatEffs[UNCONDITIONAL].append(("buff_atk", 6, "self_and_allies", "within_2_spaces_self"))
        defPostCombatEffs[UNCONDITIONAL].append(("status", Status.Pathfinder, "self", "one"))

    if "pulseSmoke" in atkSkills and atkAlive:
        if atkSkills["pulseSmoke"] == 1:
            area = "within_1_spaces_foe"
        else:
            area = "within_2_spaces_foe"

        atkPostCombatEffs[UNCONDITIONAL].append(("charge_sp", -1, "foe_and_foes_allies", area))

    if "pulseSmoke" in defSkills and defAlive and defSkills["pulseSmoke"] == 3:
        defPostCombatEffs[UNCONDITIONAL].append(("charge_sp", -1, "foe_and_foes_allies", "within_2_spaces_foe"))

    if "pulseSmog" in atkSkills and atkAlive:
        atkPostCombatEffs[UNCONDITIONAL].append(("debuff_atk", 7, "foe_and_foes_allies", "within_3_spaces_foe"))
        atkPostCombatEffs[UNCONDITIONAL].append(("status", Status.Guard, "foe_and_foes_allies", "within_3_spaces_foe"))
        atkPostCombatEffs[UNCONDITIONAL].append(("charge_sp", -1, "foe_and_foes_allies", "within_3_spaces_foe"))

    if "pulseSmog" in atkSkills and defAlive:
        defPostCombatEffs[UNCONDITIONAL].append(("debuff_atk", 7, "foe_and_foes_allies", "within_3_spaces_foe"))
        defPostCombatEffs[UNCONDITIONAL].append(("status", Status.Guard, "foe_and_foes_allies", "within_3_spaces_foe"))
        defPostCombatEffs[UNCONDITIONAL].append(("charge_sp", -1, "foe_and_foes_allies", "within_3_spaces_foe"))

    if "panicSmoke" in atkSkills and atkAlive:
        if atkSkills["panicSmoke"] == 1:
            area = "within_1_spaces_foe"
        else:
            area = "within_2_spaces_foe"

        atkPostCombatEffs[UNCONDITIONAL].append(("status", Status.Panic, "foe_and_foes_allies", area))

        if atkSkills["panicSmoke"] == 4:
            atkPostCombatEffs[UNCONDITIONAL].append(("debuff_omni", 3, "foe_and_foes_allies", area))
            atkPostCombatEffs[UNCONDITIONAL].append(("status", Status.FoePenaltyDoubler, "self_and_allies", "within_1_rows_cols_self"))


    if "panicSmoke" in defSkills and defAlive and defSkills["panicSmoke"] >= 3:
        defPostCombatEffs[UNCONDITIONAL].append(("status", Status.Panic, "foe_and_foes_allies", "within_2_spaces_foe"))

        if defSkills["panicSmoke"] == 4:
            defPostCombatEffs[UNCONDITIONAL].append(("debuff_omni", 3, "foe_and_foes_allies", "within_2_spaces_foe"))
            defPostCombatEffs[UNCONDITIONAL].append(("status", Status.FoePenaltyDoubler, "self_and_allies", "within_1_rows_cols_self"))

    if "fatalSmoke" in atkSkills and atkAlive:
        if atkSkills["fatalSmoke"] == 1:
            area = "within_1_spaces_foe"
        else:
            area = "within_2_spaces_foe"

        atkPostCombatEffs[UNCONDITIONAL].append(("status", Status.DeepWounds, "foe_and_foes_allies", area))

        if atkSkills["fatalSmoke"] == 4:
            atkPostCombatEffs[UNCONDITIONAL].append(("status", Status.NullMiracle, "foe_and_foes_allies", area))

    if "fatalSmoke" in defSkills and defAlive and defSkills["fatalSmoke"] >= 3:
        defPostCombatEffs[UNCONDITIONAL].append(("status", Status.DeepWounds, "foe_and_foes_allies", "within_2_spaces_foe"))

        if defSkills["fatalSmoke"] == 4:
            defPostCombatEffs[UNCONDITIONAL].append(("status", Status.NullMiracle, "foe_and_foes_allies", "within_2_spaces_foe"))

    # Wizened Breath (Base) - Bantu
    if "bantuBoost" in atkSkills and atkHPGreaterEqual25Percent and atkAlive:
        atkPostCombatEffs[UNCONDITIONAL].append(("debuff_omni", 6, "foe", "one"))

    if "bantuBoost" in defSkills and defHPGreaterEqual25Percent and defAlive:
        defPostCombatEffs[UNCONDITIONAL].append(("debuff_omni", 6, "foe", "one"))

    # Élivágar (Veronica)
    if "veronicaPanic" in atkSkills and atkAlive:
        atkPostCombatEffs[0].append(("status", Status.Panic, "foes_allies", "within_2_spaces_foe"))

    # Fire Emblem/Hero's Blood
    if "Fire Emblem" in atkSkills and atkr.special_triggered:
        atkPostCombatEffs[UNCONDITIONAL].append(("buff_omni", atkSkills["Fire Emblem"], "self_and_allies", "global"))

    if "Fire Emblem" in defSkills and defr.special_triggered:
        defPostCombatEffs[UNCONDITIONAL].append(("buff_omni", defSkills["Fire Emblem"], "self_and_allies", "global"))

    # Winds of Change - CH!Merric
    if "healingWinds" in atkSkills and atkr.special_triggered:
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", atkSkills["healingWinds"], "self_and_allies", "global"))

    if "healingWinds" in defSkills and atkr.special_triggered:
        defPostCombatEffs[UNCONDITIONAL].append(("heal", defSkills["healingWinds"], "self_and_allies", "global"))

    if "and a canto" in atkSkills and atkr.special_triggered:
        atkPostCombatEffs[UNCONDITIONAL].append(("status", Status.Canto1, "self", "one"))

    if "and a canto" in defSkills and defr.special_triggered:
        defPostCombatEffs[UNCONDITIONAL].append(("status", Status.Canto1, "self", "one"))

    # Holy-Knight Aura - L!Sigurd
    if "holyKnight" in atkSkills and atkr.special_triggered:
        atkPostCombatEffs[UNCONDITIONAL].append(("buff_atk", 6, "self_and_allies", "global"))
        atkPostCombatEffs[UNCONDITIONAL].append(("status", Status.MobilityUp, "self_and_allies", "global"))

    if "holyKnight" in defSkills and defr.special_triggered:
        defPostCombatEffs[UNCONDITIONAL].append(("buff_atk", 6, "self_and_allies", "global"))
        defPostCombatEffs[UNCONDITIONAL].append(("status", Status.MobilityUp, "self_and_allies", "global"))

    if "holyKnightII" in atkSkills and atkr.special_triggered:
        atkPostCombatEffs[UNCONDITIONAL].append(("buff_atk", 6, "self_and_allies", "global"))
        atkPostCombatEffs[UNCONDITIONAL].append(("buff_def", 6, "self_and_allies", "global"))
        atkPostCombatEffs[UNCONDITIONAL].append(("status", Status.MobilityUp, "self_and_allies", "global"))
        atkPostCombatEffs[UNCONDITIONAL].append(("status", Status.FirstReduce40, "self_and_allies", "global"))

    if "holyKnightII" in defSkills and defr.special_triggered:
        defPostCombatEffs[UNCONDITIONAL].append(("buff_atk", 6, "self_and_allies", "global"))
        defPostCombatEffs[UNCONDITIONAL].append(("buff_def", 6, "self_and_allies", "global"))
        defPostCombatEffs[UNCONDITIONAL].append(("status", Status.MobilityUp, "self_and_allies", "global"))
        defPostCombatEffs[UNCONDITIONAL].append(("status", Status.FirstReduce40, "self_and_allies", "global"))

    # Chivalric Aura - T!Sigurd
    if "chivalricAura" in atkSkills and atkr.special_triggered:
        atkPostCombatEffs[UNCONDITIONAL].append(("buff_atk", 6, "self_and_allies", "global"))
        atkPostCombatEffs[UNCONDITIONAL].append(("status", Status.MobilityUp, "self_and_allies", "global"))

    if "chivalricAura" in defSkills and defr.special_triggered:
        defPostCombatEffs[UNCONDITIONAL].append(("buff_atk", 6, "self_and_allies", "global"))
        defPostCombatEffs[UNCONDITIONAL].append(("status", Status.MobilityUp, "self_and_allies", "global"))

    # Great Aether - E!Ike
    if "AETHER_GREAT" in atkSkills and atkr.special_triggered:
        X = min(len(atkFoeWithin3RowsCols) * 5 + 10, trunc(0.50 * atkStats[HP]))

        atkPostCombatEffs[UNCONDITIONAL].append(("damage", 5, "foe_and_foes_allies", "within_3_rows_cols_self"))
        atkPostCombatEffs[UNCONDITIONAL].append(("heal", X, "self", "one"))

    if "AETHER_GREAT" in defSkills and defr.special_triggered:
        X = min(len(defFoeWithin3RowsCols) * 5 + 10, trunc(0.50 * defStats[HP]))

        defPostCombatEffs[UNCONDITIONAL].append(("damage", 5, "foe_and_foes_allies", "within_3_rows_cols_self"))
        defPostCombatEffs[UNCONDITIONAL].append(("heal", X, "self", "one"))

    # Connected World - H!Askr
    if "connectedWorld" in atkSkills and atkAllyWithin3Spaces and attacker.specialMax == atkFinalSpCount:
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    if "connectedWorld" in defSkills and defAllyWithin3Spaces and defender.specialMax == defFinalSpCount:
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    if "connectedWorld_f" in atkSkills and attacker.specialMax == atkFinalSpCount:
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", atkSkills["connectedWorld_f"], "self", "one"))

    if "connectedWorld_f" in defSkills and defender.specialMax == defFinalSpCount:
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", defSkills["connectedWorld_f"], "self", "one"))

    # Hungry Cat Fang - H!Lethe
    if "hLetheBoost" in atkSkills and atkHPGreaterEqual25Percent and attacker.specialMax == atkFinalSpCount:
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    if "hLetheBoost" in defSkills and defHPGreaterEqual25Percent and defender.specialMax == defFinalSpCount:
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    # Opposing Stones - H!Nagi
    if "hNagiBoost" in atkSkills and defHPGreaterEqual75Percent and attacker.specialMax == atkFinalSpCount:
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    if "hNagiBoost" in defSkills and defender.specialMax == defFinalSpCount:
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    if "hNahBoost" in atkSkills and atkAllyWithin3Spaces and attacker.specialMax == atkFinalSpCount:
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    if "hNahBoost" in defSkills and defAllyWithin3Spaces and defender.specialMax == defFinalSpCount:
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    # Icy Ravager - WI!Fomortiis
    if "satanSavesChristmas" in atkSkills and defHPGreaterEqual75Percent and attacker.specialMax == atkFinalSpCount:
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    if "satanSavesChristmas" in defSkills and defender.specialMax == defFinalSpCount:
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    # Spirit Forest Writ (Refine Eff) - L!Deirdre
    if "Jovial Merryment" in atkSkills and attacker.specialMax == atkFinalSpCount:
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    if "Jovial Merryment" in defSkills and defAllyWithin3Spaces and defender.specialMax == defFinalSpCount:
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    # Wandering Horn - Meliai
    if "meliaiBoost" in atkSkills and atkHPGreaterEqual25Percent:
        atkPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    if "meliaiBoost" in defSkills:
        defPostCombatEffs[UNCONDITIONAL].append(("sp_charge", 1, "self", "one"))

    atkFEHMathAtk = atkStats[ATK]
    defFEHMathAtk = defStats[ATK]

    if atkr.effective: atkFEHMathAtk += trunc(atkFEHMathAtk * 0.5)

    if atkr.triangle_advantage > 0:
        atkFEHMathAtk += trunc(atkFEHMathAtk * atkr.triangle_advantage)
    elif atkr.triangle_advantage < 0:
        atkFEHMathAtk -= trunc(atkFEHMathAtk * atkr.triangle_advantage * -1)

    if defr.effective: defFEHMathAtk += trunc(defFEHMathAtk * 0.5)

    if defr.triangle_advantage > 0:
        defFEHMathAtk += trunc(defFEHMathAtk * defr.triangle_advantage)
    elif defr.triangle_advantage < 0:
        defFEHMathAtk -= trunc(defFEHMathAtk * defr.triangle_advantage * -1)

    atkFEHMathDef = atkStats[atkTargetingDefRes + 3]
    defFEHMathDef = defStats[defTargetingDefRes + 3]

    if atkr.defensive_terrain:
        atkFEHMathDef += trunc(defFEHMathDef * 0.3)

    if defr.defensive_terrain:
        defFEHMathDef += trunc(defFEHMathDef * 0.3)

    atkFehMath = min(max(atkFEHMathAtk - defFEHMathDef, 0) + atkr.true_all_hits, 99)
    defFehMath = min(max(defFEHMathAtk - atkFEHMathDef, 0) + defr.true_all_hits, 99)

    if attacker.getWeaponType() == "Staff" and (not atkr.wrathful_staff or defr.disable_foe_wrathful):
        atkFehMath = atkFehMath // 2

    if defender.getWeaponType() == "Staff" and (not defr.wrathful_staff or atkr.disable_foe_wrathful):
        defFehMath = defFehMath // 2

    atkHitCount = startString2.count("A")
    defHitCount = startString2.count("D")

    return atkHPCur, defHPCur, atkCombatBuffs, defCombatBuffs, wpnAdvHero, atkr.effective, defr.effective, attackList, atkFehMath, atkHitCount, \
        defFehMath, defHitCount, atkPostCombatEffs[0], defPostCombatEffs[0], burn_damages, precombat_heals


# Get AOE damage from attacker to foe

def get_AOE_damage(attacker, defender, spaces_moved_by_atkr):
    atkSkills = attacker.getSkills()
    atkStats = attacker.getStats()

    defSkills = defender.getSkills()
    defStats = defender.getStats()

    atkPhantomStats = [0] * 5
    defPhantomStats = [0] * 5

    if "phantomSpd" in atkSkills: atkPhantomStats[SPD] += atkSkills["phantomSpd"]
    if "phantomRes" in atkSkills: atkPhantomStats[RES] += atkSkills["phantomRes"]
    if "phantomSpd" in defSkills: defPhantomStats[SPD] += defSkills["phantomSpd"]
    if "phantomRes" in defSkills: defPhantomStats[RES] += defSkills["phantomRes"]

    # common HP-based conditions
    atkHPGreaterEqual25Percent = attacker.HPcur / atkStats[HP] >= 0.25
    atkHPGreaterEqual50Percent = attacker.HPcur / atkStats[HP] >= 0.50
    atkHPGreaterEqual75Percent = attacker.HPcur / atkStats[HP] >= 0.75
    atkHPEqual100Percent = attacker.HPcur == atkStats[HP]

    defHPGreaterEqual25Percent = defender.HPcur / defStats[HP] >= 0.25
    defHPGreaterEqual50Percent = defender.HPcur / defStats[HP] >= 0.50
    defHPGreaterEqual75Percent = defender.HPcur / defStats[HP] >= 0.75
    defHPEqual100Percent = defender.HPcur == defStats[HP]

    # Easy Method
    def allies_within_n(unit, tile, n):
        unit_list = tile.unitsWithinNSpaces(n)
        returned_list = []

        for x in unit_list:
            if unit.isAllyOf(x):
                returned_list.append(x)

        return returned_list

    atkAllAllies = allies_within_n(attacker, attacker.attacking_tile, 25)
    defAllAllies = allies_within_n(defender, defender.tile, 25)

    # Panic Status Effect
    AtkPanicFactor = 1
    DefPanicFactor = 1

    # buffs + debuffs calculation
    # throughout combat, PanicFactor * buff produces the current buff value
    if Status.Panic in attacker.statusNeg: AtkPanicFactor *= -1
    if Status.Panic in defender.statusNeg: DefPanicFactor *= -1

    if Status.NullPanic in attacker.statusPos: AtkPanicFactor = 1
    if Status.NullPanic in defender.statusPos: DefPanicFactor = 1

    atkStats[ATK] += attacker.buffs[ATK] * AtkPanicFactor + attacker.debuffs[ATK]
    atkStats[SPD] += attacker.buffs[SPD] * AtkPanicFactor + attacker.debuffs[SPD]
    atkStats[DEF] += attacker.buffs[DEF] * AtkPanicFactor + attacker.debuffs[DEF]
    atkStats[RES] += attacker.buffs[RES] * AtkPanicFactor + attacker.debuffs[RES]

    defStats[ATK] += defender.buffs[ATK] * DefPanicFactor + defender.debuffs[ATK]
    defStats[SPD] += defender.buffs[SPD] * DefPanicFactor + defender.debuffs[SPD]
    defStats[DEF] += defender.buffs[DEF] * DefPanicFactor + defender.debuffs[DEF]
    defStats[RES] += defender.buffs[RES] * DefPanicFactor + defender.debuffs[RES]

    # Atk Stat
    atkr_atk = atkStats[ATK]

    atk_hexblade = False
    def_disable_foe_hexblade = False

    # Hexblade Skills/Status
    if "permHexblade" in atkSkills or Status.Hexblade in attacker.statusPos:
        atk_hexblade = True

    # Ladyblade - Valentia Palla
    if "valentiaPallaBoost" in atkSkills:
        atk_hexblade = True

    if "thNinaBoost" in atkSkills:
        atkr.hexblade = True

    # Hexblade in Dragonstones
    if attacker.getTargetedDef() == 0 and not "oldDragonstone" in atkSkills:
        atk_hexblade = True

    # Disable Hexblade
    if "disableFoeHexblade" in defSkills or "mysticBoost" in defSkills:
        def_disable_foe_hexblade = True

    if "LDeirdreBoost" in defSkills and allies_within_n(defender, defender.tile, 3):
        def_disable_foe_hexblade = True

    # Which defense are we targeting?
    if attacker.getTargetedDef() == -1:
        atkTargetingDefRes = 0
    else:
        atkTargetingDefRes = 1

    # Directly targeting Res
    if ("helMiracle" in atkSkills or "helBoost" in atkSkills) and not (defender.wpnType in MAGICAL_WEAPONS + ["Staff"]):
        atkTargetingDefRes = 1

    if atk_hexblade and not def_disable_foe_hexblade:
        atkTargetingDefRes = int(defStats[DEF] < defStats[RES])

    defensive_terrain = False

    if defender.tile and defender.tile.is_def_terrain == 1 and "You get NOTHING" not in atkSkills and "You get NOTHING" not in defSkills:
        defensive_terrain = True

    if defensive_terrain:
        defr_def = math.ceil(defStats[3 + atkTargetingDefRes] * 1.3)
    else:
        defr_def = defStats[3 + atkTargetingDefRes]

    power_int = atkSkills["aoe_power"]

    true_damage = 0

    if attacker.transformed:
        if "infantryBeastA" in atkSkills:
            true_damage += 10
        elif "infantryBeastB" in atkSkills:
            true_damage += 7

    if "SpdDmg" in atkSkills and atkStats[SPD] + atkPhantomStats[SPD] > defStats[SPD] + defPhantomStats[SPD]:
        difference = (atkStats[SPD] + atkPhantomStats[SPD]) - (defStats[SPD] + defPhantomStats[SPD])
        true_damage += min(math.trunc(difference * 0.1 * atkSkills["SpdDmg"]), atkSkills["SpdDmg"])

    if ("nyLetheBoost" in atkSkills or "nyLetheBoostPlus" in atkSkills) and atkStats[SPD] + atkPhantomStats[SPD] > defStats[SPD] + defPhantomStats[SPD]:
        difference = (atkStats[SPD] + atkPhantomStats[SPD]) - (defStats[SPD] + defPhantomStats[SPD])
        true_damage += min(math.trunc(difference * 0.7), 7)

    if ("nySelkieBoost" in atkSkills or "nySelkieRefine" in atkSkills) and atkStats[RES] + atkPhantomStats[RES] > defStats[RES] + defPhantomStats[RES]:
        difference = (atkStats[RES] + atkPhantomStats[RES]) - (defStats[RES] + defPhantomStats[RES])
        true_damage += min(math.trunc(difference * 0.7), 7)

    # NY!Kaden
    if "nyKadenBoost" in atkSkills and defHPGreaterEqual75Percent and atkStats[SPD] + atkPhantomStats[SPD] > defStats[SPD] + defPhantomStats[SPD]:
        difference = (atkStats[SPD] + atkPhantomStats[SPD]) - (defStats[SPD] + defPhantomStats[SPD])
        true_damage += min(math.trunc(difference * 0.7), 7)

    if "nyKadenRefine" in atkSkills and (defHPGreaterEqual75Percent or attacker.transformed):
        true_damage += trunc(0.20 * atkStats[SPD])

    # NY!Keaton
    if "nyKeatonBoost" in atkSkills and defHPGreaterEqual75Percent and atkStats[DEF] + atkPhantomStats[DEF] > defStats[DEF] + defPhantomStats[DEF]:
        difference = (atkStats[DEF] + atkPhantomStats[DEF]) - (defStats[DEF] + defPhantomStats[DEF])
        true_damage += min(math.trunc(difference * 0.7), 7)

    # Ninja Naginata/Ninja Yumi/Shuriken Cleaven
    if "ninjaDmg" in atkSkills and atkStats[SPD] + atkPhantomStats[SPD] > defStats[SPD] + defPhantomStats[SPD]:
        difference = (atkStats[SPD] + atkPhantomStats[SPD]) - (defStats[SPD] + defPhantomStats[SPD])
        true_damage += min(math.trunc(difference * 0.5), 4)

    # NI!Corrin
    if "niCorrinDmg" in atkSkills and atkStats[SPD] + atkPhantomStats[SPD] > defStats[SPD] + defPhantomStats[SPD]:
        difference = (atkStats[SPD] + atkPhantomStats[SPD]) - (defStats[SPD] + defPhantomStats[SPD])
        true_damage += min(math.trunc(difference * 0.7), 7)

    # P!Est
    if "triEdge" in atkSkills:
        true_damage += trunc(defStats[RES] * 0.20)

    # DE!Linde
    if "deLindeBoost" in atkSkills:
        true_damage += trunc(atkStats[SPD] * 0.20)

    # Ladyblade - Valentia Palla
    if "valentiaPallaBoost" in atkSkills:
        true_damage += trunc(atkStats[DEF] * 0.20)

    # L!Alm
    if "lunaArcDmg" in atkSkills or "refineArcDmg" in atkSkills:
        true_damage += trunc(defStats[DEF] * 0.25)

    # Kliff
    if "kliffBoostRefine" in atkSkills and defStats[ATK] + defPhantomStats[ATK] > atkStats[ATK] + atkPhantomStats[ATK]:
        true_damage += trunc(defStats[ATK] * 0.15)

    # Python
    if "pythonBoost" in atkSkills and attacker.HPcur / atkStats[HP] >= 0.25:
        true_damage += 7

    # L!Celica
    if "LCelicaBoost" in atkSkills or "LCelicaRefineBoost" in atkSkills:
        true_damage += trunc(defStats[RES] * 0.25)

    # A!Celica
    if "aCelicaBoost" in atkSkills:
        true_damage += trunc(defStats[ATK] * 0.10)

    # Arcane Medusa
    if "arcaneMedusa" in atkSkills and atkHPGreaterEqual25Percent:
        true_damage += trunc(defStats[ATK] * 0.15)

    # E!Sigurd
    if "eSigurdBoost" in atkSkills:
        true_damage += trunc(atkStats[DEF] * 0.20)

    # Sigurd Ring
    if "provide for us" in atkSkills:
        true_damage += min(spaces_moved_by_atkr, 4) * 2

    # Ares
    if "DRINK" in atkSkills and defender.HPcur / defStats[HP] >= 0.75:
        true_damage += 7

    # A!Ced
    if "ascCedBoost" in atkSkills and atkHPGreaterEqual25Percent:
        true_damage += trunc(atkStats[SPD] * (0.20 + 0.10 * attacker.specialMax))

    # Leif
    if "thraciaMoment" in atkSkills and defStats[DEF] >= defStats[RES] + 5:
        true_damage += 7

    # L!Leif
    if "leifWhyDoesHeHaveAOEDamageOnThis" in atkSkills:
        true_damage += trunc(defStats[ATK] * 0.10)

    # L!Nanna
    if "hoðrsZeal" in atkSkills:
        true_damage += trunc(atkStats[ATK] * 0.20)

    # Eyvel
    if "sword wow!" in atkSkills and attacker.HPcur / atkStats[HP] >= 0.25:
        true_damage += trunc(atkStats[DEF] * 0.15)

    # Tanya
    if "tanyaBoost" in atkSkills and attacker.HPcur / atkStats[HP] >= 0.25:
        true_damage += trunc(atkStats[SPD] * 0.10)

    # Arcane Renegade
    if "renegade" in atkSkills and atkHPGreaterEqual25Percent:
        true_damage += trunc(atkStats[ATK] * 0.15)

    # Machyua
    if "hotBlooded" in atkSkills and defHPGreaterEqual75Percent:
        true_damage += trunc(atkStats[SPD] * 0.20)

    # L!Lilina
    if "AOEqueen" in atkSkills:
        true_damage += trunc(atkStats[RES] * 0.15)

    # BR!Lilina
    if "brLilinaBoost" in atkSkills:
        true_damage += trunc(atkStats[RES] * 0.10)

    # Arcane Truthfire
    if "truthfire" in atkSkills:
        true_damage += trunc(atkStats[ATK] * 0.15)

    # Arcane Hexbow
    if "hexbow" in atkSkills and atkHPGreaterEqual25Percent:
        true_damage += trunc(atkStats[ATK] * 0.15)

    # BR!Shanna
    if "brShannaBoost" in atkSkills:
        true_damage += trunc(atkStats[SPD] * 0.20)

    # TH!Cath
    if "thCathBoost" in atkSkills and defHPGreaterEqual50Percent:
        true_damage += trunc(atkStats[SPD] * 0.15)

    # Igrene
    if "igreneBoost" in atkSkills:
        true_damage += trunc(atkStats[SPD] * 0.10)

    # Noah
    if "insert Xenoblade 3 thingy" in atkSkills and len(allies_within_n(attacker, attacker.attacking_tile, 1)) <= 1:
        true_damage += trunc(defStats[ATK] * 0.15)

    # DE!Igrene
    if "deIgreneBoost" in atkSkills:
        atkr.true_sp += trunc(((attacker.specialMax * 10 + 10) / 100) * atkStats[SPD]) + trunc(atkStats[ATK] * 0.15)

    # L!Eliwood
    if "hamburger" in atkSkills:
        true_damage += math.trunc(defStats[DEF] * 0.15)

    # Swift Mulagir (Refine Eff) - L!Lyn
    if "i got her from my first AHR summon and foddered her immediately" in atkSkills:
        true_damage += trunc(atkStats[SPD] * 0.15)

    # A!Florina
    if "aFlorinaBoost" in atkSkills and atkAllyWithin3Spaces:
        true_damage += trunc(atkStats[SPD] * 0.15)

    # Dryblade Lance (Base) - DE!Karla
    if "hey squidward" in atkSkills and atkHPGreaterEqual25Percent:
        true_damage += trunc(atkStats[SPD] * (0.20 + 0.10 * attacker.specialMax))

    # Arcane Sly Knife
    if "slyKnife" in atkSkills and atkHPGreaterEqual25Percent:
        true_damage += trunc(atkStats[ATK] * 0.15)

    # R!Leila
    if "darkPerfume" in atkSkills and atkHPGreaterEqual25Percent:
        true_damage += trunc(atkStats[SPD] * 0.20)

    # Dryblade Lance (Base) - DE!Karla
    if "DK, are you gonna eat BK after you win this?" in atkSkills:
        true_damage += trunc(atkStats[SPD] * (0.20 + 0.10 * attacker.specialMax))

    # FA!Linus
    if "He's eating unlimited burgers" in atkSkills and atkHPGreaterEqual25Percent:
        true_damage += trunc(atkStats[ATK] * 0.10)

    # FA!Ursula
    if "faUrsulaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        true_damage += trunc(atkStats[SPD] * 0.20)

    # Legault
    if "ghetsis holding a ducklett" in atkSkills and atkHPGreaterEqual25Percent and atkStats[SPD] + atkPhantomStats[SPD] > defStats[SPD] + defPhantomStats[SPD]:
        true_damage += 5

    # B!Eirika
    if "moonlightBangle" in atkSkills:
        true_damage += trunc(defStats[DEF] * (0.20 + 0.10 * attacker.specialMax))

    # Ross
    if "hisFathersSonsFathersSonsFathersSons" in atkSkills:
        true_damage += trunc(attacker.HPcur * 0.15)

    # A!Joshua
    if "aJoshuaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        if not(attacker.attacking_tile.x_coord == defender.tile.x_coord or attacker.attacking_tile.y_coord == defender.tile.y_coord):
            true_damage += trunc(defStats[ATK] * 0.15)

    # Naesala
    if "naesalaBoost" in atkSkills:
        true_damage += trunc(atkStats[SPD] * 0.15)

    # NY!Kyza
    if "nyKyzaBoost" in atkSkills and defHPGreaterEqual75Percent and atkStats[DEF] + atkPhantomStats[DEF] > defStats[DEF] + defPhantomStats[DEF]:
        true_damage += 5

    # NY!Lyre
    if "nyLyreBoost" in atkSkills and defHPGreaterEqual75Percent and atkStats[SPD] + atkPhantomStats[SPD] > defStats[SPD] + defPhantomStats[SPD]:
        true_damage += 5

    # Altina
    if "newChosen" in atkSkills and (all([ally.wpnType in DRAGON_WEAPONS + BEAST_WEAPONS for ally in allies_within_n(attacker, attacker.attacking_tile, 1)]) or defender.HPcur / defStats[HP] >= 0.75):
        if atkStats[RES] + atkPhantomStats[RES] > defStats[RES] + defPhantomStats[RES]:
            true_damage += min(math.trunc(((atkStats[RES] + atkPhantomStats[RES]) - (defStats[RES] + defPhantomStats[RES])) * 0.7), 7)

    # R!F!Grima
    if "arcaneGrima" in atkSkills and atkHPGreaterEqual25Percent:
        true_damage += trunc(atkStats[ATK] * 0.15)

    # Gaius
    if "gaius_damage_ref" in atkSkills and defStats[HP] == defender.HPcur:
        true_damage += 7

    # Libra
    if "libraDebuff" in atkSkills:
        true_damage += 7

    # Panne
    if "panneStuff" in atkSkills and atkSkills and attacker.HPcur / atkStats[HP] >= 0.25 and (atkStats[SPD] + atkPhantomStats[SPD]) - (defStats[SPD] + defPhantomStats[SPD]) >= 5:
        true_damage += 7

    # Yarne
    if "yarneBoost" in atkSkills and defender.HPcur / defStats[HP] >= 0.50:
        true_damage += trunc(atkStats[SPD] * 0.10)

    # H!Nah
    if "hNahBoost" in atkSkills and allies_within_n(attacker, attacker.attacking_tile, 3):
        X = max(8, min(attacker.HPcur - defender.HPcur, 16))

        true_damage += X

    # BR!Anna
    if "brAnnaBoost" in atkSkills:
        true_damage += trunc(atkStats[SPD] * 0.15)

    # Gangrel
    if ("levinDagger" in atkSkills and defender.hasPenalty()) or ("gangrelBoost" in atkSkills and (attacker.hasBonus() or defender.hasPenalty())):
        true_damage += trunc(atkStats[RES] * 0.20)

    # You figure it out
    if "I'm Shigure" in atkSkills:
        true_damage += 7

    # L!Ryoma
    if "bushidoII" in atkSkills:
        true_damage += 7

    # L!Hinoka
    if "LHinokaBoost" in atkSkills and atkHPGreaterEqual25Percent:
        true_damage += trunc(atkStats[SPD] * 0.20)

    # AD!Camilla
    if "I should be studying for my finals lol" in atkSkills and attacker.HPcur / atkStats[HP] >= 0.25:
        true_damage += trunc(atkStats[ATK] * 0.15)

    # Kaze
    if "he kinda sounds like Joker Persona 5" in atkSkills and attacker.HPcur / atkStats[HP] >= .25 and atkStats[SPD] + atkPhantomStats[SPD] > defStats[SPD] + defPhantomStats[SPD]:
        true_damage += 5

    # NY!Keaton
    if "nyKeatonRefine" in atkSkills and defHPGreaterEqual75Percent:
        true_damage += trunc(atkStats[DEF] * 0.20)

    # Charlotte
    if "charlotteBoost" in atkSkills:
        true_damage += trunc(atkStats[ATK] * 0.15)

    # Edelgard
    if "another 3 years" in atkSkills:
        true_damage += trunc(atkStats[ATK] * 0.10)

    # L!Edelgard
    if "AIIIIMURRRRR" in atkSkills and (defender.HPcur / defStats[HP] >= 0.75 or not allies_within_n(attacker, attacker.attacking_tile, 2)):
        true_damage += trunc(atkStats[ATK] * 0.15)

    # Dimitri
    if "of fire emblem" in atkSkills:
        true_damage += trunc(atkStats[ATK] * 0.10)

    # Arcane Crest
    if "arcaneCrest" in atkSkills and atkHPGreaterEqual25Percent:
        true_damage += trunc(atkStats[ATK] * 0.15)

    # Ingrid
    if "I'm running out of tags to give these things" in atkSkills:
        true_damage += trunc(atkStats[SPD] * 0.20)

    if "ingridBoost" in atkSkills:
        true_damage += trunc(atkStats[SPD] * 0.20) * 2

    # Arcane Lúin
    if "when the weapon that slowly kills you if you lack a crest can be given to everyone bottom text" in atkSkills and atkHPGreaterEqual25Percent:
        true_damage += trunc(atkStats[SPD] * 0.20)

    # B!Felix
    if "lone_wolf" in atkSkills and (atkHPGreaterEqual25Percent or len(allies_within_n(attacker, attacker.attacking_tile, 1)) <= 1):
        true_damage += trunc(atkStats[SPD] * 0.20)

    # B!Marianne
    if "Goddess, forgive me…" in atkSkills and atkHPGreaterEqual25Percent:
        true_damage += trunc(atkStats[SPD] * 0.20)

    # Arcane Blutgang
    if "arcaneBlutgang" in atkSkills and atkHPGreaterEqual25Percent:
        true_damage += trunc(atkStats[ATK] * 0.15)

    # R!Marianne
    if "requiemPrayer" in defSkills and defPhantomStats[RES] > atkPhantomStats[RES]:
        aoe_damage_reduction.append((4 - defender.specialCount) * min(defPhantomStats[RES] - atkPhantomStats[RES], 10))

    # L!Yuri
    if "LYuriBoost" in atkSkills:
        true_damage += trunc(atkStats[SPD] * 0.20)

    # SU!Hapi
    if "suHapiBoost" in atkSkills:
        true_damage += trunc(atkStats[SPD] * 0.20)

    # Cyril
    if "cyrilBoost" in atkSkills and atkHPGreaterEqual25Percent:
        true_damage += trunc(atkStats[SPD] * 0.20)

    # V!Rhea
    if "pureDragonWall" in atkSkills and defHPGreaterEqual75Percent:
        if attacker.unitCombatInitiates == 0:
            true_damage += trunc(atkStats[RES] * 0.30)
        else:
            true_damage += trunc(atkStats[RES] * 0.20)

    # Arval
    if "arvalBoost" in atkSkills:
        true_damage += trunc(atkStats[RES] * 0.20)

    # Citrinne
    if "citrinneBoost" in atkSkills and atkHPGreaterEqual25Percent:
        true_damage += trunc(atkStats[RES] * 0.15)

    # Arcane Fell Arts
    if "arcaneFellArts" in atkSkills and atkHPGreaterEqual25Percent:
        true_damage += trunc(atkStats[ATK] * 0.15)

    # NY!Alfonse
    if "newAlfonseGuy" in atkSkills and allies_within_n(attacker, attacker.attacking_tile, 3):
        true_damage += trunc(atkStats[SPD] * 0.15)

    # Melíai
    if "meliaiBoost" in atkSkills and atkHPGreaterEqual25Percent:
        true_damage += trunc(atkStats[DEF] * 0.20)

    # H!Askr
    if "hAskrBoost" in atkSkills and defHPGreaterEqual75Percent:
        true_damage += trunc(atkStats[DEF] * 0.20)

    # Ylgr
    if "ylgrMoreBoost" in atkSkills and (atkStats[SPD] + atkPhantomStats[SPD] > defStats[SPD] + defPhantomStats[SPD] or defender.HPcur / defStats[HP] >= 0.75):
        true_damage += trunc(atkStats[SPD] * 0.15)

    # Hel
    if "DEATH" in atkSkills and (attacker.HPcur / atkStats[HP] >= .25 or defender.hasPenalty()):
        true_damage += trunc(atkStats[SPD] * 0.20)

    # Arcane Euphoria
    if "euphoriaBros" in atkSkills and atkHPGreaterEqual25Percent:
        true_damage += trunc(atkStats[ATK] * 0.15)

    # Arcane Nihility
    if "curseOfNihility" in atkSkills and atkHPGreaterEqual25Percent:
        true_damage += trunc(atkStats[SPD] * 0.15)

    # Niðavellir
    if "niðavellirBoost" in atkSkills and atkHPGreaterEqual25Percent:
        true_damage += trunc(atkStats[SPD] * 0.20)

    # Arcane Giant Axe
    if "giantAxe" in atkSkills and atkHPGreaterEqual25Percent:
        true_damage += trunc(atkStats[ATK] * 0.15)

    # Seiðr
    if "seiðrBoost" in atkSkills:
        true_damage += trunc(atkStats[RES] * 0.20)

    # NY!Heiðrún
    if "newYearTreats" in atkSkills and atkHPGreaterEqual25Percent:
        true_damage += trunc(atkStats[RES] * 0.20)

    # General Special Damage
    if "spDamageAdd" in atkSkills:
        true_damage += atkSkills["spDamageAdd"]

    # Heavy Blade 4
    if "heavyBladeDmg" in atkSkills and atkStats[ATK] + atkPhantomStats[ATK] > defStats[ATK] + defPhantomStats[ATK]:
        true_damage += 5

    # Flashing Blade 4
    if "flashingBladeDmg" in atkSkills and atkStats[SPD] + atkPhantomStats[SPD] > defStats[SPD] + defPhantomStats[SPD]:
        true_damage += 5

    # Wrath
    if "wrathSk" in atkSkills and attacker.HPcur / atkStats[HP] <= atkSkills["wrathSk"] * 0.25:
        true_damage += 10

    if "wrathW" in atkSkills and attacker.HPcur / atkStats[HP] <= atkSkills["wrathW"] * 0.25:
        true_damage += 10

    if "spurnSk" in atkSkills and attacker.HPcur / atkStats[HP] <= atkSkills["spurnSk"] * 0.25:
        true_damage += 5

    if "spurn4" in atkSkills and attacker.HPcur / atkStats[HP] <= 0.75:
        true_damage += 5

    # Tier 4 Trace Skills
    if "traceDmg" in atkSkills:
        true_damage += 7

    if "traceEchoDmg" in atkSkills:
        true_damage += 3

    # Sly Blow Skills
    if "slyBlow" in atkSkills and (len(attacker.statusPos) >= 2 or len(defender.StatusNeg) >= 2):
        true_damage += 5

    if "slyEcho" in atkSkills and (len(attacker.statusPos) >= 2 or len(defender.StatusNeg) >= 2):
        true_damage += 5

    if Status.Exposure in defender.statusNeg:
        true_damage += 10

    if Status.Dominance in attacker.statusPos:
        true_damage += abs(defender.get_penalty_total())

    if Status.Treachery in attacker.statusPos and Status.Ploy not in attacker.statusNeg:
        true_damage += attacker.get_bonus_total()

    # AOE Damage Reduction
    aoe_damage_reduction = []
    stat_scaling_DR = []
    true_damage_reduction = 0

    if Status.Dodge in defender.statusPos:
        stat_scaling_DR.append((SPD, 40))

    if Status.AOEReduce80Percent in defender.statusPos:
        aoe_damage_reduction.append(80)

    if "dragonWall" in defSkills and defPhantomStats[RES] > atkPhantomStats[RES]:
        stat_scaling_DR.append((RES, defSkills["dragonWall"] * 10))

    if "dodgeSk" in defSkills and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        stat_scaling_DR.append((SPD, defSkills["dodgeSk"] * 10))

    if "dodgeW" in defSkills and defPhantomStats[SPD] > atkPhantomStats[SPD]:
        stat_scaling_DR.append((SPD, defSkills["dodgeW"] * 10))

    if "gambit" in defSkills and (defender.getSpecialType() != "Galeforce" and defender.getSpecialType() != "Healing"):
        increment = min(defSkills["gambit"], 3) * 3 + 1
        maximum = increment * 5

        aoe_damage_reduction.append(min(defender.specialMax * increment, maximum))

    if "magic_gambit" in defSkills and attacker.wpnType in RANGED_WEAPONS and (defSpTriggeredByAttack or defender.getSpecialType() == "Defense"):
        increment = min(defSkills["magic_gambit"], 3) * 3 + 1
        maximum = increment * 4

        aoe_damage_reduction.append(min((defender.specialMax - 1) * increment, maximum))

    if "vitalAstra" in atkSkills and defPhantomStats[SPD] > atkPhantomStats[SPD] and defender.specialCount == 0:
        stat_scaling_DR.append((SPD, 30))

    if "guardBearing4" in defSkills:
        if defender.unitCombatInitiates == 0:
            aoe_damage_reduction.append(60)
        else:
            aoe_damage_reduction.append(30)

    # Potent
    if "potentDR" in defSkills:
        aoe_damage_reduction.append(defSkills["potentDR"])

    # Divine Vein Stone
    if defender.tile.divine_vein == DV_STONE and defender.tile.divine_vein_turn >= 1 and defender.tile.divine_vein_side == defender.side:
        aoe_damage_reduction.append(50)

    # Believe in Love?
    if "doYouBelieveInLove?" in defSkills:
        stat_scaling_DR.append((SPD, 50))

        X = max(sum(defender.buffs), max([ally.get_bonus_total() for ally in defAllyWithin2Spaces], default=0))

        if attacker.move == 1 or attacker.move == 3:
            true_damage_reduction += X
        else: # i dunno if this bottom part is applied or not
            true_damage_reduction += trunc(0.40 * X)

    # Gharnef
    if "gharnefBoost" in defSkills and defender.HPcur / defStats[HP] >= 0.25 and attacker.wpnType not in TOME_WEAPONS:
        aoe_damage_reduction.append(30)

    # Medeus
    if "assuredRebirth" in defSkills:
        def_total = defStats[RES] + defPhantomStats[RES]
        atk_total = atkStats[RES] + atkPhantomStats[RES]

        num_target_allies = len([ally for ally in allies_within_n(defender, defender.tile, 3) if ally.wpnType in DRAGON_WEAPONS + ["Staff"]])

        if def_total > atk_total:
            aoe_damage_reduction.append(min(min(4 * (def_total - atk_total), 40) + (num_target_allies * 20), 60))

    # B!A!Tiki
    if "newDivinity" in defSkills and defHPGreaterEqual25Percent:
        stat_scaling_DR.append((RES, 40))

    # BR!A!Tiki
    if "brTikiBoost" in defSkills and defHPGreaterEqual25Percent:
        stat_scaling_DR.append((RES, 40))

    # A!Y!Tiki
    if "allTogether!" in defSkills and allies_within_n(defender, defender.tile, 2):
        aoe_damage_reduction.append(min(len(allies_within_n(defender, defender.tile, 2)) * 40, 80))

    # X!Y!Tiki
    if "lFoveForAll!" in defSkills and allies_within_n(defender, defender.tile, 3):
        aoe_damage_reduction.append(min(len(allies_within_n(defender, defender.tile, 3)) * 40, 80))

    # Nagi
    if "nagiAOEReduce" in defSkills or "nagiRefineBoost" in defSkills:
        aoe_damage_reduction.append(80)

    if "nagiReduction" in defSkills:
        stat_scaling_DR.append((RES, 40))

    # H!Nagi
    if "hNagiBoost" in defSkills:
        aoe_damage_reduction.append(80)

    # Conrad
    if "mmm melon collie" in defSkills and defender.HPcur / defStats[HP] >= 0.25:
        stat_scaling_DR.append((RES, 40))

    # L!Julia
    if "LJuliaRefineBoost" in atkSkills and (defStats[ATK] + defPhantomStats[ATK] > atkStats[DEF] + atkPhantomStats[DEF] or attacker.HPcur / atkStats[HP] >= 0.75):
        stat_scaling_DR.append((RES, 40))

    # Shannan
    if "balmungBoost3" in defSkills and defender.HPcur / defStats[HP] >= 0.25:
        stat_scaling_DR.append((SPD, 40))

    # DA!Sigurd
    if "antiMagicCup" in defSkills and attacker.wpnType in TOME_WEAPONS:
        aoe_damage_reduction.append(50)

    # FA!Julia
    if "juliaBelief" in defSkills and defender.HPcur / defStats[HP] >= 0.25:
        stat_scaling_DR.append((RES, 40))

    # Julius
    dragon_eff_strs = ["effDragon", "effDragonBeast", "nagiAOEReduce", "nagiRefineBoost"]

    if "juliusDebuffPlus" in defSkills and not (any(dragon_eff_strs == skill for skill in defSkills) or Status.EffDragons in attacker.statusPos):
        stat_scaling_DR.append((RES, 40))

    # Eyvel
    if "eyvelBlade" in defSkills:
        aoe_damage_reduction.append(30)

    # Ronan
    if "about half done, and there's still so many" in defSkills and allies_within_n(defender, defender.tile, 3):
        true_damage_reduction += 20

    # Arcane Renegade
    if "renegade" in defSkills:
        true_damage_reduction += trunc(0.15 * defStats[ATK])

    # Machyua
    if "hotBlooded" in defSkills:
        true_damage_reduction += trunc(0.20 * defStats[SPD])

    # Rutger
    if "like the university" in defSkills and defender.HPcur / defStats[HP] >= 0.25:
        stat_scaling_DR.append((SPD, 40))

    # SP!Fir
    if "refineFirNFU" in defSkills:
        stat_scaling_DR.append((SPD, 40))

    # SP!Idunn
    if "To your house? In 3D Land?" in defSkills:
        stat_scaling_DR.append((RES, 40))

    # B!Eliwood
    if "nininiRef" in defSkills and allies_within_n(defender, defender.tile, 2):
        stat_scaling_DR.append((SPD, 40))

    # Heath
    if "tepig" in defSkills and defender.HPcur / defStats[HP] >= 0.25:
        if defender.unitCombatInitiates == 0:
            aoe_damage_reduction.append(40)
        else:
            aoe_damage_reduction.append(20)

    # Legault
    if "ghetsis holding a ducklett" in defSkills:
        stat_scaling_DR.append((SPD, 30))

    # L!Eirika
    if "Just Lean" in defSkills and defender.HPcur / defStats[HP] >= 0.25:
        stat_scaling_DR.append((SPD, 40))

    # SP!Myrrh
    if "spMyrrhBoost" in defSkills:
        aoe_damage_reduction.append(40)

    # L!Myrrh
    if "LMyrrhBoost" in defSkills and allies_within_n(defender, defender.tile, 2):
        aoe_damage_reduction.append(30)

    if "LMyrrhRefine" in defSkills and allies_within_n(defender, defender.tile, 3):
        aoe_damage_reduction.append(40)

    # V!Myrrh
    if "myrrhLove" in defSkills:
        stat_scaling_DR.append((RES, 40))

    # FA!Lyon
    if ("colorlessAdvRanged" in defSkills or "colorlessAdvRefine" in defSkills) and attacker.wpnType in RANGED_WEAPONS:
        aoe_damage_reduction.append(80)

    # B!Soren
    if "bSorenBoost" in defSkills and allies_within_n(defender, defender.tile, 3):
        stat_scaling_DR.append((RES, 40))

    # SF!Nephenee
    if "sfNepheneeBoost" in atkSkills and attacker.HPcur != atkStats[HP]:
        true_damage += 10

    # CH!Ilyana
    if "chIlyanaBoost" in defSkills:
        stat_scaling_DR.append((RES, 40))

    # NY!Lethe
    if "nyLetheBoost" in defSkills or "nyLetheBoostPlus" in defSkills:
        stat_scaling_DR.append((SPD, 40))

    # NY!Selkie
    if "nySelkieBoost" in defSkills or "nySelkieRefine" in defSkills:
        stat_scaling_DR.append((RES, 40))

    # Caineghis
    if "cainDR" in defSkills:
        aoe_damage_reduction.append(70)

    # Altina
    if "newChosen" in defSkills and (all([ally.wpnType in DRAGON_WEAPONS + BEAST_WEAPONS for ally in allies_within_n(defender, defender.tile, 1)]) or attacker.HPcur / atkStats[HP] >= 0.75):
        stat_scaling_DR.append((RES, 40))

    # Yen'fay
    if "yen'fayBoost" in defSkills and not allies_within_n(defender, defender.tile, 1):
        stat_scaling_DR.append((SPD, 40))

    # L!F!Corrin
    if "primordia" in defSkills and defender.HPcur / defStats[HP] >= 0.25:
        aoe_damage_reduction.append(30)

    # L!M!Corrin
    if "dragonFangShot" in defSkills and defPhantomStats[RES] > atkPhantomStats[RES]:
        aoe_damage_reduction.append((4 - defender.specialCount) * min(defPhantomStats[RES] - atkPhantomStats[RES], 10))

    # CH!M!Corrin
    if "dragonFangFire" in defSkills and defPhantomStats[RES] > atkPhantomStats[RES]:
        aoe_damage_reduction.append((8 - defender.specialCount) * min(defPhantomStats[RES] - atkPhantomStats[RES], 10))

    # L!Ryoma
    if "bushidoII" in defSkills:
        stat_scaling_DR.append((SPD, 40))

    # L!Xander
    if "chivalry" in defSkills and atkHPGreaterEqual50Percent:
        aoe_damage_reduction.append(trunc(0.5 * defender.HPcur))

    if "chivalry" in defSkills:
        aoe_damage_reduction.append(50)

    # L!Dimitri
    if ("he can beat the guy from berserk" in defSkills or "LDimitriBoost" in defSkills) and defender.HPcur / defStats[HP] >= 0.25:
        stat_scaling_DR.append((SPD, 40))

    # Arcane Giant Axe
    if "arcaneCrest" in defSkills:
        true_damage_reduction += trunc(0.15 * defStats[ATK])

    # Felix
    if ">:(" in defSkills and defHPGreaterEqual25Percent:
        aoe_damage_reduction.append(30)

    if "lone_wolf" in defSkills and (defHPGreaterEqual25Percent or len(allies_within_n(defender, defender.tile, 1)) <= 1):
        true_damage_reduction += 2 * trunc(defStats[SPD] * 0.20)

    # Seiros
    if "seirosDragonWall" in defSkills and defHPGreaterEqual25Percent:
        stat_scaling_DR.append((RES, 40))

    # Rhea/FA!Rhea/V!Rhea
    if "trueDragonWall" in defSkills or "pureDragonWall" in defSkills:
        if defender.unitCombatInitiates == 0:
            stat_scaling_DR.append((RES, 60))
        else:
            stat_scaling_DR.append((RES, 40))

    # V!Rhea
    if "pureDragonWall" in defSkills:
        if defender.unitCombatInitiates == 0:
            true_damage_reduction += trunc(defStats[RES] * 0.30)
        else:
            true_damage_reduction += trunc(defStats[RES] * 0.20)

    # Nemesis
    if "DCSIYKYK" in defSkills:
        ally_count = 0

        for ally in defAllAllies:
            if ally.HPcur / ally.get_visible_stat(HP) >= 0.90:
                ally_count += 1

        if defender.unitCombatInitiates == 0:
            aoe_damage_reduction.append(min(15 * ally_count, 45))

    if "nemesisBoost" in defSkills:
        ally_count = 0

        for ally in defAllAllies:
            if ally.HPcur / ally.get_visible_stat(HP) >= 0.70:
                ally_count += 1

        if defender.unitCombatInitiates == 0:
            aoe_damage_reduction.append(min(25 * ally_count, 75))
        else:
            aoe_damage_reduction.append(min(15 * ally_count, 45))

    # M!Alear/F!Alear
    if "BONDS OF FIIIIRE, CONNECT US" in defSkills and defHPGreaterEqual25Percent:
        stat_scaling_DR.append((SPD, 40))

    # L!F!Alear
    if "ENGAGE!!!" in defSkills and defHPGreaterEqual25Percent:
        aoe_damage_reduction.append(40)

    # Lumera
    if "LOVE PROVIIIIDES, PROTECTS US" in defSkills and defHPGreaterEqual25Percent:
        stat_scaling_DR.append((SPD, 40))

    # Céline
    if "célineBoost" in defSkills:
        num_healthy_allies = len([ally for ally in allies_within_n(defender, defender.tile, 3) if ally.HPCur / ally.get_visible_stat(HP) >= 0.50])
        aoe_damage_reduction.append(min(15 * num_healthy_allies, 45))

    # Arcane Fell Arts
    if "arcaneFellArts" in defSkills and defHPGreaterEqual25Percent:
        true_damage_reduction += trunc(defStats[ATK] * 0.15)

    # Melíai
    if "meliaiBoost" in defSkills:
        true_damage_reduction += trunc(0.20 * defStats[DEF])

    # NY!Askr
    if "nyAskrBoost" in defSkills and defAllyWithin3Spaces and defStats[DEF] + defPhantomStats[DEF] > atkStats[DEF] + atkPhantomStats[DEF]:
        difference = (defStats[DEF] + defPhantomStats[DEF]) - (atkStats[DEF] + atkPhantomStats[DEF])
        true_damage_reduction += trunc(1.50 * difference)

    # H!Askr
    if "hAskrBoost" in defSkills:
        true_damage_reduction += trunc(0.20 * defStats[DEF])

    # NY!Elm
    if "nyElmBoost" in defSkills and not allies_within_n(defender, defender.tile, 1):
        aoe_damage_reduction.append(min(20 + 20 * len(allies_within_n(attacker, attacker.attacking_tile, 3)), 60))

    # SU!Ymir
    if "sparklingSun" in defSkills and allies_within_n(defender, defender.tile, 3):
        aoe_damage_reduction.append(75)

    # Freyr
    if "freyrBoost" in defSkills and defHPGreaterEqual25Percent:
        aoe_damage_reduction.append(30)

    # Freyja
    if "freyjaRefineBase" in defSkills or "freyjaRefineEff" in defSkills:
        stat_scaling_DR.append((SPD, 40))

    # SU!Freyja
    if "suFreyjaBoost" in defSkills and defHPGreaterEqual25Percent:
        stat_scaling_DR.append((SPD, 40))

    # Nótt
    if "moonTwinWing" in defSkills and defHPGreaterEqual25Percent:
        stat_scaling_DR.append((SPD, 40))

    if "moonTwinWingPlus" in defSkills and defHPGreaterEqual25Percent:
        stat_scaling_DR.append((SPD, 50))

    # Arcane Giant Axe
    if "giantAxe" in defSkills:
        true_damage_reduction += trunc(0.15 * defStats[ATK])

    # Apply stat-scaling DR
    for stat_type, stat_max in stat_scaling_DR:
        def_total = defStats[stat_type] + defPhantomStats[stat_type]
        atk_total = atkStats[stat_type] + atkPhantomStats[stat_type]

        if def_total > atk_total:
            aoe_damage_reduction.append(min(stat_max / 10 * (def_total - atk_total), stat_max))

    final_damage = 0

    if power_int == 0:
        final_damage = max(trunc(0.8 * (atkr_atk - defr_def)), 0) + true_damage
    elif power_int == 1:
        final_damage = max(atkr_atk - defr_def, 0) + true_damage
    elif power_int == 2:
        final_damage = max(trunc(1.5 * (atkr_atk - defr_def)), 0) + true_damage

    total_reduction = 1
    for x in aoe_damage_reduction:
        total_reduction *= 1 - (x / 100)

    rounded_DR = (trunc(total_reduction * 100)) / 100

    reduced_final_attack = max(math.ceil(final_damage * rounded_DR) - true_damage_reduction, 0)

    if "invincible" in defender.getSkills():
        reduced_final_attack = 0

    return reduced_final_attack

# FEH Math
# Atk - Def/Res + True Damage applied for all hits

# function should not deal damage to units/charge special/do post-combat things,
# these will be handled by wherever after the combat function is called

class Attack():
    def __init__(self, attackOwner, isFollowUp, isConsecutive, attackNumSelf, attackNumAll, prevAttack, potentRedu):
        self.attackOwner = attackOwner
        self.isFollowUp = isFollowUp
        self.isConsecutive = isConsecutive
        self.attackNumSelf = attackNumSelf
        self.attackNumAll = attackNumAll
        self.prevAttack = prevAttack

        self.isSpecial = False
        self.damage = -1
        self.spCharges = (-1, -1)
        self.curHPs = (-1, -1)
        self.healed = -1

        self.potentRedu = potentRedu

        self.is_finisher = False

    def impl_atk(self, isSpecial, damage, healed, spCharges, curHPs):
        self.isSpecial = isSpecial
        self.damage = damage
        self.spCharges = spCharges
        self.curHPs = curHPs
        self.healed = healed

# Effects distributed to allies/foes within their combats
class CombatField:
    def __init__(self, owner, range, condition, affectedSide, effect):
        self.owner = owner
        self.range = range
        self.condition = condition(owner)
        self.affectedSide = affectedSide  # False if targeting enemies, True if targeting allies
        self.effect = effect

# noah = Hero("Noah", 40, 48, 46, 38, 25, "Sword", 0, "Lucky Seven", "Reposition", "Overclock Buster", "Atk/Spd Overkill", "Kevesi Heart", "Brutal Tempest")
# mio = Hero("Mio", 38, 43, 48, 20, 44, "BDagger", 0, "Dual Moonblades", "Reposition", "Dominion Flower", "Perfect Spd/Res", "Agnian Soul", "Active Lookout")